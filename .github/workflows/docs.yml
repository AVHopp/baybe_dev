name: Documentation

on:
  push:
    branches:
      - main
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - uses: actions/setup-python@v5
        with: {python-version: "3.10"}
      - name: Install tox
        run: pip install tox-uv
      - name: Build Docs
        run: tox -e docs-py310 -- -r
      - name: Prepare gh-pages branch with HTML output from Sphinx
        run: |
            git fetch origin gh-pages:gh-pages
            git checkout gh-pages
            if [-d "latest" ]; then
              rm -rf latest
            fi
            mkdir ./latest
            cp -r docs/build/* ./latest
            echo "Successfully copied into latest"
            if ${{ github.event_name == 'release' }}; then
              FOLDER=${{github.event.release.tag_name}}
              mkdir ./$FOLDER
              cp -r docs/build/* ./$FOLDER
              echo "Copying files into stable folder"
              if [ -d "stable" ]; then
                echo "Deleting old stable folder."
                rm -rf stable
              fi
              mkdir ./stable
              cp -rv docs/build/* ./stable
              echo "Successfully copied into stable folder"
            fi
      - name: Update gh-pages branch
        run: |
            git config --local user.email "sphinx-upload[bot]@users.noreply.github.com"
            git config --local user.name "sphinx-upload[bot]"
            git_hash=$(git rev-parse --short "$GITHUB_SHA")
            git add -f latest
            python insert_banner.py $FOLDER
            git commit --allow-empty -m "Sphinx documentation for ${git_hash}"
            if ${{ github.event_name == 'release' }}; then
              FOLDER=${{github.event.release.tag_name}}
              git add -f $FOLDER
              echo "Adding stable as a separate folder"
              git add -f stable
              echo "Inserting announcement banner to documentation and add link for selector"
              python add_version.py $FOLDER
              python insert_banner.py $FOLDER
              git add .
              git commit -m "Add link to version to selector page and add banner"
            fi
            git push origin gh-pages
