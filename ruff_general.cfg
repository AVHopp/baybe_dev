line-length = 88 # Maximum line length

# These errors are ignored in general
# D105: Missing docstring in magic functions
# D107: Missing docstring in __init__
# PLR0912: Too many branches (too strict)
# PLR0913: Too many arguments in function definition (too strict)
# PLR0915: Too many statements (too strict)
# PLR2004: Magic value used in comparison
extend-ignore = ["E203", "D105", "D107", "PLR0912", "PLR0913", "PLR0915", "PLR2004"]

# Taken from original setup.cfg
[lint.per-file-ignores]
"examples/*" = [ 
        # Error for having multiple # signs per row
        "E266",
        # Error regarding too long lines
        "E501",
        # Missing module docstrings
        "D100"
]
"baybe/utils/__init__.py" = ["F401","F403"]
"baybe/strategies/__init__.py" = ["F401"]
# Exclude errors for the exception file as enforcing short summarys and similar 
# things would not be reasonable.
"baybe/exceptions.py" = ["D205", "D212", "D415"]
# Missing module docstrings in module/package
"tests/__init__.py" =  ["D100", "D104"]
"tests/serialization/__init__.py" = ["D100", "D104"]
"docs/conf.py" = ["D100"]
# Ignore missing docstrings in public methods/functions and imparative mood in tests
"tests/*" = ["D102", "D103", "D401"]


[lint]
# Here, we explicitly choose the rules that ruff should verify. This is currently a
# mix between rules we chose, the default rules and rules that are used by foundry
# dev tools (marked via FDT).
# For a full list of available rules, see https://docs.astral.sh/ruff/rules/
select=[
    "D", # Enforce all pydocstyle rules, will be filtered by the convention.
    "E501", # Add 'line-too-long' rule to the enforced rule set.
    "F", # Rules of flake8 according to https://docs.astral.sh/ruff/rules/#pyflakes-f,
    "I", # isort
    "E4", # default choice of ruff
    "E7", # default choice of ruff
    "E9", # default choice of ruff
    "W", # Warnings (FDT)
    "PL", # Pylint (FDT)

]

[lint.pydocstyle]
convention = "google"
