Search.setIndex({"alltitles": {"Acquisition function": [[349, "acquisition-function"]], "AcquisitionFunction": [[19, null]], "Active Learning": [[389, null]], "Added": [[385, "added"], [385, "id6"], [385, "id12"], [385, "id16"], [385, "id23"], [385, "id28"], [385, "id34"], [385, "id40"], [385, "id44"], [385, "id48"], [385, "id52"], [385, "id57"], [385, "id61"], [385, "id64"], [385, "id68"], [385, "id72"], [385, "id76"], [385, "id79"], [385, "id83"], [385, "id87"], [385, "id91"], [385, "id95"], [385, "id101"], [385, "id104"]], "Addendum: Description of transformation functions": [[369, "addendum-description-of-transformation-functions"]], "Adding Irrelevant Data": [[401, null]], "Adding measurements": [[390, "adding-measurements"]], "Additional Options for Discrete Search Spaces": [[395, null]], "AdditiveKernel": [[84, null]], "Advanced Example: Chemical Substances": [[383, "advanced-example-chemical-substances"]], "Architecture definition": [[365, "architecture-definition"]], "Automatic field conversion": [[397, "automatic-field-conversion"]], "Available models": [[399, "available-models"]], "Available recommenders suitable for initial recommendation": [[349, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[349, "available-surrogate-models"]], "Backtesting": [[339, null], [380, null]], "Basic Instructions": [[392, "basic-instructions"]], "Basic creation": [[390, "basic-creation"]], "Basic example for using BayBE": [[348, null]], "Basic string assembly": [[397, "basic-string-assembly"]], "BasicKernel": [[71, null]], "Basics": [[347, null], [390, "basics"]], "Batch optimization": [[390, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[383, null]], "Bayesian Recommenders": [[395, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[237, null]], "BayesianRecommender": [[156, null]], "BotorchRecommender": [[158, null]], "Bound methods": [[360, "bound-methods"]], "Breaking Changes": [[385, "breaking-changes"]], "Building from the Product of Parameter Values": [[396, "building-from-the-product-of-parameter-values"], [396, "id2"]], "Caching of recommendations": [[390, "caching-of-recommendations"]], "Campaign": [[26, null]], "Campaign Stopping": [[361, null]], "Campaigns": [[390, null]], "CardinalityConstraint": [[29, null]], "CategoricalEncoding": [[113, null]], "CategoricalParameter": [[108, null], [394, "categoricalparameter"]], "Changed": [[385, "changed"], [385, "id3"], [385, "id7"], [385, "id13"], [385, "id17"], [385, "id20"], [385, "id24"], [385, "id29"], [385, "id35"], [385, "id41"], [385, "id45"], [385, "id49"], [385, "id53"], [385, "id58"], [385, "id62"], [385, "id65"], [385, "id69"], [385, "id73"], [385, "id77"], [385, "id80"], [385, "id84"], [385, "id88"], [385, "id92"], [385, "id96"]], "Changelog": [[385, null]], "Clustering Recommenders": [[395, "clustering-recommenders"]], "Code Design": [[386, "code-design"]], "Comparing recommendations in both objects": [[376, "comparing-recommendations-in-both-objects"]], "CompositeKernel": [[72, null]], "Condition": [[36, null]], "Conditions": [[391, "conditions"]], "Constraint": [[30, null]], "Constraints": [[391, null]], "Constraints Continuous": [[350, null]], "Constraints Discrete": [[353, null]], "Construct the campaign and run some iterations": [[351, "construct-the-campaign-and-run-some-iterations"], [352, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[396, "constructing-full-search-spaces"]], "Constructing a campaign and performing the simulation loop": [[346, "constructing-a-campaign-and-performing-the-simulation-loop"]], "Constructing campaigns": [[340, "constructing-campaigns"]], "Constructing campaigns for the simulation loop": [[341, "constructing-campaigns-for-the-simulation-loop"], [342, "constructing-campaigns-for-the-simulation-loop"], [343, "constructing-campaigns-for-the-simulation-loop"], [344, "constructing-campaigns-for-the-simulation-loop"], [345, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[396, "constructing-from-a-dataframe"], [396, "id1"], [396, "id3"]], "Constructing hybrid recommenders": [[374, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[371, "constructing-the-campaign-and-performing-a-recommendation"], [372, "constructing-the-campaign-and-performing-a-recommendation"], [373, "constructing-the-campaign-and-performing-a-recommendation"], [374, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[344, "constructing-the-hybrid-searchspace"], [374, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[391, "continuous-constraints"]], "Continuous Constraints in Single Precision": [[392, null]], "Continuous Parameters": [[394, "continuous-parameters"]], "Continuous Subspaces": [[396, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[40, null]], "ContinuousConstraint": [[31, null]], "ContinuousLinearConstraint": [[32, null]], "ContinuousLinearEqualityConstraint": [[41, null], [391, "continuouslinearequalityconstraint"]], "ContinuousLinearInequalityConstraint": [[42, null], [391, "continuouslinearinequalityconstraint"]], "ContinuousNonlinearConstraint": [[33, null]], "ContinuousParameter": [[104, null]], "Contributing to BayBE": [[386, null]], "Contributors": [[387, null], [387, "id1"]], "Convenience construction and implicit conversion": [[393, null]], "Convert model to onnx": [[366, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[366, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[367, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[366, "create-campaign"]], "Creating a Simplex-Bound Discrete Subspace": [[396, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign": [[390, "creating-a-campaign"]], "Creating a campaign from the configuration file": [[377, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[354, "creating-and-printing-the-campaign"], [355, "creating-and-printing-the-campaign"], [357, "creating-and-printing-the-campaign"], [358, "creating-and-printing-the-campaign"], [369, "creating-and-printing-the-campaign"]], "Creating multiple target object": [[346, "creating-multiple-target-object"]], "Creating the Objective": [[343, "creating-the-objective"]], "Creating the Optimization Objective": [[380, "creating-the-optimization-objective"], [381, "creating-the-optimization-objective"]], "Creating the Search Space": [[380, "creating-the-search-space"]], "Creating the Searchspace": [[381, "creating-the-searchspace"]], "Creating the campaign": [[349, "creating-the-campaign"], [367, "creating-the-campaign"], [376, "creating-the-campaign"]], "Creating the constraint": [[354, "creating-the-constraint"], [356, "creating-the-constraint"], [357, "creating-the-constraint"]], "Creating the constraints": [[355, "creating-the-constraints"], [358, "creating-the-constraints"]], "Creating the objective": [[369, "creating-the-objective"]], "Creating the objective object": [[346, "creating-the-objective-object"]], "Creating the recommender object": [[349, "creating-the-recommender-object"]], "Creating the searchspace": [[346, "creating-the-searchspace"]], "Creating the searchspace and the objective": [[340, "creating-the-searchspace-and-the-objective"], [341, "creating-the-searchspace-and-the-objective"], [342, "creating-the-searchspace-and-the-objective"], [345, "creating-the-searchspace-and-the-objective"], [351, "creating-the-searchspace-and-the-objective"], [352, "creating-the-searchspace-and-the-objective"], [354, "creating-the-searchspace-and-the-objective"], [355, "creating-the-searchspace-and-the-objective"], [356, "creating-the-searchspace-and-the-objective"], [357, "creating-the-searchspace-and-the-objective"], [358, "creating-the-searchspace-and-the-objective"], [371, "creating-the-searchspace-and-the-objective"], [372, "creating-the-searchspace-and-the-objective"], [373, "creating-the-searchspace-and-the-objective"]], "Creation from a JSON config": [[390, "creation-from-a-json-config"]], "Custom Hooks": [[359, null]], "Custom Surrogates": [[363, null]], "CustomDiscreteParameter": [[111, null], [394, "customdiscreteparameter"]], "CustomEncoding": [[114, null]], "CustomONNXSurrogate": [[219, null]], "Dataframe deserialization": [[397, "dataframe-deserialization"]], "DefaultKernelFactory": [[233, null]], "DefaultScaler": [[173, null]], "Defining config dictionaries": [[378, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[361, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[362, "defining-the-hook"]], "Defining the Hooks": [[360, "defining-the-hooks"]], "Defining the Optimization Objective": [[383, "defining-the-optimization-objective"]], "Defining the Search Space": [[383, "defining-the-search-space"]], "Defining the Tasks": [[380, "defining-the-tasks"], [381, "defining-the-tasks"]], "Defining the custom test function": [[372, "defining-the-custom-test-function"]], "Defining the targets": [[369, "defining-the-targets"]], "Defining the test function": [[340, "defining-the-test-function"], [341, "defining-the-test-function"], [346, "defining-the-test-function"], [351, "defining-the-test-function"], [352, "defining-the-test-function"], [371, "defining-the-test-function"], [373, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[374, "defining-the-test-function-and-the-hybrid-dimensions"]], "Defining the test function.": [[344, "defining-the-test-function"]], "Deprecations": [[385, "deprecations"], [385, "id10"], [385, "id26"], [385, "id32"], [385, "id38"], [385, "id55"]], "Deserialization from configuration strings": [[397, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[96, null], [393, "desirabilityobjective"]], "Developer Tools": [[386, "developer-tools"]], "Discrete Constraints": [[391, "discrete-constraints"]], "Discrete Parameters": [[394, "discrete-parameters"]], "Discrete Subspaces": [[396, "discrete-subspaces"]], "DiscreteCardinalityConstraint": [[44, null]], "DiscreteConstraint": [[34, null]], "DiscreteCustomConstraint": [[45, null], [391, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[46, null], [391, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[47, null], [391, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[48, null], [391, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[49, null], [391, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[105, null]], "DiscretePermutationInvarianceConstraint": [[50, null], [391, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[51, null]], "DiscreteSamplingMethod": [[329, null]], "DiscreteSumConstraint": [[52, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[391, "discretesumconstraint-and-discreteproductconstraint"]], "Disk Caching": [[392, "disk-caching"]], "Dummy": [[273, null]], "EDBOKernelFactory": [[235, null]], "Environment Variables": [[392, null]], "Equivalent copies": [[397, null]], "Example Searchspace and objective parameters": [[349, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[351, null]], "Example for creating campaigns from configs": [[377, null]], "Example for custom parameter passing in surrogate models": [[367, null]], "Example for full simulation loop using a custom analytical test function": [[341, null]], "Example for full simulation loop using a custom analytical test function in a hybrid": [[344, null]], "Example for full simulation loop using a table-based lookup mechanism": [[343, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[345, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[342, null]], "Example for full simulation loop using the multi target mode for custom analytic": [[346, null]], "Example for linear constraints in a continuous searchspace": [[352, null]], "Example for surrogate model with a custom architecture using pytorch": [[365, null]], "Example for surrogate model with a custom architecture using sklearn": [[364, null]], "Example for surrogate model with a custom pretrained model": [[366, null]], "Example for the serialization of a campaign": [[376, null]], "Example for using a custom BoTorch test function in a continuous searchspace": [[372, null]], "Example for using a mixture use case in a discrete searchspace": [[357, null]], "Example for using a synthetic BoTorch test function in a continuous searchspace": [[371, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[373, null]], "Example for using custom constraints in discrete searchspaces": [[354, null]], "Example for using dependency constraints in discrete searchspaces": [[355, null]], "Example for using different strategies": [[349, null]], "Example for using exclusion constraints in discrete searchspaces": [[356, null]], "Example for using exclusion constraints incorporating sums and products": [[358, null]], "Example for using synthetic test functions in hybrid spaces": [[374, null]], "Example for using the multi target mode for the objective": [[369, null]], "Example for validation of a config file": [[378, null]], "Examples": [[382, null]], "Expectations": [[401, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[364, "experiment-setup"], [365, "experiment-setup"], [366, "experiment-setup"], [367, "experiment-setup"]], "Experiment setup": [[354, "experiment-setup"], [355, "experiment-setup"], [356, "experiment-setup"], [357, "experiment-setup"], [358, "experiment-setup"], [376, "experiment-setup"]], "Experiment setup and creating the searchspace": [[369, "experiment-setup-and-creating-the-searchspace"]], "Expired Deprecations (from 0.6.*)": [[385, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[385, "expired-deprecations-from-0-7"]], "Extending BayBE\u2019s Functionality": [[386, "extending-baybe-s-functionality"]], "FPSRecommender": [[170, null]], "Fixed": [[385, "fixed"], [385, "id4"], [385, "id9"], [385, "id14"], [385, "id18"], [385, "id25"], [385, "id30"], [385, "id36"], [385, "id42"], [385, "id50"], [385, "id54"], [385, "id59"], [385, "id66"], [385, "id70"], [385, "id74"], [385, "id81"], [385, "id85"], [385, "id89"], [385, "id93"], [385, "id97"], [385, "id99"], [385, "id102"]], "Floating Point Precision": [[392, "floating-point-precision"]], "From GitHub": [[383, "from-github"]], "From Local Clone": [[383, "from-local-clone"]], "From Package Index": [[383, "from-package-index"]], "From the Default Constructor": [[396, "from-the-default-constructor"]], "Further information": [[390, "further-information"]], "GammaPrior": [[133, null]], "GaussianMixtureClusteringRecommender": [[165, null]], "GaussianProcessPreset": [[230, null]], "GaussianProcessSurrogate": [[223, null]], "General Information": [[395, "general-information"]], "General Workflow": [[386, "general-workflow"]], "Generating Lookup Tables": [[380, "generating-lookup-tables"], [381, "generating-lookup-tables"]], "Getting a recommendation and adding measurements": [[348, "getting-a-recommendation-and-adding-measurements"]], "Getting recommendations": [[390, "getting-recommendations"]], "Global Uncertainty Reduction": [[389, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[134, null]], "HalfNormalPrior": [[135, null]], "Hook instance vs. target instance": [[360, null]], "How to avoid": [[384, "how-to-avoid"]], "Hybrid constraints": [[391, null]], "Imports": [[340, "imports"], [360, "imports"], [362, "imports"], [380, "imports"], [381, "imports"]], "Inclusion of initial data": [[342, "inclusion-of-initial-data"]], "Indices and Tables": [[383, "indices-and-tables"]], "Interval": [[311, null]], "Invoking alternative constructors": [[397, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[366, "iterate-with-recommendations-and-measurements"], [367, "iterate-with-recommendations-and-measurements"]], "JSON de-/serialization": [[397, "json-de-serialization"]], "KMeansClusteringRecommender": [[166, null]], "Kernel": [[73, null]], "KernelFactory": [[225, null]], "License": [[388, null]], "Limitations": [[400, "limitations"]], "LinearKernel": [[75, null]], "Links for documentation": [[367, "links-for-documentation"]], "Local Uncertainty Reduction": [[389, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[136, null]], "Lookup functionality and data creation": [[342, "lookup-functionality-and-data-creation"], [343, "lookup-functionality-and-data-creation"], [345, "lookup-functionality-and-data-creation"]], "MATCH mode": [[400, "match-mode"]], "MIN and MAX mode": [[400, "min-and-max-mode"]], "Maintainers": [[387, "maintainers"]], "Mandatory target bounds": [[393, null]], "Manual verification of the constraint": [[354, "manual-verification-of-the-constraint"], [357, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[355, "manual-verification-of-the-constraints"], [356, "manual-verification-of-the-constraints"], [358, "manual-verification-of-the-constraints"]], "MaternKernel": [[76, null]], "MeanPredictionSurrogate": [[239, null]], "MemorySize": [[184, null]], "Meta Recommenders": [[395, "meta-recommenders"]], "MetaRecommender": [[144, null]], "Metadata": [[396, "metadata"]], "Model Outputs": [[366, "model-outputs"], [367, "model-outputs"]], "Monitoring the Probability of Improvement": [[362, null]], "Monkeypatching": [[360, "monkeypatching"], [361, null], [362, "monkeypatching"]], "Multi Target": [[368, null]], "NGBoostSurrogate": [[241, null]], "NaiveHybridSpaceRecommender": [[150, null]], "Necessary imports": [[364, "necessary-imports"], [365, "necessary-imports"], [366, "necessary-imports"], [367, "necessary-imports"], [372, "necessary-imports"], [376, "necessary-imports"], [377, "necessary-imports"], [378, "necessary-imports"]], "Necessary imports for this example": [[341, "necessary-imports-for-this-example"], [342, "necessary-imports-for-this-example"], [343, "necessary-imports-for-this-example"], [344, "necessary-imports-for-this-example"], [345, "necessary-imports-for-this-example"], [346, "necessary-imports-for-this-example"], [348, "necessary-imports-for-this-example"], [349, "necessary-imports-for-this-example"], [351, "necessary-imports-for-this-example"], [352, "necessary-imports-for-this-example"], [354, "necessary-imports-for-this-example"], [355, "necessary-imports-for-this-example"], [356, "necessary-imports-for-this-example"], [357, "necessary-imports-for-this-example"], [358, "necessary-imports-for-this-example"], [369, "necessary-imports-for-this-example"], [371, "necessary-imports-for-this-example"], [373, "necessary-imports-for-this-example"], [374, "necessary-imports-for-this-example"]], "Nesting objects": [[397, "nesting-objects"]], "NonPredictiveRecommender": [[163, null]], "NormalPrior": [[137, null]], "NumericalContinuousParameter": [[118, null], [394, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[119, null], [394, "numericaldiscreteparameter"]], "NumericalTarget": [[258, null], [400, "numericaltarget"]], "Objective": [[91, null], [393, null]], "Optional Dependencies": [[383, "optional-dependencies"]], "Optional dependency": [[394, null]], "Optional: Defining the Optimization Strategy": [[383, "optional-defining-the-optimization-strategy"]], "Other parameters": [[349, "other-parameters"]], "PAMClusteringRecommender": [[167, null]], "Parameter": [[106, null]], "Parameter encoding": [[394, null]], "Parameter names": [[394, null]], "Parameter tolerances": [[390, null]], "ParameterEncoding": [[115, null]], "Parameters": [[394, null]], "Parameters for a full simulation loop": [[340, "parameters-for-a-full-simulation-loop"], [341, "parameters-for-a-full-simulation-loop"], [342, "parameters-for-a-full-simulation-loop"], [343, "parameters-for-a-full-simulation-loop"], [344, "parameters-for-a-full-simulation-loop"], [345, "parameters-for-a-full-simulation-loop"], [346, "parameters-for-a-full-simulation-loop"]], "PartialAcquisitionFunction": [[21, null]], "Performing some iterations": [[369, "performing-some-iterations"]], "Performing the simulation loop": [[340, "performing-the-simulation-loop"], [341, "performing-the-simulation-loop"], [342, "performing-the-simulation-loop"]], "PeriodicKernel": [[77, null]], "PiecewisePolynomialKernel": [[78, null]], "PlainKernelFactory": [[226, null]], "Plotting the Results": [[361, "plotting-the-results"], [362, "plotting-the-results"]], "Polars": [[392, "polars"]], "PolynomialKernel": [[79, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Prior": [[131, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[361, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[85, null]], "Pure Recommenders": [[395, "pure-recommenders"]], "PureRecommender": [[153, null]], "Purely Continuous Search Spaces": [[389, null]], "PyCharm vs. exceptiongroup": [[384, null]], "RBFKernel": [[80, null]], "RFFKernel": [[81, null]], "RQKernel": [[82, null]], "RandomForestSurrogate": [[243, null]], "RandomRecommender": [[171, null]], "RecommenderProtocol": [[141, null]], "Recommenders": [[395, null]], "Registering Custom Hooks": [[360, null]], "Removed": [[385, "removed"], [385, "id8"], [385, "id21"], [385, "id31"], [385, "id37"], [385, "id46"]], "Representation of Data within Discrete Subspaces": [[396, "representation-of-data-within-discrete-subspaces"]], "Restricting Search Spaces Using Constraints": [[396, "restricting-search-spaces-using-constraints"]], "Reversing the inequality": [[391, null]], "Run DOE iterations with custom surrogate": [[364, "run-doe-iterations-with-custom-surrogate"], [365, "run-doe-iterations-with-custom-surrogate"]], "SKLearnClusteringRecommender": [[168, null]], "Sampling Recommenders": [[395, "sampling-recommenders"]], "Scalarizer": [[99, null]], "ScaleKernel": [[86, null]], "Scaler": [[174, null]], "Search Spaces": [[396, null]], "SearchSpace": [[179, null]], "SearchSpaceType": [[180, null]], "Searchspaces": [[370, null]], "Seeing Transfer Learning in Action": [[401, "seeing-transfer-learning-in-action"]], "Sequential vs. parallel experimentation": [[390, null]], "SequentialMetaRecommender": [[146, null]], "SerialMixin": [[202, null]], "Serialization": [[364, "serialization"], [365, "serialization"], [375, null], [390, "serialization"], [397, null]], "Serialization and de-serialization": [[376, "serialization-and-de-serialization"]], "Settings": [[361, "settings"], [362, "settings"], [380, "settings"], [381, "settings"]], "Setup": [[348, "setup"]], "Signature components": [[360, null]], "Simulating Multiple Scenarios": [[398, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[398, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[398, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[361, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[361, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[398, null]], "Simulation Loop": [[380, "simulation-loop"], [381, "simulation-loop"]], "Simulation loop using a BoTorch test function": [[340, null]], "SingleTargetObjective": [[101, null], [393, "singletargetobjective"]], "SmoothedBoxPrior": [[138, null]], "StreamingSequentialMetaRecommender": [[147, null]], "Sub-Sampling Method": [[389, null]], "SubSelectionCondition": [[37, null], [391, "subselectioncondition"]], "SubspaceContinuous": [[177, null]], "SubspaceDiscrete": [[185, null]], "SubstanceEncoding": [[116, null]], "SubstanceParameter": [[122, null], [394, "substanceparameter"]], "Surrogate": [[217, null]], "Surrogate Definition with BayBE Registration": [[364, "surrogate-definition-with-baybe-registration"], [365, "surrogate-definition-with-baybe-registration"]], "Surrogates": [[399, null]], "Synchronizing Pull Requests": [[386, "synchronizing-pull-requests"]], "Target": [[253, null]], "TargetMode": [[255, null]], "TargetTransformation": [[256, null]], "Targets": [[400, null]], "TaskParameter": [[109, null], [394, "taskparameter"]], "Technology": [[401, null]], "Telemetry": [[392, "telemetry"]], "Telemetry Scope": [[392, null]], "Terminology": [[397, null], [401, null]], "Terminology Continued": [[401, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[398, "terminology-what-do-we-mean-by-simulation"]], "The Lookup Functionality": [[398, "the-lookup-functionality"]], "The Optimization Loop": [[383, "the-optimization-loop"]], "The Problem": [[384, "the-problem"]], "The Role of the TaskParameter": [[401, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[377, "the-configuration-dictionary-as-a-string"]], "The type field": [[397, "the-type-field"]], "ThresholdCondition": [[38, null], [391, "thresholdcondition"]], "Transfer Learning": [[379, null], [381, null], [401, null]], "Triggering the Hook": [[362, "triggering-the-hook"]], "Triggering the Hooks": [[360, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[148, null]], "Uninstalling Internet Packages": [[392, null]], "Unlocking Data Treasures Through Transfer Learning": [[401, "unlocking-data-treasures-through-transfer-learning"]], "UpperConfidenceBound": [[8, null]], "User guide": [[402, null]], "Using Explicit Bounds": [[396, "using-explicit-bounds"]], "Using a Callable": [[398, "using-a-callable"]], "Using a Dataframe": [[398, "using-a-dataframe"]], "Using abbreviations": [[397, "using-abbreviations"]], "Using configuration instead": [[366, "using-configuration-instead"], [367, "using-configuration-instead"]], "Using custom models": [[399, "using-custom-models"]], "Using default values": [[397, "using-default-values"]], "Validation of model parameters": [[367, "validation-of-model-parameters"]], "Verification of the two dictionaries": [[378, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[352, "verify-the-constraints"]], "When to encounter": [[384, "when-to-encounter"]], "Writing Docstrings": [[386, "writing-docstrings"]], "Writing attrs classes": [[386, "writing-attrs-classes"]], "[0.1.0] - 2022-10-01": [[385, "id103"]], "[0.10.0] - 2024-08-02": [[385, "id1"]], "[0.2.0] - 2022-11-10": [[385, "id100"]], "[0.2.1] - 2022-12-01": [[385, "id98"]], "[0.2.2] - 2023-01-13": [[385, "id94"]], "[0.2.3] - 2023-03-14": [[385, "id90"]], "[0.2.4] - 2023-03-24": [[385, "id86"]], "[0.3.0] - 2023-06-27": [[385, "id82"]], "[0.3.1] - 2023-07-17": [[385, "id78"]], "[0.3.2] - 2023-07-24": [[385, "id75"]], "[0.4.0] - 2023-08-16": [[385, "id71"]], "[0.4.1] - 2023-08-23": [[385, "id67"]], "[0.4.2] - 2023-08-29": [[385, "id63"]], "[0.5.0] - 2023-09-15": [[385, "id60"]], "[0.5.1] - 2023-10-19": [[385, "id56"]], "[0.6.0] - 2023-11-17": [[385, "id51"]], "[0.6.1] - 2023-11-27": [[385, "id47"]], "[0.7.0] - 2023-12-04": [[385, "id43"]], "[0.7.1] - 2023-12-07": [[385, "id39"]], "[0.7.2] - 2024-01-24": [[385, "id33"]], "[0.7.3] - 2024-02-09": [[385, "id27"]], "[0.7.4] - 2024-02-28": [[385, "id22"]], "[0.8.0] - 2024-02-29": [[385, "id19"]], "[0.8.1] - 2024-03-11": [[385, "id15"]], "[0.8.2] - 2024-03-27": [[385, "id11"]], "[0.9.0] - 2024-05-21": [[385, "id5"]], "[0.9.1] - 2024-06-04": [[385, "id2"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[18, null]], "baybe.acquisition.partial": [[20, null]], "baybe.acquisition.utils": [[22, null]], "baybe.acquisition.utils.convert_acqf": [[23, null]], "baybe.acquisition.utils.str_to_acqf": [[24, null]], "baybe.campaign": [[25, null]], "baybe.constraints": [[27, null]], "baybe.constraints.base": [[28, null]], "baybe.constraints.conditions": [[35, null]], "baybe.constraints.continuous": [[39, null]], "baybe.constraints.discrete": [[43, null]], "baybe.constraints.validation": [[53, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[54, null]], "baybe.constraints.validation.validate_constraints": [[55, null]], "baybe.exceptions": [[56, null]], "baybe.exceptions.DeprecationError": [[57, null]], "baybe.exceptions.EmptySearchSpaceError": [[58, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[59, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[60, null]], "baybe.exceptions.NoRecommendersLeftError": [[61, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[62, null]], "baybe.exceptions.NothingToSimulateError": [[63, null]], "baybe.exceptions.NumericalUnderflowError": [[64, null]], "baybe.exceptions.OptionalImportError": [[65, null]], "baybe.exceptions.UnidentifiedSubclassError": [[66, null]], "baybe.exceptions.UnmatchedAttributeError": [[67, null]], "baybe.exceptions.UnusedObjectWarning": [[68, null]], "baybe.kernels": [[69, null]], "baybe.kernels.base": [[70, null]], "baybe.kernels.basic": [[74, null]], "baybe.kernels.composite": [[83, null]], "baybe.objective": [[87, null]], "baybe.objective.Objective": [[88, null]], "baybe.objectives": [[89, null]], "baybe.objectives.base": [[90, null]], "baybe.objectives.base.to_objective": [[92, null]], "baybe.objectives.deprecation": [[93, null]], "baybe.objectives.deprecation.structure_objective": [[94, null]], "baybe.objectives.desirability": [[95, null]], "baybe.objectives.desirability.scalarize": [[97, null]], "baybe.objectives.enum": [[98, null]], "baybe.objectives.single": [[100, null]], "baybe.parameters": [[102, null]], "baybe.parameters.base": [[103, null]], "baybe.parameters.categorical": [[107, null]], "baybe.parameters.custom": [[110, null]], "baybe.parameters.enum": [[112, null]], "baybe.parameters.numerical": [[117, null]], "baybe.parameters.substance": [[120, null]], "baybe.parameters.substance.Smiles": [[121, null]], "baybe.parameters.utils": [[123, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[124, null]], "baybe.parameters.validation": [[125, null]], "baybe.parameters.validation.validate_decorrelation": [[126, null]], "baybe.parameters.validation.validate_is_finite": [[127, null]], "baybe.parameters.validation.validate_unique_values": [[128, null]], "baybe.priors": [[129, null]], "baybe.priors.base": [[130, null]], "baybe.priors.basic": [[132, null]], "baybe.recommenders": [[139, null]], "baybe.recommenders.base": [[140, null]], "baybe.recommenders.meta": [[142, null]], "baybe.recommenders.meta.base": [[143, null]], "baybe.recommenders.meta.sequential": [[145, null]], "baybe.recommenders.naive": [[149, null]], "baybe.recommenders.pure": [[151, null]], "baybe.recommenders.pure.base": [[152, null]], "baybe.recommenders.pure.bayesian": [[154, null]], "baybe.recommenders.pure.bayesian.base": [[155, null]], "baybe.recommenders.pure.bayesian.botorch": [[157, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[159, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[160, null]], "baybe.recommenders.pure.nonpredictive": [[161, null]], "baybe.recommenders.pure.nonpredictive.base": [[162, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[164, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[169, null]], "baybe.scaler": [[172, null]], "baybe.searchspace": [[175, null]], "baybe.searchspace.continuous": [[176, null]], "baybe.searchspace.core": [[178, null]], "baybe.searchspace.core.to_searchspace": [[181, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[182, null]], "baybe.searchspace.discrete": [[183, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[186, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[187, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[188, null]], "baybe.searchspace.validation": [[189, null]], "baybe.searchspace.validation.get_transform_parameters": [[190, null]], "baybe.searchspace.validation.validate_parameter_names": [[191, null]], "baybe.searchspace.validation.validate_parameters": [[192, null]], "baybe.serialization": [[193, null]], "baybe.serialization.core": [[194, null]], "baybe.serialization.core.block_deserialization_hook": [[195, null]], "baybe.serialization.core.block_serialization_hook": [[196, null]], "baybe.serialization.core.converter": [[197, null]], "baybe.serialization.core.get_base_structure_hook": [[198, null]], "baybe.serialization.core.select_constructor_hook": [[199, null]], "baybe.serialization.core.unstructure_base": [[200, null]], "baybe.serialization.mixin": [[201, null]], "baybe.serialization.utils": [[203, null]], "baybe.serialization.utils.deserialize_dataframe": [[204, null]], "baybe.serialization.utils.serialize_dataframe": [[205, null]], "baybe.simulation": [[206, null]], "baybe.simulation.core": [[207, null]], "baybe.simulation.core.simulate_experiment": [[208, null]], "baybe.simulation.lookup": [[209, null]], "baybe.simulation.lookup.look_up_targets": [[210, null]], "baybe.simulation.scenarios": [[211, null]], "baybe.simulation.scenarios.simulate_scenarios": [[212, null]], "baybe.simulation.transfer_learning": [[213, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[214, null]], "baybe.surrogates": [[215, null]], "baybe.surrogates.base": [[216, null]], "baybe.surrogates.custom": [[218, null]], "baybe.surrogates.custom.register_custom_architecture": [[220, null]], "baybe.surrogates.gaussian_process": [[221, null]], "baybe.surrogates.gaussian_process.core": [[222, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[224, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[227, null]], "baybe.surrogates.gaussian_process.presets": [[228, null]], "baybe.surrogates.gaussian_process.presets.core": [[229, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[231, null]], "baybe.surrogates.gaussian_process.presets.default": [[232, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[234, null]], "baybe.surrogates.linear": [[236, null]], "baybe.surrogates.naive": [[238, null]], "baybe.surrogates.ngboost": [[240, null]], "baybe.surrogates.random_forest": [[242, null]], "baybe.surrogates.utils": [[244, null]], "baybe.surrogates.utils.autoscale": [[245, null]], "baybe.surrogates.utils.batchify": [[246, null]], "baybe.surrogates.utils.catch_constant_targets": [[247, null]], "baybe.surrogates.validation": [[248, null]], "baybe.surrogates.validation.get_model_params_validator": [[249, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[250, null]], "baybe.targets": [[251, null]], "baybe.targets.base": [[252, null]], "baybe.targets.enum": [[254, null]], "baybe.targets.numerical": [[257, null]], "baybe.targets.transforms": [[259, null]], "baybe.targets.transforms.bell_transform": [[260, null]], "baybe.targets.transforms.linear_transform": [[261, null]], "baybe.targets.transforms.triangular_transform": [[262, null]], "baybe.telemetry": [[263, null]], "baybe.telemetry.get_user_details": [[264, null]], "baybe.telemetry.is_enabled": [[265, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[266, null]], "baybe.telemetry.telemetry_record_value": [[267, null]], "baybe.utils": [[268, null]], "baybe.utils.augmentation": [[269, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[270, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[271, null]], "baybe.utils.basic": [[272, null]], "baybe.utils.basic.find_subclass": [[275, null]], "baybe.utils.basic.get_baseclasses": [[276, null]], "baybe.utils.basic.get_subclasses": [[277, null]], "baybe.utils.basic.group_duplicate_values": [[278, null]], "baybe.utils.basic.hilberts_factory": [[279, null]], "baybe.utils.basic.match_attributes": [[280, null]], "baybe.utils.basic.refers_to": [[281, null]], "baybe.utils.basic.register_hooks": [[282, null]], "baybe.utils.basic.to_tuple": [[283, null]], "baybe.utils.boolean": [[284, null]], "baybe.utils.boolean.check_if_in": [[285, null]], "baybe.utils.boolean.is_abstract": [[286, null]], "baybe.utils.boolean.strtobool": [[287, null]], "baybe.utils.botorch_wrapper": [[288, null]], "baybe.utils.botorch_wrapper.botorch_function_wrapper": [[289, null]], "baybe.utils.chemistry": [[290, null]], "baybe.utils.chemistry.get_canonical_smiles": [[291, null]], "baybe.utils.chemistry.is_valid_smiles": [[292, null]], "baybe.utils.chemistry.name_to_smiles": [[293, null]], "baybe.utils.chemistry.smiles_to_fp_features": [[294, null]], "baybe.utils.chemistry.smiles_to_molecules": [[295, null]], "baybe.utils.chemistry.smiles_to_mordred_features": [[296, null]], "baybe.utils.chemistry.smiles_to_rdkit_features": [[297, null]], "baybe.utils.conversion": [[298, null]], "baybe.utils.conversion.fraction_to_float": [[299, null]], "baybe.utils.dataframe": [[300, null]], "baybe.utils.dataframe.add_fake_results": [[301, null]], "baybe.utils.dataframe.add_parameter_noise": [[302, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[303, null]], "baybe.utils.dataframe.df_drop_string_columns": [[304, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[305, null]], "baybe.utils.dataframe.fuzzy_row_match": [[306, null]], "baybe.utils.dataframe.pretty_print_df": [[307, null]], "baybe.utils.dataframe.to_tensor": [[308, null]], "baybe.utils.interval": [[309, null]], "baybe.utils.interval.InfiniteIntervalError": [[310, null]], "baybe.utils.interval.convert_bounds": [[312, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[313, null]], "baybe.utils.memory": [[314, null]], "baybe.utils.memory.bytes_to_human_readable": [[315, null]], "baybe.utils.numerical": [[316, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[317, null]], "baybe.utils.numerical.DTypeFloatONNX": [[318, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[319, null]], "baybe.utils.numerical.closer_element": [[320, null]], "baybe.utils.numerical.closest_element": [[321, null]], "baybe.utils.numerical.geom_mean": [[322, null]], "baybe.utils.plotting": [[323, null]], "baybe.utils.plotting.create_example_plots": [[324, null]], "baybe.utils.random": [[325, null]], "baybe.utils.random.set_random_seed": [[326, null]], "baybe.utils.random.temporary_seed": [[327, null]], "baybe.utils.sampling_algorithms": [[328, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[330, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[331, null]], "baybe.utils.torch": [[332, null]], "baybe.utils.torch.DTypeFloatTorch": [[333, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[334, null]], "baybe.utils.validation": [[335, null]], "baybe.utils.validation.finite_float": [[336, null]], "baybe.utils.validation.non_inf_float": [[337, null]], "baybe.utils.validation.non_nan_float": [[338, null]], "classproperty": [[274, null]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNoisyExpectedImprovement": [[12, null]], "qNegIntegratedPosteriorVariance": [[13, null]], "qNoisyExpectedImprovement": [[14, null]], "qProbabilityOfImprovement": [[15, null]], "qSimpleRegret": [[16, null]], "qUpperConfidenceBound": [[17, null]], "\u201cPre-training\u201d stage": [[366, "pre-training-stage"]], "\u26a1 Quick Start": [[383, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[383, "maintainers"]], "\ud83d\udcbb Installation": [[383, "installation"]], "\ud83d\udcc4 License": [[383, "license"]], "\ud83d\udce1 Telemetry": [[383, "telemetry"]], "\ud83d\udee0\ufe0f Known Issues": [[383, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousLinearConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objective", "_autosummary/baybe.objective.Objective", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.deprecation", "_autosummary/baybe.objectives.deprecation.structure_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.scaler", "_autosummary/baybe.scaler.DefaultScaler", "_autosummary/baybe.scaler.Scaler", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.autoscale", "_autosummary/baybe.surrogates.utils.batchify", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.botorch_wrapper", "_autosummary/baybe.utils.botorch_wrapper.botorch_function_wrapper", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.is_valid_smiles", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fp_features", "_autosummary/baybe.utils.chemistry.smiles_to_molecules", "_autosummary/baybe.utils.chemistry.smiles_to_mordred_features", "_autosummary/baybe.utils.chemistry.smiles_to_rdkit_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_results", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.plotting", "_autosummary/baybe.utils.plotting.create_example_plots", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "examples/Backtesting/Backtesting", "examples/Backtesting/botorch_analytical", "examples/Backtesting/custom_analytical", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/hybrid", "examples/Backtesting/impute_mode", "examples/Backtesting/multi_target", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/mixture_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_architecture_sklearn", "examples/Custom_Surrogates/custom_architecture_torch", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space_botorch_function", "examples/Searchspaces/continuous_space_custom_function", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objective.rst", "_autosummary/baybe.objective.Objective.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.deprecation.rst", "_autosummary/baybe.objectives.deprecation.structure_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.scaler.rst", "_autosummary/baybe.scaler.DefaultScaler.rst", "_autosummary/baybe.scaler.Scaler.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.autoscale.rst", "_autosummary/baybe.surrogates.utils.batchify.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.botorch_wrapper.rst", "_autosummary/baybe.utils.botorch_wrapper.botorch_function_wrapper.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.is_valid_smiles.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fp_features.rst", "_autosummary/baybe.utils.chemistry.smiles_to_molecules.rst", "_autosummary/baybe.utils.chemistry.smiles_to_mordred_features.rst", "_autosummary/baybe.utils.chemistry.smiles_to_rdkit_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_results.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.plotting.rst", "_autosummary/baybe.utils.plotting.create_example_plots.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/botorch_analytical.md", "examples/Backtesting/custom_analytical.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/hybrid.md", "examples/Backtesting/impute_mode.md", "examples/Backtesting/multi_target.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/mixture_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_architecture_sklearn.md", "examples/Custom_Surrogates/custom_architecture_torch.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space_botorch_function.md", "examples/Searchspaces/continuous_space_custom_function.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[17, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[19, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[21, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[26, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[29, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[30, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[31, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuouslinearconstraint method)": [[32, "baybe.constraints.base.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearequalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearinequalityconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[45, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[48, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[50, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[51, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[52, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[57, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[58, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[59, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[60, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[61, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[62, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[63, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[64, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[65, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[66, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[67, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[68, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[71, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[72, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[73, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[75, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[76, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[77, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[78, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[79, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[80, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[81, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[82, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[84, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[85, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[86, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[91, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[96, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[101, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[104, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[105, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[106, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[108, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[109, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[118, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[122, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[131, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[133, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[134, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[135, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[136, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[137, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[138, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[141, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[144, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[146, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[147, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[148, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[150, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[153, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[156, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[158, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[163, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[165, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[166, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[167, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[168, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[170, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[171, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.scaler.defaultscaler method)": [[173, "baybe.scaler.DefaultScaler.__init__", false]], "__init__() (baybe.scaler.scaler method)": [[174, "baybe.scaler.Scaler.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[179, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[184, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[217, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[219, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[223, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[225, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[226, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[233, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[235, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[237, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[239, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[241, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[243, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[253, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[258, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[274, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[273, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[310, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[311, "baybe.utils.interval.Interval.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[57, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[58, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[59, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[60, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[61, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[62, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[63, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[64, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[65, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[66, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[67, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[68, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[113, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[114, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[116, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[310, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[138, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[17, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[19, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[156, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[158, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[156, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function_cls", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[158, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function_cls", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[19, "baybe.acquisition.base.AcquisitionFunction", false]], "active_values (baybe.parameters.categorical.taskparameter attribute)": [[109, "baybe.parameters.categorical.TaskParameter.active_values", false]], "add_fake_results() (in module baybe.utils.dataframe)": [[301, "baybe.utils.dataframe.add_fake_results", false]], "add_measurements() (baybe.campaign.campaign method)": [[26, "baybe.campaign.Campaign.add_measurements", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[302, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[84, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[150, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender attribute)": [[153, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[156, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[158, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[163, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[165, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[166, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[167, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[168, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[170, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[171, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[150, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender attribute)": [[153, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[156, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[158, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[163, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[165, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[166, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[167, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[168, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[170, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[171, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "autoscale() (in module baybe.surrogates.utils)": [[245, "baybe.surrogates.utils.autoscale", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[138, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[86, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[84, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[85, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basickernel (class in baybe.kernels.base)": [[71, "baybe.kernels.base.BasicKernel", false]], "batchify() (in module baybe.surrogates.utils)": [[246, "baybe.surrogates.utils.batchify", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[230, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[18, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[20, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[22, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[25, "module-baybe.campaign", false]], "baybe.constraints": [[27, "module-baybe.constraints", false]], "baybe.constraints.base": [[28, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[35, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[39, "module-baybe.constraints.continuous", false]], "baybe.constraints.discrete": [[43, "module-baybe.constraints.discrete", false]], "baybe.constraints.validation": [[53, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[56, "module-baybe.exceptions", false]], "baybe.kernels": [[69, "module-baybe.kernels", false]], "baybe.kernels.base": [[70, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[74, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[83, "module-baybe.kernels.composite", false]], "baybe.objective": [[87, "module-baybe.objective", false]], "baybe.objectives": [[89, "module-baybe.objectives", false]], "baybe.objectives.base": [[90, "module-baybe.objectives.base", false]], "baybe.objectives.deprecation": [[93, "module-baybe.objectives.deprecation", false]], "baybe.objectives.desirability": [[95, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[98, "module-baybe.objectives.enum", false]], "baybe.objectives.single": [[100, "module-baybe.objectives.single", false]], "baybe.parameters": [[102, "module-baybe.parameters", false]], "baybe.parameters.base": [[103, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[107, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[110, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[112, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[117, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[120, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[123, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[125, "module-baybe.parameters.validation", false]], "baybe.priors": [[129, "module-baybe.priors", false]], "baybe.priors.base": [[130, "module-baybe.priors.base", false]], "baybe.priors.basic": [[132, "module-baybe.priors.basic", false]], "baybe.recommenders": [[139, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[140, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[142, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[143, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[145, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[149, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[151, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[152, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[154, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[155, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[157, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[159, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[161, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[162, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[164, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[169, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.scaler": [[172, "module-baybe.scaler", false]], "baybe.searchspace": [[175, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[176, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[178, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[183, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[189, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[193, "module-baybe.serialization", false]], "baybe.serialization.core": [[194, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[201, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[203, "module-baybe.serialization.utils", false]], "baybe.simulation": [[206, "module-baybe.simulation", false]], "baybe.simulation.core": [[207, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[209, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[211, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[213, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[215, "module-baybe.surrogates", false]], "baybe.surrogates.base": [[216, "module-baybe.surrogates.base", false]], "baybe.surrogates.custom": [[218, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[221, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[222, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[224, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[228, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[229, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[232, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[234, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[236, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[238, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[240, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[242, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[244, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[248, "module-baybe.surrogates.validation", false]], "baybe.targets": [[251, "module-baybe.targets", false]], "baybe.targets.base": [[252, "module-baybe.targets.base", false]], "baybe.targets.enum": [[254, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[257, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[259, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[263, "module-baybe.telemetry", false]], "baybe.utils": [[268, "module-baybe.utils", false]], "baybe.utils.augmentation": [[269, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[272, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[284, "module-baybe.utils.boolean", false]], "baybe.utils.botorch_wrapper": [[288, "module-baybe.utils.botorch_wrapper", false]], "baybe.utils.chemistry": [[290, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[298, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[300, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[309, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[314, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[316, "module-baybe.utils.numerical", false]], "baybe.utils.plotting": [[323, "module-baybe.utils.plotting", false]], "baybe.utils.random": [[325, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[328, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.torch": [[332, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[335, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[237, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[156, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[256, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[260, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[17, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[195, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[196, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[21, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorch_function_wrapper() (in module baybe.utils.botorch_wrapper)": [[289, "baybe.utils.botorch_wrapper.botorch_function_wrapper", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[158, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[118, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[258, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[315, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[26, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[29, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[247, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[113, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[108, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[311, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[285, "baybe.utils.boolean.check_if_in", false]], "classproperty (class in baybe.utils.basic)": [[274, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[320, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[321, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.base.continuouslinearconstraint attribute)": [[32, "baybe.constraints.base.ContinuousLinearConstraint.coefficients", false]], "coefficients (baybe.constraints.continuous.continuouslinearequalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.coefficients", false]], "coefficients (baybe.constraints.continuous.continuouslinearinequalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.coefficients", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[105, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[108, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[109, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[122, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[184, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[184, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[184, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[150, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[153, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[156, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[158, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[163, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[165, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[166, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[167, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[168, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[170, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[171, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[72, "baybe.kernels.base.CompositeKernel", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[133, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[36, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[30, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[179, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[179, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[150, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[311, "baybe.utils.interval.Interval.contains", false]], "contains_mordred (baybe.searchspace.core.searchspace property)": [[179, "baybe.searchspace.core.SearchSpace.contains_mordred", false]], "contains_rdkit (baybe.searchspace.core.searchspace property)": [[179, "baybe.searchspace.core.SearchSpace.contains_rdkit", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[179, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[180, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[31, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.base)": [[32, "baybe.constraints.base.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint (class in baybe.constraints.continuous)": [[41, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint (class in baybe.constraints.continuous)": [[42, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[104, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[23, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[312, "baybe.utils.interval.convert_bounds", false]], "converter (in module baybe.serialization.core)": [[197, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[311, "baybe.utils.interval.Interval.create", false]], "create_example_plots() (in module baybe.utils.plotting)": [[324, "baybe.utils.plotting.create_example_plots", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[114, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[111, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[114, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[219, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[122, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[122, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_iterator() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[147, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.default_iterator", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[219, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[233, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "defaultscaler (class in baybe.scaler)": [[173, "baybe.scaler.DefaultScaler", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[50, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[57, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[204, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[96, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[270, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[271, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[303, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[304, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[305, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[150, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[179, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[180, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[45, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[48, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[49, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[105, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[50, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[329, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[317, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[318, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[333, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[273, "baybe.utils.basic.Dummy", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[235, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[180, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[58, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[105, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[108, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[109, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[122, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[179, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[29, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[30, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[31, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuouslinearconstraint attribute)": [[32, "baybe.constraints.base.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearequalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearinequalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[45, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[50, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[29, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[30, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[31, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuouslinearconstraint attribute)": [[32, "baybe.constraints.base.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearequalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearinequalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[45, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[50, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[29, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[30, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[31, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuouslinearconstraint attribute)": [[32, "baybe.constraints.base.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearequalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearinequalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[45, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[50, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[184, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[184, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[184, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[330, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "find_subclass() (in module baybe.utils.basic)": [[275, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[336, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.base.surrogate method)": [[217, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[219, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[223, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[237, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[239, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[241, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[243, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit_transform() (baybe.scaler.defaultscaler method)": [[173, "baybe.scaler.DefaultScaler.fit_transform", false]], "fit_transform() (baybe.scaler.scaler method)": [[174, "baybe.scaler.Scaler.fit_transform", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[329, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[170, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[299, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_config() (baybe.campaign.campaign class method)": [[26, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[179, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[17, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[19, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[26, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[29, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[30, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[31, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuouslinearconstraint class method)": [[32, "baybe.constraints.base.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[34, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[36, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[38, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearequalityconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearinequalityconstraint class method)": [[42, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[45, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[50, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[71, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[72, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[73, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[75, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[76, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[77, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[78, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[79, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[80, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[81, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[82, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[84, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[85, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[86, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[91, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[96, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[101, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[104, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[105, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[106, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[108, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[109, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[118, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[122, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[131, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[133, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[134, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[135, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[136, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[137, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[138, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[144, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[146, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[147, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[148, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[179, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[202, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[217, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[219, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[223, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[226, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[237, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[239, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[241, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[243, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[253, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[258, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[311, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[17, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[19, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[26, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[29, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[30, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[31, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuouslinearconstraint class method)": [[32, "baybe.constraints.base.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[34, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[36, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[38, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearequalityconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearinequalityconstraint class method)": [[42, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[45, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[50, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[71, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[72, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[73, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[75, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[76, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[77, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[78, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[79, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[80, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[81, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[82, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[84, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[85, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[86, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[91, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[96, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[101, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[104, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[105, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[106, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[108, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[109, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[118, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[122, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[131, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[133, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[134, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[135, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[136, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[137, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[138, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[144, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[146, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[147, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[148, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[179, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[202, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[217, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[219, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[223, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[226, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[237, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[239, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[241, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[243, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[253, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[258, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[311, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[179, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[223, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[179, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[306, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[133, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[165, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[230, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[223, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[99, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[322, "baybe.utils.numerical.geom_mean", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[198, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[276, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[291, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[45, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[48, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[50, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[51, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[52, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[45, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[48, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[50, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[51, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[52, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[249, "baybe.surrogates.validation.get_model_params_validator", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[179, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[124, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[277, "baybe.utils.basic.get_subclasses", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[190, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[264, "baybe.telemetry.get_user_details", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[278, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[134, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[135, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[279, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[180, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[158, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "incompatiblesearchspaceerror": [[59, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "infiniteintervalerror": [[310, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[148, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[113, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[311, "baybe.utils.interval.Interval", false]], "is_abstract() (in module baybe.utils.boolean)": [[286, "baybe.utils.boolean.is_abstract", false]], "is_bounded (baybe.utils.interval.interval property)": [[311, "baybe.utils.interval.Interval.is_bounded", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[29, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[30, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[31, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuouslinearconstraint property)": [[32, "baybe.constraints.base.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[34, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearequalityconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearinequalityconstraint property)": [[42, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[45, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[48, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[49, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[50, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[51, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[52, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[104, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[105, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[106, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[108, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[109, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[118, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[122, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[311, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[29, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[30, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[31, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuouslinearconstraint property)": [[32, "baybe.constraints.base.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[34, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearequalityconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearinequalityconstraint property)": [[42, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[45, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[48, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[49, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[50, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[51, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[52, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[104, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[105, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[106, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[108, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[109, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[118, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[122, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[265, "baybe.telemetry.is_enabled", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[311, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[311, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[104, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[105, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[106, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[108, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[109, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[118, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[122, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[311, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[104, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[105, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[106, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[108, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[109, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[118, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[122, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[311, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_valid_smiles() (in module baybe.utils.chemistry)": [[292, "baybe.utils.chemistry.is_valid_smiles", false]], "joint_posterior (baybe.surrogates.base.surrogate attribute)": [[217, "baybe.surrogates.base.Surrogate.joint_posterior", false]], "joint_posterior (baybe.surrogates.custom.customonnxsurrogate attribute)": [[219, "baybe.surrogates.custom.CustomONNXSurrogate.joint_posterior", false]], "joint_posterior (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[223, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.joint_posterior", false]], "joint_posterior (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[237, "baybe.surrogates.linear.BayesianLinearSurrogate.joint_posterior", false]], "joint_posterior (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[239, "baybe.surrogates.naive.MeanPredictionSurrogate.joint_posterior", false]], "joint_posterior (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[241, "baybe.surrogates.ngboost.NGBoostSurrogate.joint_posterior", false]], "joint_posterior (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[243, "baybe.surrogates.random_forest.RandomForestSurrogate.joint_posterior", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[226, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[73, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[223, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[225, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[166, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[76, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[77, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[78, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[80, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[81, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[82, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[76, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[77, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[78, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[80, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[81, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[82, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[256, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[261, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[75, "baybe.kernels.basic.LinearKernel", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[136, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[137, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[136, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[210, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[311, "baybe.utils.interval.Interval.lower", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[231, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "mark_as_measured() (baybe.searchspace.discrete.subspacediscrete method)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.mark_as_measured", false]], "match (baybe.targets.enum.targetmode attribute)": [[255, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[280, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[76, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[255, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[29, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[99, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[239, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[26, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[184, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete attribute)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[144, "baybe.recommenders.meta.base.MetaRecommender", false]], "min (baybe.targets.enum.targetmode attribute)": [[255, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[29, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[146, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[258, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[165, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[166, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[167, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[168, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[165, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[166, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[167, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[168, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[237, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[241, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[243, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [18, "module-baybe.acquisition.base", false], [20, "module-baybe.acquisition.partial", false], [22, "module-baybe.acquisition.utils", false], [25, "module-baybe.campaign", false], [27, "module-baybe.constraints", false], [28, "module-baybe.constraints.base", false], [35, "module-baybe.constraints.conditions", false], [39, "module-baybe.constraints.continuous", false], [43, "module-baybe.constraints.discrete", false], [53, "module-baybe.constraints.validation", false], [56, "module-baybe.exceptions", false], [69, "module-baybe.kernels", false], [70, "module-baybe.kernels.base", false], [74, "module-baybe.kernels.basic", false], [83, "module-baybe.kernels.composite", false], [87, "module-baybe.objective", false], [89, "module-baybe.objectives", false], [90, "module-baybe.objectives.base", false], [93, "module-baybe.objectives.deprecation", false], [95, "module-baybe.objectives.desirability", false], [98, "module-baybe.objectives.enum", false], [100, "module-baybe.objectives.single", false], [102, "module-baybe.parameters", false], [103, "module-baybe.parameters.base", false], [107, "module-baybe.parameters.categorical", false], [110, "module-baybe.parameters.custom", false], [112, "module-baybe.parameters.enum", false], [117, "module-baybe.parameters.numerical", false], [120, "module-baybe.parameters.substance", false], [123, "module-baybe.parameters.utils", false], [125, "module-baybe.parameters.validation", false], [129, "module-baybe.priors", false], [130, "module-baybe.priors.base", false], [132, "module-baybe.priors.basic", false], [139, "module-baybe.recommenders", false], [140, "module-baybe.recommenders.base", false], [142, "module-baybe.recommenders.meta", false], [143, "module-baybe.recommenders.meta.base", false], [145, "module-baybe.recommenders.meta.sequential", false], [149, "module-baybe.recommenders.naive", false], [151, "module-baybe.recommenders.pure", false], [152, "module-baybe.recommenders.pure.base", false], [154, "module-baybe.recommenders.pure.bayesian", false], [155, "module-baybe.recommenders.pure.bayesian.base", false], [157, "module-baybe.recommenders.pure.bayesian.botorch", false], [159, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [161, "module-baybe.recommenders.pure.nonpredictive", false], [162, "module-baybe.recommenders.pure.nonpredictive.base", false], [164, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [169, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [172, "module-baybe.scaler", false], [175, "module-baybe.searchspace", false], [176, "module-baybe.searchspace.continuous", false], [178, "module-baybe.searchspace.core", false], [183, "module-baybe.searchspace.discrete", false], [189, "module-baybe.searchspace.validation", false], [193, "module-baybe.serialization", false], [194, "module-baybe.serialization.core", false], [201, "module-baybe.serialization.mixin", false], [203, "module-baybe.serialization.utils", false], [206, "module-baybe.simulation", false], [207, "module-baybe.simulation.core", false], [209, "module-baybe.simulation.lookup", false], [211, "module-baybe.simulation.scenarios", false], [213, "module-baybe.simulation.transfer_learning", false], [215, "module-baybe.surrogates", false], [216, "module-baybe.surrogates.base", false], [218, "module-baybe.surrogates.custom", false], [221, "module-baybe.surrogates.gaussian_process", false], [222, "module-baybe.surrogates.gaussian_process.core", false], [224, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [228, "module-baybe.surrogates.gaussian_process.presets", false], [229, "module-baybe.surrogates.gaussian_process.presets.core", false], [232, "module-baybe.surrogates.gaussian_process.presets.default", false], [234, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [236, "module-baybe.surrogates.linear", false], [238, "module-baybe.surrogates.naive", false], [240, "module-baybe.surrogates.ngboost", false], [242, "module-baybe.surrogates.random_forest", false], [244, "module-baybe.surrogates.utils", false], [248, "module-baybe.surrogates.validation", false], [251, "module-baybe.targets", false], [252, "module-baybe.targets.base", false], [254, "module-baybe.targets.enum", false], [257, "module-baybe.targets.numerical", false], [259, "module-baybe.targets.transforms", false], [263, "module-baybe.telemetry", false], [268, "module-baybe.utils", false], [269, "module-baybe.utils.augmentation", false], [272, "module-baybe.utils.basic", false], [284, "module-baybe.utils.boolean", false], [288, "module-baybe.utils.botorch_wrapper", false], [290, "module-baybe.utils.chemistry", false], [298, "module-baybe.utils.conversion", false], [300, "module-baybe.utils.dataframe", false], [309, "module-baybe.utils.interval", false], [314, "module-baybe.utils.memory", false], [316, "module-baybe.utils.numerical", false], [323, "module-baybe.utils.plotting", false], [325, "module-baybe.utils.random", false], [328, "module-baybe.utils.sampling_algorithms", false], [332, "module-baybe.utils.torch", false], [335, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[116, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[116, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[26, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[26, "baybe.campaign.Campaign.n_fits_done", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[179, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[150, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[104, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[105, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[106, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[108, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[109, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[118, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[122, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[253, "baybe.targets.base.Target.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[258, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[293, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[241, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[60, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "non_inf_float() (in module baybe.utils.validation)": [[337, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[338, "baybe.utils.validation.non_nan_float", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[163, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "norecommenderslefterror": [[61, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[137, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[62, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[63, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[76, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[81, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[29, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[30, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[31, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuouslinearconstraint attribute)": [[32, "baybe.constraints.base.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearequalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearinequalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[45, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[50, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[118, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[258, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[64, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[26, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[91, "baybe.objectives.base.Objective", false]], "objective() (in module baybe.objective)": [[88, "baybe.objective.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[79, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[79, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[113, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[219, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[219, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "optionalimporterror": [[65, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[86, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[86, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[167, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "param_bounds_comp (baybe.searchspace.continuous.subspacecontinuous property)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.param_bounds_comp", false]], "param_bounds_comp (baybe.searchspace.core.searchspace property)": [[179, "baybe.searchspace.core.SearchSpace.param_bounds_comp", false]], "param_bounds_comp (baybe.searchspace.discrete.subspacediscrete property)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.param_bounds_comp", false]], "param_names (baybe.searchspace.continuous.subspacecontinuous property)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.param_names", false]], "parameter (class in baybe.parameters.base)": [[106, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[186, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[187, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameterencoding (class in baybe.parameters.enum)": [[115, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[26, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[29, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[30, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[31, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuouslinearconstraint attribute)": [[32, "baybe.constraints.base.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearequalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearinequalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[45, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[50, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[179, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[21, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[77, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[77, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[77, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[78, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[21, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[21, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[226, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "polynomialkernel (class in baybe.kernels.basic)": [[79, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[217, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[219, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[223, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[237, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[239, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[241, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[243, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[79, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[307, "baybe.utils.dataframe.pretty_print_df", false]], "prior (class in baybe.priors.base)": [[131, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[85, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[153, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[78, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[329, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[243, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[171, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[133, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[80, "baybe.kernels.basic.RBFKernel", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[116, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "recommend() (baybe.campaign.campaign method)": [[26, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[141, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[144, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[146, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[147, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[148, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[150, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[153, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[156, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[158, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[163, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[165, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[166, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[167, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[168, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[170, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[171, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[26, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[148, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[141, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[146, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[147, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "refers_to() (in module baybe.utils.basic)": [[281, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[220, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[282, "baybe.utils.basic.register_hooks", false]], "rffkernel (class in baybe.kernels.basic)": [[81, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.base.continuouslinearconstraint attribute)": [[32, "baybe.constraints.base.ContinuousLinearConstraint.rhs", false]], "rhs (baybe.constraints.continuous.continuouslinearequalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.rhs", false]], "rhs (baybe.constraints.continuous.continuouslinearinequalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[82, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[331, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[158, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[97, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[96, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[99, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[134, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[135, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[136, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[137, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[86, "baybe.kernels.composite.ScaleKernel", false]], "scaler (class in baybe.scaler)": [[174, "baybe.scaler.Scaler", false]], "searchspace (baybe.campaign.campaign attribute)": [[26, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[179, "baybe.searchspace.core.SearchSpace", false]], "searchspacetype (class in baybe.searchspace.core)": [[180, "baybe.searchspace.core.SearchSpaceType", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[199, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[144, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[146, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[147, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[148, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[37, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[158, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[160, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[146, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[205, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[202, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[326, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[21, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[138, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[208, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[212, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[214, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[101, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[168, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[121, "baybe.parameters.substance.Smiles", false]], "smiles_to_fp_features() (in module baybe.utils.chemistry)": [[294, "baybe.utils.chemistry.smiles_to_fp_features", false]], "smiles_to_molecules() (in module baybe.utils.chemistry)": [[295, "baybe.utils.chemistry.smiles_to_molecules", false]], "smiles_to_mordred_features() (in module baybe.utils.chemistry)": [[296, "baybe.utils.chemistry.smiles_to_mordred_features", false]], "smiles_to_rdkit_features() (in module baybe.utils.chemistry)": [[297, "baybe.utils.chemistry.smiles_to_rdkit_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[138, "baybe.priors.basic.SmoothedBoxPrior", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[24, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[147, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[287, "baybe.utils.boolean.strtobool", false]], "structure_objective() (in module baybe.objectives.deprecation)": [[94, "baybe.objectives.deprecation.structure_objective", false]], "subclasses (baybe.scaler.defaultscaler attribute)": [[173, "baybe.scaler.DefaultScaler.SUBCLASSES", false]], "subclasses (baybe.scaler.scaler attribute)": [[174, "baybe.scaler.Scaler.SUBCLASSES", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[37, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[177, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[116, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[122, "baybe.parameters.substance.SubstanceParameter", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[29, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[30, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[31, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuouslinearconstraint method)": [[32, "baybe.constraints.base.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearequalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearinequalityconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[45, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[48, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[50, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[51, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[52, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[104, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[105, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[106, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[108, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[109, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[118, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[122, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[253, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[258, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[217, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[219, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[223, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[237, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[239, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[241, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[243, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[217, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[156, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[158, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[148, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[253, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[255, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[26, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[91, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[96, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[101, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[256, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[179, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[109, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[266, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[267, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[327, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[38, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[17, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[19, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.base.continuouslinearconstraint method)": [[32, "baybe.constraints.base.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearequalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearinequalityconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[217, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[219, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[223, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[237, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[239, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[241, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[243, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[17, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[19, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[26, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[29, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[30, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[31, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuouslinearconstraint method)": [[32, "baybe.constraints.base.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearequalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearinequalityconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[45, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[48, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[50, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[51, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[52, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[71, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[72, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[73, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[75, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[76, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[77, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[78, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[79, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[80, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[81, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[82, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[84, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[85, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[86, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[91, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[96, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[101, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[104, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[105, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[106, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[108, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[109, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[118, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[122, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[131, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[133, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[134, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[135, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[136, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[137, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[138, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[144, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[146, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[147, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[148, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[179, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[202, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[217, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[219, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[223, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[226, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[237, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[239, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[241, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[243, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[253, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[258, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[311, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[71, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[72, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[73, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[75, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[76, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[77, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[78, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[79, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[80, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[81, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[82, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[84, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[85, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[86, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[71, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[72, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[73, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[75, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[76, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[77, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[78, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[79, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[80, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[81, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[82, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[84, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[85, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[86, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[131, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[133, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[134, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[135, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[136, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[137, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[138, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[17, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[19, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[26, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[29, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[30, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[31, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuouslinearconstraint method)": [[32, "baybe.constraints.base.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearequalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearinequalityconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[44, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[45, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[46, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[47, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[48, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[50, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[51, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[52, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[71, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[72, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[73, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[75, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[76, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[77, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[78, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[79, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[80, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[81, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[82, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[84, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[85, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[86, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[91, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[96, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[101, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[104, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[105, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[106, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[108, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[109, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[118, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[122, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[131, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[133, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[134, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[135, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[136, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[137, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[138, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[144, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[146, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[147, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[148, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[179, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[202, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[217, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[219, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[223, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[226, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[237, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[239, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[241, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[243, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[253, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[258, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[311, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[227, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[311, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[253, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[258, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[92, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[104, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[105, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[106, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[108, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[109, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[118, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[122, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[181, "baybe.searchspace.core.to_searchspace", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[104, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[105, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[108, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[109, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[118, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[122, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[311, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[308, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[311, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[283, "baybe.utils.basic.to_tuple", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "transform() (baybe.objectives.base.objective method)": [[91, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[96, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[101, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[105, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[108, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[109, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[122, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.scaler.defaultscaler method)": [[173, "baybe.scaler.DefaultScaler.transform", false]], "transform() (baybe.scaler.scaler method)": [[174, "baybe.scaler.Scaler.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[177, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[179, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[185, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[253, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[258, "baybe.targets.numerical.NumericalTarget.transform", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[258, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[256, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[262, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[148, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.scaler.defaultscaler attribute)": [[173, "baybe.scaler.DefaultScaler.type", false]], "type (baybe.scaler.scaler attribute)": [[174, "baybe.scaler.Scaler.type", false]], "type (baybe.searchspace.core.searchspace property)": [[179, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[66, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[67, "baybe.exceptions.UnmatchedAttributeError", false]], "unstructure_base() (in module baybe.serialization.core)": [[200, "baybe.serialization.core.unstructure_base", false]], "untransform() (baybe.scaler.defaultscaler method)": [[173, "baybe.scaler.DefaultScaler.untransform", false]], "untransform() (baybe.scaler.scaler method)": [[174, "baybe.scaler.Scaler.untransform", false]], "unusedobjectwarning": [[68, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[311, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[313, "baybe.utils.interval.use_fallback_constructor_hook", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[54, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[219, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[26, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[55, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[250, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[126, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[127, "baybe.parameters.validation.validate_is_finite", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[191, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[192, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[182, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[188, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[128, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[45, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[105, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[108, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[109, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[111, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[119, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[122, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[75, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[75, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[319, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[334, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[96, "baybe.objectives.desirability.DesirabilityObjective.weights", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [25, 0, 0, "-", "campaign"], [27, 0, 0, "-", "constraints"], [56, 0, 0, "-", "exceptions"], [69, 0, 0, "-", "kernels"], [87, 0, 0, "-", "objective"], [89, 0, 0, "-", "objectives"], [102, 0, 0, "-", "parameters"], [129, 0, 0, "-", "priors"], [139, 0, 0, "-", "recommenders"], [172, 0, 0, "-", "scaler"], [175, 0, 0, "-", "searchspace"], [193, 0, 0, "-", "serialization"], [206, 0, 0, "-", "simulation"], [215, 0, 0, "-", "surrogates"], [251, 0, 0, "-", "targets"], [263, 0, 0, "-", "telemetry"], [268, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [18, 0, 0, "-", "base"], [20, 0, 0, "-", "partial"], [22, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNoisyExpectedImprovement"], [13, 1, 1, "", "qNegIntegratedPosteriorVariance"], [14, 1, 1, "", "qNoisyExpectedImprovement"], [15, 1, 1, "", "qProbabilityOfImprovement"], [16, 1, 1, "", "qSimpleRegret"], [17, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 2, 1, "", "get_integration_points"], [13, 3, 1, "", "sampling_fraction"], [13, 3, 1, "", "sampling_method"], [13, 3, 1, "", "sampling_n_points"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 3, 1, "", "beta"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.base": [[19, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.partial": [[21, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "botorch_acqf"], [21, 3, 1, "", "pin_discrete"], [21, 3, 1, "", "pinned_part"], [21, 2, 1, "", "set_X_pending"]], "baybe.acquisition.utils": [[23, 4, 1, "", "convert_acqf"], [24, 4, 1, "", "str_to_acqf"]], "baybe.campaign": [[26, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "add_measurements"], [26, 2, 1, "", "from_config"], [26, 2, 1, "", "from_dict"], [26, 2, 1, "", "from_json"], [26, 5, 1, "", "measurements"], [26, 3, 1, "", "n_batches_done"], [26, 3, 1, "", "n_fits_done"], [26, 3, 1, "", "objective"], [26, 5, 1, "", "parameters"], [26, 2, 1, "", "recommend"], [26, 3, 1, "", "recommender"], [26, 3, 1, "", "searchspace"], [26, 5, 1, "", "targets"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "to_json"], [26, 2, 1, "", "validate_config"]], "baybe.constraints": [[28, 0, 0, "-", "base"], [35, 0, 0, "-", "conditions"], [39, 0, 0, "-", "continuous"], [43, 0, 0, "-", "discrete"], [53, 0, 0, "-", "validation"]], "baybe.constraints.base": [[29, 1, 1, "", "CardinalityConstraint"], [30, 1, 1, "", "Constraint"], [31, 1, 1, "", "ContinuousConstraint"], [32, 1, 1, "", "ContinuousLinearConstraint"], [33, 1, 1, "", "ContinuousNonlinearConstraint"], [34, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[29, 2, 1, "", "__init__"], [29, 3, 1, "", "eval_during_augmentation"], [29, 3, 1, "", "eval_during_creation"], [29, 3, 1, "", "eval_during_modeling"], [29, 2, 1, "", "from_dict"], [29, 2, 1, "", "from_json"], [29, 5, 1, "", "is_continuous"], [29, 5, 1, "", "is_discrete"], [29, 3, 1, "", "max_cardinality"], [29, 3, 1, "", "min_cardinality"], [29, 3, 1, "", "numerical_only"], [29, 3, 1, "", "parameters"], [29, 2, 1, "", "summary"], [29, 2, 1, "", "to_dict"], [29, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint": [[30, 2, 1, "", "__init__"], [30, 3, 1, "", "eval_during_augmentation"], [30, 3, 1, "", "eval_during_creation"], [30, 3, 1, "", "eval_during_modeling"], [30, 2, 1, "", "from_dict"], [30, 2, 1, "", "from_json"], [30, 5, 1, "", "is_continuous"], [30, 5, 1, "", "is_discrete"], [30, 3, 1, "", "numerical_only"], [30, 3, 1, "", "parameters"], [30, 2, 1, "", "summary"], [30, 2, 1, "", "to_dict"], [30, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "eval_during_augmentation"], [31, 3, 1, "", "eval_during_creation"], [31, 3, 1, "", "eval_during_modeling"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 5, 1, "", "is_continuous"], [31, 5, 1, "", "is_discrete"], [31, 3, 1, "", "numerical_only"], [31, 3, 1, "", "parameters"], [31, 2, 1, "", "summary"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousLinearConstraint": [[32, 2, 1, "", "__init__"], [32, 3, 1, "", "coefficients"], [32, 3, 1, "", "eval_during_augmentation"], [32, 3, 1, "", "eval_during_creation"], [32, 3, 1, "", "eval_during_modeling"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "from_json"], [32, 5, 1, "", "is_continuous"], [32, 5, 1, "", "is_discrete"], [32, 3, 1, "", "numerical_only"], [32, 3, 1, "", "parameters"], [32, 3, 1, "", "rhs"], [32, 2, 1, "", "summary"], [32, 2, 1, "", "to_botorch"], [32, 2, 1, "", "to_dict"], [32, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "eval_during_augmentation"], [33, 3, 1, "", "eval_during_creation"], [33, 3, 1, "", "eval_during_modeling"], [33, 2, 1, "", "from_dict"], [33, 2, 1, "", "from_json"], [33, 5, 1, "", "is_continuous"], [33, 5, 1, "", "is_discrete"], [33, 3, 1, "", "numerical_only"], [33, 3, 1, "", "parameters"], [33, 2, 1, "", "summary"], [33, 2, 1, "", "to_dict"], [33, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 2, 1, "", "get_invalid"], [34, 2, 1, "", "get_invalid_polars"], [34, 5, 1, "", "is_continuous"], [34, 5, 1, "", "is_discrete"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.conditions": [[36, 1, 1, "", "Condition"], [37, 1, 1, "", "SubSelectionCondition"], [38, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[36, 2, 1, "", "evaluate"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"], [36, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "evaluate"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 5, 1, "", "selection"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"], [37, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.ThresholdCondition": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "evaluate"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 3, 1, "", "operator"], [38, 3, 1, "", "threshold"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"], [38, 2, 1, "", "to_polars"], [38, 3, 1, "", "tolerance"]], "baybe.constraints.continuous": [[40, 1, 1, "", "ContinuousCardinalityConstraint"], [41, 1, 1, "", "ContinuousLinearEqualityConstraint"], [42, 1, 1, "", "ContinuousLinearInequalityConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[40, 2, 1, "", "__init__"], [40, 3, 1, "", "eval_during_augmentation"], [40, 3, 1, "", "eval_during_creation"], [40, 3, 1, "", "eval_during_modeling"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 5, 1, "", "is_continuous"], [40, 5, 1, "", "is_discrete"], [40, 3, 1, "", "max_cardinality"], [40, 3, 1, "", "min_cardinality"], [40, 3, 1, "", "numerical_only"], [40, 3, 1, "", "parameters"], [40, 2, 1, "", "sample_inactive_parameters"], [40, 2, 1, "", "summary"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearEqualityConstraint": [[41, 2, 1, "", "__init__"], [41, 3, 1, "", "coefficients"], [41, 3, 1, "", "eval_during_augmentation"], [41, 3, 1, "", "eval_during_creation"], [41, 3, 1, "", "eval_during_modeling"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 5, 1, "", "is_continuous"], [41, 5, 1, "", "is_discrete"], [41, 3, 1, "", "numerical_only"], [41, 3, 1, "", "parameters"], [41, 3, 1, "", "rhs"], [41, 2, 1, "", "summary"], [41, 2, 1, "", "to_botorch"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearInequalityConstraint": [[42, 2, 1, "", "__init__"], [42, 3, 1, "", "coefficients"], [42, 3, 1, "", "eval_during_augmentation"], [42, 3, 1, "", "eval_during_creation"], [42, 3, 1, "", "eval_during_modeling"], [42, 2, 1, "", "from_dict"], [42, 2, 1, "", "from_json"], [42, 5, 1, "", "is_continuous"], [42, 5, 1, "", "is_discrete"], [42, 3, 1, "", "numerical_only"], [42, 3, 1, "", "parameters"], [42, 3, 1, "", "rhs"], [42, 2, 1, "", "summary"], [42, 2, 1, "", "to_botorch"], [42, 2, 1, "", "to_dict"], [42, 2, 1, "", "to_json"]], "baybe.constraints.discrete": [[44, 1, 1, "", "DiscreteCardinalityConstraint"], [45, 1, 1, "", "DiscreteCustomConstraint"], [46, 1, 1, "", "DiscreteDependenciesConstraint"], [47, 1, 1, "", "DiscreteExcludeConstraint"], [48, 1, 1, "", "DiscreteLinkedParametersConstraint"], [49, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [50, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [51, 1, 1, "", "DiscreteProductConstraint"], [52, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[44, 2, 1, "", "__init__"], [44, 3, 1, "", "eval_during_augmentation"], [44, 3, 1, "", "eval_during_creation"], [44, 3, 1, "", "eval_during_modeling"], [44, 2, 1, "", "from_dict"], [44, 2, 1, "", "from_json"], [44, 2, 1, "", "get_invalid"], [44, 2, 1, "", "get_invalid_polars"], [44, 5, 1, "", "is_continuous"], [44, 5, 1, "", "is_discrete"], [44, 3, 1, "", "max_cardinality"], [44, 3, 1, "", "min_cardinality"], [44, 3, 1, "", "numerical_only"], [44, 3, 1, "", "parameters"], [44, 2, 1, "", "summary"], [44, 2, 1, "", "to_dict"], [44, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[45, 2, 1, "", "__init__"], [45, 3, 1, "", "eval_during_augmentation"], [45, 3, 1, "", "eval_during_creation"], [45, 3, 1, "", "eval_during_modeling"], [45, 2, 1, "", "from_dict"], [45, 2, 1, "", "from_json"], [45, 2, 1, "", "get_invalid"], [45, 2, 1, "", "get_invalid_polars"], [45, 5, 1, "", "is_continuous"], [45, 5, 1, "", "is_discrete"], [45, 3, 1, "", "numerical_only"], [45, 3, 1, "", "parameters"], [45, 2, 1, "", "summary"], [45, 2, 1, "", "to_dict"], [45, 2, 1, "", "to_json"], [45, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[46, 2, 1, "", "__init__"], [46, 3, 1, "", "affected_parameters"], [46, 3, 1, "", "conditions"], [46, 3, 1, "", "eval_during_augmentation"], [46, 3, 1, "", "eval_during_creation"], [46, 3, 1, "", "eval_during_modeling"], [46, 2, 1, "", "from_dict"], [46, 2, 1, "", "from_json"], [46, 2, 1, "", "get_invalid"], [46, 2, 1, "", "get_invalid_polars"], [46, 5, 1, "", "is_continuous"], [46, 5, 1, "", "is_discrete"], [46, 3, 1, "", "numerical_only"], [46, 3, 1, "", "parameters"], [46, 3, 1, "", "permutation_invariant"], [46, 2, 1, "", "summary"], [46, 2, 1, "", "to_dict"], [46, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[47, 2, 1, "", "__init__"], [47, 3, 1, "", "combiner"], [47, 3, 1, "", "conditions"], [47, 3, 1, "", "eval_during_augmentation"], [47, 3, 1, "", "eval_during_creation"], [47, 3, 1, "", "eval_during_modeling"], [47, 2, 1, "", "from_dict"], [47, 2, 1, "", "from_json"], [47, 2, 1, "", "get_invalid"], [47, 2, 1, "", "get_invalid_polars"], [47, 5, 1, "", "is_continuous"], [47, 5, 1, "", "is_discrete"], [47, 3, 1, "", "numerical_only"], [47, 3, 1, "", "parameters"], [47, 2, 1, "", "summary"], [47, 2, 1, "", "to_dict"], [47, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[48, 2, 1, "", "__init__"], [48, 3, 1, "", "eval_during_augmentation"], [48, 3, 1, "", "eval_during_creation"], [48, 3, 1, "", "eval_during_modeling"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "from_json"], [48, 2, 1, "", "get_invalid"], [48, 2, 1, "", "get_invalid_polars"], [48, 5, 1, "", "is_continuous"], [48, 5, 1, "", "is_discrete"], [48, 3, 1, "", "numerical_only"], [48, 3, 1, "", "parameters"], [48, 2, 1, "", "summary"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[49, 2, 1, "", "__init__"], [49, 3, 1, "", "eval_during_augmentation"], [49, 3, 1, "", "eval_during_creation"], [49, 3, 1, "", "eval_during_modeling"], [49, 2, 1, "", "from_dict"], [49, 2, 1, "", "from_json"], [49, 2, 1, "", "get_invalid"], [49, 2, 1, "", "get_invalid_polars"], [49, 5, 1, "", "is_continuous"], [49, 5, 1, "", "is_discrete"], [49, 3, 1, "", "numerical_only"], [49, 3, 1, "", "parameters"], [49, 2, 1, "", "summary"], [49, 2, 1, "", "to_dict"], [49, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[50, 2, 1, "", "__init__"], [50, 3, 1, "", "dependencies"], [50, 3, 1, "", "eval_during_augmentation"], [50, 3, 1, "", "eval_during_creation"], [50, 3, 1, "", "eval_during_modeling"], [50, 2, 1, "", "from_dict"], [50, 2, 1, "", "from_json"], [50, 2, 1, "", "get_invalid"], [50, 2, 1, "", "get_invalid_polars"], [50, 5, 1, "", "is_continuous"], [50, 5, 1, "", "is_discrete"], [50, 3, 1, "", "numerical_only"], [50, 3, 1, "", "parameters"], [50, 2, 1, "", "summary"], [50, 2, 1, "", "to_dict"], [50, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "condition"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 5, 1, "", "is_continuous"], [51, 5, 1, "", "is_discrete"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "condition"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 5, 1, "", "is_continuous"], [52, 5, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"]], "baybe.constraints.validation": [[54, 4, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [55, 4, 1, "", "validate_constraints"]], "baybe.exceptions": [[57, 6, 1, "", "DeprecationError"], [58, 6, 1, "", "EmptySearchSpaceError"], [59, 6, 1, "", "IncompatibleSearchSpaceError"], [60, 6, 1, "", "NoMCAcquisitionFunctionError"], [61, 6, 1, "", "NoRecommendersLeftError"], [62, 6, 1, "", "NotEnoughPointsLeftError"], [63, 6, 1, "", "NothingToSimulateError"], [64, 6, 1, "", "NumericalUnderflowError"], [65, 6, 1, "", "OptionalImportError"], [66, 6, 1, "", "UnidentifiedSubclassError"], [67, 6, 1, "", "UnmatchedAttributeError"], [68, 6, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[57, 2, 1, "", "__init__"], [57, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[59, 2, 1, "", "__init__"], [59, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.kernels": [[70, 0, 0, "-", "base"], [74, 0, 0, "-", "basic"], [83, 0, 0, "-", "composite"]], "baybe.kernels.base": [[71, 1, 1, "", "BasicKernel"], [72, 1, 1, "", "CompositeKernel"], [73, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "from_dict"], [71, 2, 1, "", "from_json"], [71, 2, 1, "", "to_dict"], [71, 2, 1, "", "to_factory"], [71, 2, 1, "", "to_gpytorch"], [71, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "from_dict"], [72, 2, 1, "", "from_json"], [72, 2, 1, "", "to_dict"], [72, 2, 1, "", "to_factory"], [72, 2, 1, "", "to_gpytorch"], [72, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "from_dict"], [73, 2, 1, "", "from_json"], [73, 2, 1, "", "to_dict"], [73, 2, 1, "", "to_factory"], [73, 2, 1, "", "to_gpytorch"], [73, 2, 1, "", "to_json"]], "baybe.kernels.basic": [[75, 1, 1, "", "LinearKernel"], [76, 1, 1, "", "MaternKernel"], [77, 1, 1, "", "PeriodicKernel"], [78, 1, 1, "", "PiecewisePolynomialKernel"], [79, 1, 1, "", "PolynomialKernel"], [80, 1, 1, "", "RBFKernel"], [81, 1, 1, "", "RFFKernel"], [82, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "from_dict"], [75, 2, 1, "", "from_json"], [75, 2, 1, "", "to_dict"], [75, 2, 1, "", "to_factory"], [75, 2, 1, "", "to_gpytorch"], [75, 2, 1, "", "to_json"], [75, 3, 1, "", "variance_initial_value"], [75, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.MaternKernel": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "from_dict"], [76, 2, 1, "", "from_json"], [76, 3, 1, "", "lengthscale_initial_value"], [76, 3, 1, "", "lengthscale_prior"], [76, 3, 1, "", "nu"], [76, 2, 1, "", "to_dict"], [76, 2, 1, "", "to_factory"], [76, 2, 1, "", "to_gpytorch"], [76, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "from_dict"], [77, 2, 1, "", "from_json"], [77, 3, 1, "", "lengthscale_initial_value"], [77, 3, 1, "", "lengthscale_prior"], [77, 3, 1, "", "period_length_initial_value"], [77, 3, 1, "", "period_length_prior"], [77, 2, 1, "", "to_dict"], [77, 2, 1, "", "to_factory"], [77, 2, 1, "", "to_gpytorch"], [77, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "from_dict"], [78, 2, 1, "", "from_json"], [78, 3, 1, "", "lengthscale_initial_value"], [78, 3, 1, "", "lengthscale_prior"], [78, 3, 1, "", "q"], [78, 2, 1, "", "to_dict"], [78, 2, 1, "", "to_factory"], [78, 2, 1, "", "to_gpytorch"], [78, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "from_dict"], [79, 2, 1, "", "from_json"], [79, 3, 1, "", "offset_initial_value"], [79, 3, 1, "", "offset_prior"], [79, 3, 1, "", "power"], [79, 2, 1, "", "to_dict"], [79, 2, 1, "", "to_factory"], [79, 2, 1, "", "to_gpytorch"], [79, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "from_dict"], [80, 2, 1, "", "from_json"], [80, 3, 1, "", "lengthscale_initial_value"], [80, 3, 1, "", "lengthscale_prior"], [80, 2, 1, "", "to_dict"], [80, 2, 1, "", "to_factory"], [80, 2, 1, "", "to_gpytorch"], [80, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "from_dict"], [81, 2, 1, "", "from_json"], [81, 3, 1, "", "lengthscale_initial_value"], [81, 3, 1, "", "lengthscale_prior"], [81, 3, 1, "", "num_samples"], [81, 2, 1, "", "to_dict"], [81, 2, 1, "", "to_factory"], [81, 2, 1, "", "to_gpytorch"], [81, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "from_dict"], [82, 2, 1, "", "from_json"], [82, 3, 1, "", "lengthscale_initial_value"], [82, 3, 1, "", "lengthscale_prior"], [82, 2, 1, "", "to_dict"], [82, 2, 1, "", "to_factory"], [82, 2, 1, "", "to_gpytorch"], [82, 2, 1, "", "to_json"]], "baybe.kernels.composite": [[84, 1, 1, "", "AdditiveKernel"], [85, 1, 1, "", "ProductKernel"], [86, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[84, 2, 1, "", "__init__"], [84, 3, 1, "", "base_kernels"], [84, 2, 1, "", "from_dict"], [84, 2, 1, "", "from_json"], [84, 2, 1, "", "to_dict"], [84, 2, 1, "", "to_factory"], [84, 2, 1, "", "to_gpytorch"], [84, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel": [[85, 2, 1, "", "__init__"], [85, 3, 1, "", "base_kernels"], [85, 2, 1, "", "from_dict"], [85, 2, 1, "", "from_json"], [85, 2, 1, "", "to_dict"], [85, 2, 1, "", "to_factory"], [85, 2, 1, "", "to_gpytorch"], [85, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel": [[86, 2, 1, "", "__init__"], [86, 3, 1, "", "base_kernel"], [86, 2, 1, "", "from_dict"], [86, 2, 1, "", "from_json"], [86, 3, 1, "", "outputscale_initial_value"], [86, 3, 1, "", "outputscale_prior"], [86, 2, 1, "", "to_dict"], [86, 2, 1, "", "to_factory"], [86, 2, 1, "", "to_gpytorch"], [86, 2, 1, "", "to_json"]], "baybe.objective": [[88, 4, 1, "", "Objective"]], "baybe.objectives": [[90, 0, 0, "-", "base"], [93, 0, 0, "-", "deprecation"], [95, 0, 0, "-", "desirability"], [98, 0, 0, "-", "enum"], [100, 0, 0, "-", "single"]], "baybe.objectives.base": [[91, 1, 1, "", "Objective"], [92, 4, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "from_dict"], [91, 2, 1, "", "from_json"], [91, 5, 1, "", "targets"], [91, 2, 1, "", "to_dict"], [91, 2, 1, "", "to_json"], [91, 2, 1, "", "transform"]], "baybe.objectives.deprecation": [[94, 4, 1, "", "structure_objective"]], "baybe.objectives.desirability": [[96, 1, 1, "", "DesirabilityObjective"], [97, 4, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "from_dict"], [96, 2, 1, "", "from_json"], [96, 3, 1, "", "scalarizer"], [96, 5, 1, "", "targets"], [96, 2, 1, "", "to_dict"], [96, 2, 1, "", "to_json"], [96, 2, 1, "", "transform"], [96, 3, 1, "", "weights"]], "baybe.objectives.enum": [[99, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[99, 3, 1, "", "GEOM_MEAN"], [99, 3, 1, "", "MEAN"]], "baybe.objectives.single": [[101, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "from_dict"], [101, 2, 1, "", "from_json"], [101, 5, 1, "", "targets"], [101, 2, 1, "", "to_dict"], [101, 2, 1, "", "to_json"], [101, 2, 1, "", "transform"]], "baybe.parameters": [[103, 0, 0, "-", "base"], [107, 0, 0, "-", "categorical"], [110, 0, 0, "-", "custom"], [112, 0, 0, "-", "enum"], [117, 0, 0, "-", "numerical"], [120, 0, 0, "-", "substance"], [123, 0, 0, "-", "utils"], [125, 0, 0, "-", "validation"]], "baybe.parameters.base": [[104, 1, 1, "", "ContinuousParameter"], [105, 1, 1, "", "DiscreteParameter"], [106, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "from_dict"], [104, 2, 1, "", "from_json"], [104, 5, 1, "", "is_continuous"], [104, 5, 1, "", "is_discrete"], [104, 2, 1, "", "is_in_range"], [104, 3, 1, "", "is_numerical"], [104, 3, 1, "", "name"], [104, 2, 1, "", "summary"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "to_json"], [104, 2, 1, "", "to_searchspace"], [104, 2, 1, "", "to_subspace"]], "baybe.parameters.base.DiscreteParameter": [[105, 2, 1, "", "__init__"], [105, 5, 1, "", "comp_df"], [105, 3, 1, "", "encoding"], [105, 2, 1, "", "from_dict"], [105, 2, 1, "", "from_json"], [105, 5, 1, "", "is_continuous"], [105, 5, 1, "", "is_discrete"], [105, 2, 1, "", "is_in_range"], [105, 3, 1, "", "is_numerical"], [105, 3, 1, "", "name"], [105, 2, 1, "", "summary"], [105, 2, 1, "", "to_dict"], [105, 2, 1, "", "to_json"], [105, 2, 1, "", "to_searchspace"], [105, 2, 1, "", "to_subspace"], [105, 2, 1, "", "transform"], [105, 5, 1, "", "values"]], "baybe.parameters.base.Parameter": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "from_dict"], [106, 2, 1, "", "from_json"], [106, 5, 1, "", "is_continuous"], [106, 5, 1, "", "is_discrete"], [106, 2, 1, "", "is_in_range"], [106, 3, 1, "", "is_numerical"], [106, 3, 1, "", "name"], [106, 2, 1, "", "summary"], [106, 2, 1, "", "to_dict"], [106, 2, 1, "", "to_json"], [106, 2, 1, "", "to_searchspace"]], "baybe.parameters.categorical": [[108, 1, 1, "", "CategoricalParameter"], [109, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[108, 2, 1, "", "__init__"], [108, 5, 1, "", "comp_df"], [108, 3, 1, "", "encoding"], [108, 2, 1, "", "from_dict"], [108, 2, 1, "", "from_json"], [108, 5, 1, "", "is_continuous"], [108, 5, 1, "", "is_discrete"], [108, 2, 1, "", "is_in_range"], [108, 3, 1, "", "is_numerical"], [108, 3, 1, "", "name"], [108, 2, 1, "", "summary"], [108, 2, 1, "", "to_dict"], [108, 2, 1, "", "to_json"], [108, 2, 1, "", "to_searchspace"], [108, 2, 1, "", "to_subspace"], [108, 2, 1, "", "transform"], [108, 5, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter": [[109, 2, 1, "", "__init__"], [109, 3, 1, "", "active_values"], [109, 5, 1, "", "comp_df"], [109, 3, 1, "", "encoding"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 5, 1, "", "is_continuous"], [109, 5, 1, "", "is_discrete"], [109, 2, 1, "", "is_in_range"], [109, 3, 1, "", "is_numerical"], [109, 3, 1, "", "name"], [109, 2, 1, "", "summary"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_json"], [109, 2, 1, "", "to_searchspace"], [109, 2, 1, "", "to_subspace"], [109, 2, 1, "", "transform"], [109, 5, 1, "", "values"]], "baybe.parameters.custom": [[111, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[111, 2, 1, "", "__init__"], [111, 5, 1, "", "comp_df"], [111, 3, 1, "", "data"], [111, 3, 1, "", "decorrelate"], [111, 3, 1, "", "encoding"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 5, 1, "", "is_continuous"], [111, 5, 1, "", "is_discrete"], [111, 2, 1, "", "is_in_range"], [111, 3, 1, "", "is_numerical"], [111, 3, 1, "", "name"], [111, 2, 1, "", "summary"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_json"], [111, 2, 1, "", "to_searchspace"], [111, 2, 1, "", "to_subspace"], [111, 2, 1, "", "transform"], [111, 5, 1, "", "values"]], "baybe.parameters.enum": [[113, 1, 1, "", "CategoricalEncoding"], [114, 1, 1, "", "CustomEncoding"], [115, 1, 1, "", "ParameterEncoding"], [116, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[113, 3, 1, "", "INT"], [113, 3, 1, "", "OHE"], [113, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[114, 3, 1, "", "CUSTOM"], [114, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[116, 3, 1, "", "MORDRED"], [116, 3, 1, "", "MORGAN_FP"], [116, 3, 1, "", "RDKIT"], [116, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[118, 1, 1, "", "NumericalContinuousParameter"], [119, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[118, 2, 1, "", "__init__"], [118, 3, 1, "", "bounds"], [118, 2, 1, "", "from_dict"], [118, 2, 1, "", "from_json"], [118, 5, 1, "", "is_continuous"], [118, 5, 1, "", "is_discrete"], [118, 2, 1, "", "is_in_range"], [118, 3, 1, "", "is_numerical"], [118, 3, 1, "", "name"], [118, 2, 1, "", "summary"], [118, 2, 1, "", "to_dict"], [118, 2, 1, "", "to_json"], [118, 2, 1, "", "to_searchspace"], [118, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[119, 2, 1, "", "__init__"], [119, 5, 1, "", "comp_df"], [119, 3, 1, "", "encoding"], [119, 2, 1, "", "from_dict"], [119, 2, 1, "", "from_json"], [119, 5, 1, "", "is_continuous"], [119, 5, 1, "", "is_discrete"], [119, 2, 1, "", "is_in_range"], [119, 3, 1, "", "is_numerical"], [119, 3, 1, "", "name"], [119, 2, 1, "", "summary"], [119, 2, 1, "", "to_dict"], [119, 2, 1, "", "to_json"], [119, 2, 1, "", "to_searchspace"], [119, 2, 1, "", "to_subspace"], [119, 3, 1, "", "tolerance"], [119, 2, 1, "", "transform"], [119, 5, 1, "", "values"]], "baybe.parameters.substance": [[121, 3, 1, "", "Smiles"], [122, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[122, 2, 1, "", "__init__"], [122, 5, 1, "", "comp_df"], [122, 3, 1, "", "data"], [122, 3, 1, "", "decorrelate"], [122, 3, 1, "", "encoding"], [122, 2, 1, "", "from_dict"], [122, 2, 1, "", "from_json"], [122, 5, 1, "", "is_continuous"], [122, 5, 1, "", "is_discrete"], [122, 2, 1, "", "is_in_range"], [122, 3, 1, "", "is_numerical"], [122, 3, 1, "", "name"], [122, 2, 1, "", "summary"], [122, 2, 1, "", "to_dict"], [122, 2, 1, "", "to_json"], [122, 2, 1, "", "to_searchspace"], [122, 2, 1, "", "to_subspace"], [122, 2, 1, "", "transform"], [122, 5, 1, "", "values"]], "baybe.parameters.utils": [[124, 4, 1, "", "get_parameters_from_dataframe"]], "baybe.parameters.validation": [[126, 4, 1, "", "validate_decorrelation"], [127, 4, 1, "", "validate_is_finite"], [128, 4, 1, "", "validate_unique_values"]], "baybe.priors": [[130, 0, 0, "-", "base"], [132, 0, 0, "-", "basic"]], "baybe.priors.base": [[131, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "from_dict"], [131, 2, 1, "", "from_json"], [131, 2, 1, "", "to_dict"], [131, 2, 1, "", "to_gpytorch"], [131, 2, 1, "", "to_json"]], "baybe.priors.basic": [[133, 1, 1, "", "GammaPrior"], [134, 1, 1, "", "HalfCauchyPrior"], [135, 1, 1, "", "HalfNormalPrior"], [136, 1, 1, "", "LogNormalPrior"], [137, 1, 1, "", "NormalPrior"], [138, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.GammaPrior": [[133, 2, 1, "", "__init__"], [133, 3, 1, "", "concentration"], [133, 2, 1, "", "from_dict"], [133, 2, 1, "", "from_json"], [133, 3, 1, "", "rate"], [133, 2, 1, "", "to_dict"], [133, 2, 1, "", "to_gpytorch"], [133, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "from_dict"], [134, 2, 1, "", "from_json"], [134, 3, 1, "", "scale"], [134, 2, 1, "", "to_dict"], [134, 2, 1, "", "to_gpytorch"], [134, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "from_dict"], [135, 2, 1, "", "from_json"], [135, 3, 1, "", "scale"], [135, 2, 1, "", "to_dict"], [135, 2, 1, "", "to_gpytorch"], [135, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "from_dict"], [136, 2, 1, "", "from_json"], [136, 3, 1, "", "loc"], [136, 3, 1, "", "scale"], [136, 2, 1, "", "to_dict"], [136, 2, 1, "", "to_gpytorch"], [136, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "from_dict"], [137, 2, 1, "", "from_json"], [137, 3, 1, "", "loc"], [137, 3, 1, "", "scale"], [137, 2, 1, "", "to_dict"], [137, 2, 1, "", "to_gpytorch"], [137, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior": [[138, 2, 1, "", "__init__"], [138, 3, 1, "", "a"], [138, 3, 1, "", "b"], [138, 2, 1, "", "from_dict"], [138, 2, 1, "", "from_json"], [138, 3, 1, "", "sigma"], [138, 2, 1, "", "to_dict"], [138, 2, 1, "", "to_gpytorch"], [138, 2, 1, "", "to_json"]], "baybe.recommenders": [[140, 0, 0, "-", "base"], [142, 0, 0, "-", "meta"], [149, 0, 0, "-", "naive"], [151, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[141, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "recommend"]], "baybe.recommenders.meta": [[143, 0, 0, "-", "base"], [145, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[144, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "from_dict"], [144, 2, 1, "", "from_json"], [144, 2, 1, "", "recommend"], [144, 2, 1, "", "select_recommender"], [144, 2, 1, "", "to_dict"], [144, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential": [[146, 1, 1, "", "SequentialMetaRecommender"], [147, 1, 1, "", "StreamingSequentialMetaRecommender"], [148, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "from_dict"], [146, 2, 1, "", "from_json"], [146, 3, 1, "", "mode"], [146, 2, 1, "", "recommend"], [146, 3, 1, "", "recommenders"], [146, 2, 1, "", "select_recommender"], [146, 2, 1, "", "to_dict"], [146, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "default_iterator"], [147, 2, 1, "", "from_dict"], [147, 2, 1, "", "from_json"], [147, 2, 1, "", "recommend"], [147, 3, 1, "", "recommenders"], [147, 2, 1, "", "select_recommender"], [147, 2, 1, "", "to_dict"], [147, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "from_dict"], [148, 2, 1, "", "from_json"], [148, 3, 1, "", "initial_recommender"], [148, 2, 1, "", "recommend"], [148, 3, 1, "", "recommender"], [148, 2, 1, "", "select_recommender"], [148, 3, 1, "", "switch_after"], [148, 2, 1, "", "to_dict"], [148, 2, 1, "", "to_json"]], "baybe.recommenders.naive": [[150, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[150, 2, 1, "", "__init__"], [150, 3, 1, "", "allow_recommending_already_measured"], [150, 3, 1, "", "allow_repeated_recommendations"], [150, 3, 1, "", "compatibility"], [150, 3, 1, "", "cont_recommender"], [150, 3, 1, "", "disc_recommender"], [150, 2, 1, "", "recommend"]], "baybe.recommenders.pure": [[152, 0, 0, "-", "base"], [154, 0, 0, "-", "bayesian"], [161, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[153, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[153, 2, 1, "", "__init__"], [153, 3, 1, "", "allow_recommending_already_measured"], [153, 3, 1, "", "allow_repeated_recommendations"], [153, 3, 1, "", "compatibility"], [153, 2, 1, "", "recommend"]], "baybe.recommenders.pure.bayesian": [[155, 0, 0, "-", "base"], [157, 0, 0, "-", "botorch"], [159, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[156, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[156, 2, 1, "", "__init__"], [156, 3, 1, "", "acquisition_function"], [156, 3, 1, "", "acquisition_function_cls"], [156, 3, 1, "", "allow_recommending_already_measured"], [156, 3, 1, "", "allow_repeated_recommendations"], [156, 3, 1, "", "compatibility"], [156, 2, 1, "", "recommend"], [156, 3, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch": [[158, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[158, 2, 1, "", "__init__"], [158, 3, 1, "", "acquisition_function"], [158, 3, 1, "", "acquisition_function_cls"], [158, 3, 1, "", "allow_recommending_already_measured"], [158, 3, 1, "", "allow_repeated_recommendations"], [158, 3, 1, "", "compatibility"], [158, 3, 1, "", "hybrid_sampler"], [158, 2, 1, "", "recommend"], [158, 3, 1, "", "sampling_percentage"], [158, 3, 1, "", "sequential_continuous"], [158, 3, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[160, 4, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[162, 0, 0, "-", "base"], [164, 0, 0, "-", "clustering"], [169, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[163, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[163, 2, 1, "", "__init__"], [163, 3, 1, "", "allow_recommending_already_measured"], [163, 3, 1, "", "allow_repeated_recommendations"], [163, 3, 1, "", "compatibility"], [163, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering": [[165, 1, 1, "", "GaussianMixtureClusteringRecommender"], [166, 1, 1, "", "KMeansClusteringRecommender"], [167, 1, 1, "", "PAMClusteringRecommender"], [168, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[165, 2, 1, "", "__init__"], [165, 3, 1, "", "allow_recommending_already_measured"], [165, 3, 1, "", "allow_repeated_recommendations"], [165, 3, 1, "", "compatibility"], [165, 3, 1, "", "model_cluster_num_parameter_name"], [165, 3, 1, "", "model_params"], [165, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[166, 2, 1, "", "__init__"], [166, 3, 1, "", "allow_recommending_already_measured"], [166, 3, 1, "", "allow_repeated_recommendations"], [166, 3, 1, "", "compatibility"], [166, 3, 1, "", "model_cluster_num_parameter_name"], [166, 3, 1, "", "model_params"], [166, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[167, 2, 1, "", "__init__"], [167, 3, 1, "", "allow_recommending_already_measured"], [167, 3, 1, "", "allow_repeated_recommendations"], [167, 3, 1, "", "compatibility"], [167, 3, 1, "", "model_cluster_num_parameter_name"], [167, 3, 1, "", "model_params"], [167, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[168, 2, 1, "", "__init__"], [168, 3, 1, "", "allow_recommending_already_measured"], [168, 3, 1, "", "allow_repeated_recommendations"], [168, 3, 1, "", "compatibility"], [168, 3, 1, "", "model_cluster_num_parameter_name"], [168, 3, 1, "", "model_params"], [168, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling": [[170, 1, 1, "", "FPSRecommender"], [171, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[170, 2, 1, "", "__init__"], [170, 3, 1, "", "allow_recommending_already_measured"], [170, 3, 1, "", "allow_repeated_recommendations"], [170, 3, 1, "", "compatibility"], [170, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[171, 2, 1, "", "__init__"], [171, 3, 1, "", "allow_recommending_already_measured"], [171, 3, 1, "", "allow_repeated_recommendations"], [171, 3, 1, "", "compatibility"], [171, 2, 1, "", "recommend"]], "baybe.scaler": [[173, 1, 1, "", "DefaultScaler"], [174, 1, 1, "", "Scaler"]], "baybe.scaler.DefaultScaler": [[173, 3, 1, "", "SUBCLASSES"], [173, 2, 1, "", "__init__"], [173, 2, 1, "", "fit_transform"], [173, 2, 1, "", "transform"], [173, 3, 1, "", "type"], [173, 2, 1, "", "untransform"]], "baybe.scaler.Scaler": [[174, 3, 1, "", "SUBCLASSES"], [174, 2, 1, "", "__init__"], [174, 2, 1, "", "fit_transform"], [174, 2, 1, "", "transform"], [174, 3, 1, "", "type"], [174, 2, 1, "", "untransform"]], "baybe.searchspace": [[176, 0, 0, "-", "continuous"], [178, 0, 0, "-", "core"], [183, 0, 0, "-", "discrete"], [189, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[177, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[177, 2, 1, "", "__init__"], [177, 5, 1, "", "constraints_cardinality"], [177, 3, 1, "", "constraints_lin_eq"], [177, 3, 1, "", "constraints_lin_ineq"], [177, 3, 1, "", "constraints_nonlin"], [177, 2, 1, "", "empty"], [177, 2, 1, "", "from_bounds"], [177, 2, 1, "", "from_dataframe"], [177, 2, 1, "", "from_dict"], [177, 2, 1, "", "from_json"], [177, 2, 1, "", "from_parameter"], [177, 2, 1, "", "from_product"], [177, 5, 1, "", "full_factorial"], [177, 2, 1, "", "get_parameters_by_name"], [177, 5, 1, "", "is_empty"], [177, 5, 1, "", "param_bounds_comp"], [177, 5, 1, "", "param_names"], [177, 3, 1, "", "parameters"], [177, 2, 1, "", "sample_from_full_factorial"], [177, 2, 1, "", "sample_uniform"], [177, 2, 1, "", "samples_full_factorial"], [177, 2, 1, "", "samples_random"], [177, 2, 1, "", "to_dict"], [177, 2, 1, "", "to_json"], [177, 2, 1, "", "to_searchspace"], [177, 2, 1, "", "transform"]], "baybe.searchspace.core": [[179, 1, 1, "", "SearchSpace"], [180, 1, 1, "", "SearchSpaceType"], [181, 4, 1, "", "to_searchspace"], [182, 4, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[179, 2, 1, "", "__init__"], [179, 5, 1, "", "constraints"], [179, 5, 1, "", "constraints_augmentable"], [179, 5, 1, "", "contains_mordred"], [179, 5, 1, "", "contains_rdkit"], [179, 3, 1, "", "continuous"], [179, 3, 1, "", "discrete"], [179, 2, 1, "", "estimate_product_space_size"], [179, 2, 1, "", "from_dataframe"], [179, 2, 1, "", "from_dict"], [179, 2, 1, "", "from_json"], [179, 2, 1, "", "from_parameter"], [179, 2, 1, "", "from_product"], [179, 2, 1, "", "get_parameters_by_name"], [179, 5, 1, "", "n_tasks"], [179, 5, 1, "", "param_bounds_comp"], [179, 5, 1, "", "parameters"], [179, 5, 1, "", "task_idx"], [179, 2, 1, "", "to_dict"], [179, 2, 1, "", "to_json"], [179, 2, 1, "", "transform"], [179, 5, 1, "", "type"]], "baybe.searchspace.core.SearchSpaceType": [[180, 3, 1, "", "CONTINUOUS"], [180, 3, 1, "", "DISCRETE"], [180, 3, 1, "", "EITHER"], [180, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[184, 1, 1, "", "MemorySize"], [185, 1, 1, "", "SubspaceDiscrete"], [186, 4, 1, "", "parameter_cartesian_prod_pandas"], [187, 4, 1, "", "parameter_cartesian_prod_polars"], [188, 4, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[184, 2, 1, "", "__init__"], [184, 3, 1, "", "comp_rep_bytes"], [184, 5, 1, "", "comp_rep_human_readable"], [184, 3, 1, "", "comp_rep_shape"], [184, 3, 1, "", "exp_rep_bytes"], [184, 5, 1, "", "exp_rep_human_readable"], [184, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[185, 2, 1, "", "__init__"], [185, 3, 1, "", "comp_rep"], [185, 3, 1, "", "constraints"], [185, 2, 1, "", "empty"], [185, 3, 1, "", "empty_encoding"], [185, 2, 1, "", "estimate_product_space_size"], [185, 3, 1, "", "exp_rep"], [185, 2, 1, "", "from_dataframe"], [185, 2, 1, "", "from_dict"], [185, 2, 1, "", "from_json"], [185, 2, 1, "", "from_parameter"], [185, 2, 1, "", "from_product"], [185, 2, 1, "", "from_simplex"], [185, 2, 1, "", "get_candidates"], [185, 2, 1, "", "get_parameters_by_name"], [185, 5, 1, "", "is_empty"], [185, 2, 1, "", "mark_as_measured"], [185, 3, 1, "", "metadata"], [185, 5, 1, "", "param_bounds_comp"], [185, 3, 1, "", "parameters"], [185, 2, 1, "", "to_dict"], [185, 2, 1, "", "to_json"], [185, 2, 1, "", "to_searchspace"], [185, 2, 1, "", "transform"]], "baybe.searchspace.validation": [[190, 4, 1, "", "get_transform_parameters"], [191, 4, 1, "", "validate_parameter_names"], [192, 4, 1, "", "validate_parameters"]], "baybe.serialization": [[194, 0, 0, "-", "core"], [201, 0, 0, "-", "mixin"], [203, 0, 0, "-", "utils"]], "baybe.serialization.core": [[195, 4, 1, "", "block_deserialization_hook"], [196, 4, 1, "", "block_serialization_hook"], [197, 7, 1, "", "converter"], [198, 4, 1, "", "get_base_structure_hook"], [199, 4, 1, "", "select_constructor_hook"], [200, 4, 1, "", "unstructure_base"]], "baybe.serialization.mixin": [[202, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[202, 2, 1, "", "from_dict"], [202, 2, 1, "", "from_json"], [202, 2, 1, "", "to_dict"], [202, 2, 1, "", "to_json"]], "baybe.serialization.utils": [[204, 4, 1, "", "deserialize_dataframe"], [205, 4, 1, "", "serialize_dataframe"]], "baybe.simulation": [[207, 0, 0, "-", "core"], [209, 0, 0, "-", "lookup"], [211, 0, 0, "-", "scenarios"], [213, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[208, 4, 1, "", "simulate_experiment"]], "baybe.simulation.lookup": [[210, 4, 1, "", "look_up_targets"]], "baybe.simulation.scenarios": [[212, 4, 1, "", "simulate_scenarios"]], "baybe.simulation.transfer_learning": [[214, 4, 1, "", "simulate_transfer_learning"]], "baybe.surrogates": [[216, 0, 0, "-", "base"], [218, 0, 0, "-", "custom"], [221, 0, 0, "-", "gaussian_process"], [236, 0, 0, "-", "linear"], [238, 0, 0, "-", "naive"], [240, 0, 0, "-", "ngboost"], [242, 0, 0, "-", "random_forest"], [244, 0, 0, "-", "utils"], [248, 0, 0, "-", "validation"]], "baybe.surrogates.base": [[217, 1, 1, "", "Surrogate"]], "baybe.surrogates.base.Surrogate": [[217, 2, 1, "", "__init__"], [217, 2, 1, "", "fit"], [217, 2, 1, "", "from_dict"], [217, 2, 1, "", "from_json"], [217, 3, 1, "", "joint_posterior"], [217, 2, 1, "", "posterior"], [217, 3, 1, "", "supports_transfer_learning"], [217, 2, 1, "", "to_botorch"], [217, 2, 1, "", "to_dict"], [217, 2, 1, "", "to_json"]], "baybe.surrogates.custom": [[219, 1, 1, "", "CustomONNXSurrogate"], [220, 4, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[219, 2, 1, "", "__init__"], [219, 2, 1, "", "default_model"], [219, 2, 1, "", "fit"], [219, 2, 1, "", "from_dict"], [219, 2, 1, "", "from_json"], [219, 3, 1, "", "joint_posterior"], [219, 3, 1, "", "onnx_input_name"], [219, 3, 1, "", "onnx_str"], [219, 2, 1, "", "posterior"], [219, 3, 1, "", "supports_transfer_learning"], [219, 2, 1, "", "to_botorch"], [219, 2, 1, "", "to_dict"], [219, 2, 1, "", "to_json"], [219, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.gaussian_process": [[222, 0, 0, "-", "core"], [224, 0, 0, "-", "kernel_factory"], [228, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[223, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[223, 2, 1, "", "__init__"], [223, 2, 1, "", "fit"], [223, 2, 1, "", "from_dict"], [223, 2, 1, "", "from_json"], [223, 2, 1, "", "from_preset"], [223, 3, 1, "", "joint_posterior"], [223, 3, 1, "", "kernel_factory"], [223, 2, 1, "", "posterior"], [223, 3, 1, "", "supports_transfer_learning"], [223, 2, 1, "", "to_botorch"], [223, 2, 1, "", "to_dict"], [223, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory": [[225, 1, 1, "", "KernelFactory"], [226, 1, 1, "", "PlainKernelFactory"], [227, 4, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[225, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[226, 2, 1, "", "__init__"], [226, 2, 1, "", "from_dict"], [226, 2, 1, "", "from_json"], [226, 3, 1, "", "kernel"], [226, 2, 1, "", "to_dict"], [226, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.presets": [[229, 0, 0, "-", "core"], [232, 0, 0, "-", "default"], [234, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[230, 1, 1, "", "GaussianProcessPreset"], [231, 4, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[230, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[233, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[233, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[235, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[235, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[237, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[237, 2, 1, "", "__init__"], [237, 2, 1, "", "fit"], [237, 2, 1, "", "from_dict"], [237, 2, 1, "", "from_json"], [237, 3, 1, "", "joint_posterior"], [237, 3, 1, "", "model_params"], [237, 2, 1, "", "posterior"], [237, 3, 1, "", "supports_transfer_learning"], [237, 2, 1, "", "to_botorch"], [237, 2, 1, "", "to_dict"], [237, 2, 1, "", "to_json"]], "baybe.surrogates.naive": [[239, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[239, 2, 1, "", "__init__"], [239, 2, 1, "", "fit"], [239, 2, 1, "", "from_dict"], [239, 2, 1, "", "from_json"], [239, 3, 1, "", "joint_posterior"], [239, 2, 1, "", "posterior"], [239, 3, 1, "", "supports_transfer_learning"], [239, 2, 1, "", "to_botorch"], [239, 2, 1, "", "to_dict"], [239, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost": [[241, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[241, 2, 1, "", "__init__"], [241, 2, 1, "", "fit"], [241, 2, 1, "", "from_dict"], [241, 2, 1, "", "from_json"], [241, 3, 1, "", "joint_posterior"], [241, 3, 1, "", "model_params"], [241, 2, 1, "", "posterior"], [241, 3, 1, "", "supports_transfer_learning"], [241, 2, 1, "", "to_botorch"], [241, 2, 1, "", "to_dict"], [241, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest": [[243, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[243, 2, 1, "", "__init__"], [243, 2, 1, "", "fit"], [243, 2, 1, "", "from_dict"], [243, 2, 1, "", "from_json"], [243, 3, 1, "", "joint_posterior"], [243, 3, 1, "", "model_params"], [243, 2, 1, "", "posterior"], [243, 3, 1, "", "supports_transfer_learning"], [243, 2, 1, "", "to_botorch"], [243, 2, 1, "", "to_dict"], [243, 2, 1, "", "to_json"]], "baybe.surrogates.utils": [[245, 4, 1, "", "autoscale"], [246, 4, 1, "", "batchify"], [247, 4, 1, "", "catch_constant_targets"]], "baybe.surrogates.validation": [[249, 4, 1, "", "get_model_params_validator"], [250, 4, 1, "", "validate_custom_architecture_cls"]], "baybe.targets": [[252, 0, 0, "-", "base"], [254, 0, 0, "-", "enum"], [257, 0, 0, "-", "numerical"], [259, 0, 0, "-", "transforms"]], "baybe.targets.base": [[253, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[253, 2, 1, "", "__init__"], [253, 2, 1, "", "from_dict"], [253, 2, 1, "", "from_json"], [253, 3, 1, "", "name"], [253, 2, 1, "", "summary"], [253, 2, 1, "", "to_dict"], [253, 2, 1, "", "to_json"], [253, 2, 1, "", "to_objective"], [253, 2, 1, "", "transform"]], "baybe.targets.enum": [[255, 1, 1, "", "TargetMode"], [256, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[255, 3, 1, "", "MATCH"], [255, 3, 1, "", "MAX"], [255, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[256, 3, 1, "", "BELL"], [256, 3, 1, "", "LINEAR"], [256, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[258, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[258, 2, 1, "", "__init__"], [258, 3, 1, "", "bounds"], [258, 2, 1, "", "from_dict"], [258, 2, 1, "", "from_json"], [258, 3, 1, "", "mode"], [258, 3, 1, "", "name"], [258, 2, 1, "", "summary"], [258, 2, 1, "", "to_dict"], [258, 2, 1, "", "to_json"], [258, 2, 1, "", "to_objective"], [258, 2, 1, "", "transform"], [258, 3, 1, "", "transformation"]], "baybe.targets.transforms": [[260, 4, 1, "", "bell_transform"], [261, 4, 1, "", "linear_transform"], [262, 4, 1, "", "triangular_transform"]], "baybe.telemetry": [[264, 4, 1, "", "get_user_details"], [265, 4, 1, "", "is_enabled"], [266, 4, 1, "", "telemetry_record_recommended_measurement_percentage"], [267, 4, 1, "", "telemetry_record_value"]], "baybe.utils": [[269, 0, 0, "-", "augmentation"], [272, 0, 0, "-", "basic"], [284, 0, 0, "-", "boolean"], [288, 0, 0, "-", "botorch_wrapper"], [290, 0, 0, "-", "chemistry"], [298, 0, 0, "-", "conversion"], [300, 0, 0, "-", "dataframe"], [309, 0, 0, "-", "interval"], [314, 0, 0, "-", "memory"], [316, 0, 0, "-", "numerical"], [323, 0, 0, "-", "plotting"], [325, 0, 0, "-", "random"], [328, 0, 0, "-", "sampling_algorithms"], [332, 0, 0, "-", "torch"], [335, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[270, 4, 1, "", "df_apply_dependency_augmentation"], [271, 4, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.basic": [[273, 1, 1, "", "Dummy"], [274, 1, 1, "", "classproperty"], [275, 4, 1, "", "find_subclass"], [276, 4, 1, "", "get_baseclasses"], [277, 4, 1, "", "get_subclasses"], [278, 4, 1, "", "group_duplicate_values"], [279, 4, 1, "", "hilberts_factory"], [280, 4, 1, "", "match_attributes"], [281, 4, 1, "", "refers_to"], [282, 4, 1, "", "register_hooks"], [283, 4, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[273, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[274, 2, 1, "", "__init__"]], "baybe.utils.boolean": [[285, 4, 1, "", "check_if_in"], [286, 4, 1, "", "is_abstract"], [287, 4, 1, "", "strtobool"]], "baybe.utils.botorch_wrapper": [[289, 4, 1, "", "botorch_function_wrapper"]], "baybe.utils.chemistry": [[291, 4, 1, "", "get_canonical_smiles"], [292, 4, 1, "", "is_valid_smiles"], [293, 4, 1, "", "name_to_smiles"], [294, 4, 1, "", "smiles_to_fp_features"], [295, 4, 1, "", "smiles_to_molecules"], [296, 4, 1, "", "smiles_to_mordred_features"], [297, 4, 1, "", "smiles_to_rdkit_features"]], "baybe.utils.conversion": [[299, 4, 1, "", "fraction_to_float"]], "baybe.utils.dataframe": [[301, 4, 1, "", "add_fake_results"], [302, 4, 1, "", "add_parameter_noise"], [303, 4, 1, "", "df_drop_single_value_columns"], [304, 4, 1, "", "df_drop_string_columns"], [305, 4, 1, "", "df_uncorrelated_features"], [306, 4, 1, "", "fuzzy_row_match"], [307, 4, 1, "", "pretty_print_df"], [308, 4, 1, "", "to_tensor"]], "baybe.utils.interval": [[310, 6, 1, "", "InfiniteIntervalError"], [311, 1, 1, "", "Interval"], [312, 4, 1, "", "convert_bounds"], [313, 4, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[310, 2, 1, "", "__init__"], [310, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[311, 2, 1, "", "__init__"], [311, 5, 1, "", "center"], [311, 2, 1, "", "contains"], [311, 2, 1, "", "create"], [311, 2, 1, "", "from_dict"], [311, 2, 1, "", "from_json"], [311, 5, 1, "", "is_bounded"], [311, 5, 1, "", "is_degenerate"], [311, 5, 1, "", "is_fully_unbounded"], [311, 5, 1, "", "is_half_bounded"], [311, 5, 1, "", "is_left_bounded"], [311, 5, 1, "", "is_right_bounded"], [311, 3, 1, "", "lower"], [311, 2, 1, "", "to_dict"], [311, 2, 1, "", "to_json"], [311, 2, 1, "", "to_ndarray"], [311, 2, 1, "", "to_tensor"], [311, 2, 1, "", "to_tuple"], [311, 3, 1, "", "upper"]], "baybe.utils.memory": [[315, 4, 1, "", "bytes_to_human_readable"]], "baybe.utils.numerical": [[317, 3, 1, "", "DTypeFloatNumpy"], [318, 3, 1, "", "DTypeFloatONNX"], [319, 7, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [320, 4, 1, "", "closer_element"], [321, 4, 1, "", "closest_element"], [322, 4, 1, "", "geom_mean"]], "baybe.utils.plotting": [[324, 4, 1, "", "create_example_plots"]], "baybe.utils.random": [[326, 4, 1, "", "set_random_seed"], [327, 4, 1, "", "temporary_seed"]], "baybe.utils.sampling_algorithms": [[329, 1, 1, "", "DiscreteSamplingMethod"], [330, 4, 1, "", "farthest_point_sampling"], [331, 4, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[329, 3, 1, "", "FPS"], [329, 3, 1, "", "Random"]], "baybe.utils.torch": [[333, 7, 1, "", "DTypeFloatTorch"], [334, 7, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[336, 4, 1, "", "finite_float"], [337, 4, 1, "", "non_inf_float"], [338, 4, 1, "", "non_nan_float"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception", "7": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 158, 177, 179, 185, 202, 217, 219, 223, 226, 237, 239, 241, 243, 253, 258, 279, 308, 311, 339, 343, 352, 360, 361, 364, 365, 366, 367, 368, 371, 375, 377, 378, 379, 380, 381, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401], "0": [8, 17, 29, 32, 40, 41, 42, 44, 76, 111, 119, 122, 138, 158, 185, 208, 210, 260, 261, 262, 270, 271, 287, 302, 305, 318, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 388, 389, 391, 393, 394, 396, 397, 400], "00": [354, 374, 396], "0000": 367, "000000": [354, 356, 365, 376], "000075": 372, "000999124999907508": 360, "001": 391, "003474": 369, "005": [342, 343, 345, 348, 349], "01": [138, 340, 341, 344, 346, 351, 352, 358, 361, 373, 374, 381], "011295": 371, "011827": 371, "017128": 372, "017797": 374, "02": 381, "020386": 357, "021": [235, 305], "03213": [235, 305], "05": 381, "053579": [354, 356], "057": [342, 343, 345, 348, 349, 360, 361], "06": [185, 247], "062950": 374, "068262": 358, "0724": 367, "076184": 369, "08": [343, 354, 356, 358, 381], "099147": 369, "0f": 361, "0m": [354, 355, 356, 357, 358, 369, 376], "0mdesirabilityobject": 369, "0mdiscret": [354, 355, 356, 357, 358, 369, 376], "0min": [343, 348, 357, 365, 377], "0mmean": 369, "0msingletargetobject": [354, 355, 356, 357, 358, 376], "1": [21, 26, 40, 42, 76, 97, 111, 122, 146, 148, 158, 177, 208, 210, 212, 214, 260, 261, 262, 267, 270, 271, 278, 287, 302, 318, 322, 330, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 388, 390, 391, 393, 394, 396, 397, 398, 400], "10": [210, 235, 305, 340, 341, 343, 346, 348, 354, 355, 356, 361, 364, 365, 366, 367, 369, 376, 377, 378, 380, 381, 383, 394], "100": [346, 354, 355, 356, 357, 358, 361, 364, 365, 366, 367, 369, 376, 381, 393, 394, 400], "102": 373, "1024": [294, 394], "1038": [235, 305], "104": 369, "105": [342, 343, 345, 348, 349, 360, 361, 369, 396], "11": [274, 384], "111": [367, 376], "111111": [367, 376], "1147": 356, "1148": 356, "1149": 356, "1150": 356, "11750": [236, 240, 242], "118": 374, "12": [346, 349, 357, 358, 374, 386, 396], "120": [342, 343, 345, 348, 349, 354, 356, 360, 361, 394], "120000": 373, "122": [367, 376], "1268824": [342, 343, 345, 361], "127": [346, 373], "128": [10, 365], "129": 374, "13": [373, 380, 396], "1337": [361, 362], "136": 369, "14": [355, 396], "140": 365, "145001": 369, "1454": 385, "15": [210, 340, 356, 374, 380, 381, 383, 390, 396], "150": [354, 358, 391], "1500": 394, "151": 356, "153": [342, 343, 345, 348, 349, 360, 361], "155": 365, "159932": 369, "16": [318, 343, 346], "17": 343, "177": 376, "18": [357, 369, 377, 378, 390], "180": 354, "185": 356, "188": [369, 376], "19": [366, 369], "192": 356, "196": 365, "1e": [185, 247, 365], "1mcampaign": [354, 355, 356, 357, 358, 369, 376], "1mcomput": [354, 355, 356, 357, 358, 369, 376], "1mconstraint": [354, 355, 356, 357, 358, 369, 376], "1mdiscret": [354, 355, 356, 357, 358, 369, 376], "1mexperiment": [354, 355, 356, 357, 358, 369, 376], "1min": [343, 348], "1mmeta": [354, 355, 356, 357, 358, 369, 376], "1mmetadata": [354, 355, 356, 357, 358, 369, 376], "1mobject": [354, 355, 356, 357, 358, 369, 376], "1mscalar": 369, "1msearch": [354, 355, 356, 357, 358, 369, 376], "1mtarget": [354, 355, 356, 357, 358, 369, 376], "1mtype": [354, 355, 356, 357, 358, 369, 376], "2": [8, 17, 76, 78, 97, 210, 270, 271, 278, 301, 322, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 388, 390, 391, 393, 394, 396, 397, 398, 400], "20": [122, 210, 342, 343, 345, 346, 349, 361, 362, 369, 377, 385, 394, 401], "200": [343, 354, 356, 364, 365, 366, 367, 376], "2004": 388, "2007": 401, "2021": 343, "2022": 383, "2024": 383, "21": 356, "211391": 372, "213": 349, "216": 349, "22": [369, 374], "221": 385, "222222": [367, 376], "231806": [354, 356], "235979": 369, "239": [364, 365, 367], "24": [341, 344, 355, 396], "240516": 372, "241": 394, "25": [357, 361, 380, 396], "250": 389, "26": [369, 396], "267491": 371, "27": [369, 396], "277": 369, "278": 369, "279": 369, "280": 369, "283002": 371, "287": 346, "287272": 372, "287695": 369, "29": [366, 369, 383], "293208": 369, "295483": 374, "2d": [330, 394], "3": [210, 270, 271, 274, 278, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 354, 355, 356, 357, 358, 360, 361, 362, 365, 367, 369, 371, 372, 373, 374, 376, 377, 380, 381, 383, 384, 386, 388, 390, 391, 394, 396, 397, 400, 401], "30": [340, 346, 358, 362, 394], "301524": 348, "3078f3": 385, "308846": 371, "31": [357, 377], "316223": 369, "32": [348, 355, 357, 365, 369, 394], "324641": 369, "325553": 371, "33": [355, 357, 369], "34": [355, 357], "343427": 369, "35": [343, 355], "351331": 374, "351824": 372, "36": 357, "37": [354, 356, 358, 369], "372829": 372, "374178": 371, "376076": 373, "38": 364, "39": 394, "391739": 371, "393339": 369, "394821": 374, "395289": 369, "3d": 362, "4": [270, 271, 294, 307, 340, 341, 344, 346, 348, 351, 352, 354, 355, 356, 357, 358, 362, 369, 371, 372, 373, 374, 383, 388, 390, 391, 394, 396], "40": [393, 394], "41": 369, "411510": [354, 356, 358], "42": 373, "442172": 372, "443249": 369, "447": 354, "448": 354, "449": 354, "45": [369, 400], "450": 354, "451399": 371, "455603": 369, "46": 369, "462638": 369, "47": 369, "483119": 369, "483903": 371, "488807": 369, "5": [76, 122, 270, 271, 341, 342, 343, 344, 345, 346, 349, 351, 354, 355, 356, 357, 358, 361, 364, 365, 366, 367, 369, 371, 373, 374, 376, 377, 378, 380, 381, 383, 388, 389, 390, 391, 394, 396, 401], "50": [357, 358, 367, 380, 381, 388, 389, 394, 396, 400], "500": [362, 394], "51": 369, "511": 346, "518722": 374, "52": 369, "522062": 372, "525907": 349, "53": 369, "5313": 283, "54": [369, 383], "543836": 357, "55": [369, 400], "551871": 349, "555556": 365, "56": [355, 369], "560977": 374, "57": [377, 378], "59": [376, 383], "590": 343, "592231": 372, "592552": 371, "598000": 374, "598312": 349, "6": [270, 271, 307, 342, 343, 344, 345, 355, 357, 358, 361, 367, 369, 372, 374, 388, 391, 396], "60": [369, 393], "62": 374, "620385": 369, "63": 369, "630071": 371, "630527": 372, "632060": 372, "637588": 369, "640865": 369, "645944": 372, "654672": 371, "655847": 369, "66368270ffd51418ec58bd793f2d9b1b": 401, "689040": 369, "69": [342, 343, 345, 361], "692825": 374, "7": [122, 270, 271, 305, 343, 348, 355, 358, 362, 369, 372, 380, 388, 394, 396], "70": 369, "706375": 369, "706667": 373, "7071": 367, "71": 394, "714286": 356, "714958": 369, "73": 369, "730431": 373, "731868": 369, "736092": 348, "739874": 369, "74": 369, "75": [357, 373, 396], "759277": 369, "771304": 369, "777778": 376, "78": 364, "784838": 369, "788585": 374, "79": 383, "792072": 369, "7gz": 394, "7hf": 394, "8": [271, 341, 342, 344, 345, 346, 348, 354, 356, 358, 365, 369, 383, 388, 391], "80": 391, "813798": 369, "82": 369, "821857": 369, "822993": 374, "83": 371, "836804": 372, "8389": 283, "84": 369, "8417": 283, "847457": 369, "857143": 356, "861": 358, "862": 358, "863": 358, "864": 358, "87": [348, 371, 376], "88": [369, 376], "8859": 366, "888889": 376, "89": [343, 369, 376], "8jq": 394, "9": [343, 349, 354, 356, 358, 362, 366, 369, 388, 390, 396, 397], "90": [342, 343, 345, 348, 349, 360, 361, 376, 396], "912858": 371, "923163": 374, "93": 369, "930097": 371, "934914": 369, "94": 371, "944727": 369, "95": 369, "955705": 372, "96": 343, "999": 391, "A": [0, 8, 17, 21, 34, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 59, 60, 61, 64, 66, 68, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 94, 96, 97, 101, 111, 119, 122, 124, 132, 133, 134, 135, 136, 137, 138, 141, 146, 147, 148, 150, 153, 156, 158, 160, 163, 165, 166, 167, 168, 170, 171, 173, 177, 179, 185, 186, 187, 202, 203, 208, 210, 212, 214, 219, 220, 223, 225, 226, 233, 235, 237, 239, 241, 243, 249, 253, 258, 260, 261, 262, 270, 274, 276, 277, 278, 280, 288, 289, 301, 305, 308, 315, 322, 328, 330, 355, 364, 365, 367, 369, 377, 378, 384, 385, 386, 388, 391, 394, 395, 396, 397, 398, 400, 401], "AND": [47, 356, 388, 391], "AS": [383, 388], "And": 366, "As": [341, 342, 343, 345, 362, 369, 380, 381, 383, 385, 391, 395, 396, 398], "At": 400, "But": 400, "By": [96, 109, 124, 185, 286, 386, 392, 395, 396], "FOR": 388, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 129, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 184, 185, 208, 214, 217, 219, 223, 226, 233, 235, 237, 239, 241, 243, 253, 258, 263, 282, 306, 311, 324, 340, 341, 342, 343, 344, 345, 346, 348, 349, 355, 360, 361, 362, 369, 372, 374, 380, 381, 383, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "If": [6, 13, 26, 34, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 97, 124, 127, 128, 146, 147, 150, 173, 174, 177, 179, 185, 190, 191, 192, 208, 210, 212, 214, 217, 219, 223, 237, 239, 241, 243, 245, 247, 261, 266, 271, 276, 277, 280, 282, 285, 287, 295, 296, 297, 299, 301, 302, 305, 306, 324, 330, 331, 349, 351, 361, 373, 374, 377, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 400, 401], "In": [26, 32, 41, 42, 50, 158, 179, 206, 208, 280, 307, 341, 342, 343, 345, 346, 348, 361, 362, 366, 369, 372, 373, 374, 377, 383, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401], "It": [21, 141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 206, 218, 239, 301, 342, 346, 348, 349, 355, 367, 369, 372, 373, 374, 376, 377, 378, 380, 383, 390, 391, 392, 394, 395, 396, 398], "Its": [210, 366], "No": [357, 364, 385], "Not": [388, 391], "OF": [383, 388], "OR": [383, 388], "Of": [349, 359, 382, 397], "On": 366, "One": [113, 342, 345, 383], "Or": 392, "Such": [349, 391, 398], "That": [179, 210, 261, 341, 349, 354, 372, 386, 396, 398, 401], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 97, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 124, 129, 131, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 173, 174, 177, 179, 184, 185, 190, 197, 198, 200, 202, 206, 208, 210, 212, 217, 219, 223, 226, 237, 239, 241, 243, 245, 246, 247, 249, 250, 253, 255, 258, 260, 261, 262, 264, 266, 267, 270, 271, 274, 276, 277, 278, 280, 282, 285, 286, 287, 289, 299, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 315, 320, 321, 322, 324, 326, 327, 330, 331, 341, 342, 343, 344, 345, 346, 349, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 369, 372, 373, 374, 378, 380, 381, 385, 386, 388, 390, 391, 392, 393, 394, 395, 396, 399, 400, 402], "Their": 349, "Then": 362, "There": [63, 247, 318, 383, 386, 396], "These": [264, 339, 341, 343, 344, 345, 346, 347, 350, 353, 359, 363, 368, 370, 372, 375, 379, 386, 391, 392, 394, 396], "To": [341, 342, 349, 361, 362, 376, 380, 381, 383, 384, 386, 390, 392, 394, 398], "Will": 389, "With": [301, 361, 362, 380, 381, 383, 391, 394, 397], "_": [127, 128, 182, 188, 195, 324, 361, 365, 381], "________________________________________________________________________________": [343, 348, 357, 365, 377], "_______________________________________smiles_to_mordred_featur": [343, 348, 357, 365, 377], "__class__": 360, "__excepthook__": 384, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 173, 174, 177, 179, 184, 185, 217, 219, 223, 225, 226, 233, 235, 237, 239, 241, 243, 253, 258, 273, 274, 310, 311, 364, 365, 396, 397], "__name__": 360, "__new__": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 113, 114, 116, 310], "__str__": 385, "__version__": 385, "_botorch_acqf": [349, 354, 355, 356, 357, 358, 369, 376], "_c": 277, "_create_hidden_lay": 365, "_create_linear_block": 365, "_cumbest": 208, "_default_my_attribut": 386, "_fit": [250, 364, 365], "_iterbest": 208, "_measur": 208, "_model": [349, 354, 355, 356, 357, 358, 369, 376], "_n_last_measur": 146, "_nbase": [294, 296, 297], "_nestedsequ": [97, 260, 261, 262, 321], "_no_tl": 380, "_option": 385, "_posterior": [250, 364, 365], "_smiles_to_mordred_featur": [343, 348, 357, 365, 377], "_step": 146, "_supportsarrai": [97, 260, 261, 262, 321], "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 177, 179, 185, 190, 198, 199, 202, 217, 219, 223, 226, 237, 239, 241, 243, 253, 258, 278, 279, 311], "_target": 385, "_tparamet": 124, "_u": 278, "_validate_my_attribut": 386, "a1": 271, "a2": 271, "ab": [357, 358], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 275, 281, 385, 402], "abc": [19, 29, 30, 31, 32, 33, 34, 36, 71, 72, 73, 91, 105, 106, 131, 144, 153, 156, 163, 168, 174, 217, 253, 286], "abil": [389, 401], "abl": [246, 362, 391, 394, 397], "about": [21, 26, 106, 122, 217, 219, 223, 237, 239, 241, 243, 253, 267, 342, 343, 345, 371, 372, 373, 374, 383, 385, 386, 394, 396], "abov": [247, 262, 286, 305, 349, 356, 358, 360, 361, 383, 386, 388, 389, 390, 391, 392, 394, 397, 401], "absenc": 393, "absolut": [119, 302, 383], "abstract": [19, 29, 30, 31, 32, 33, 34, 36, 71, 72, 73, 91, 104, 105, 106, 131, 144, 153, 156, 163, 174, 217, 253, 276, 277, 286, 385, 391, 401], "acceler": [383, 385, 387, 401], "accept": [26, 146, 223, 289, 306, 361, 362, 372, 385, 388, 393, 394, 398, 400], "access": [177, 185, 342, 343, 345, 354, 360, 381, 385, 391, 397], "accord": [40, 142, 292, 330, 389, 391, 392, 395], "accordingli": [158, 390, 397], "accumul": 401, "accur": 390, "acet": [342, 343, 345, 348, 349, 361], "achiev": [185, 362, 383, 386, 389, 390, 391], "ack": 383, "acq_funct": 349, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 24, 361, 362], "acqf1": 397, "acqf2": 397, "acqf_valu": 361, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 60, 156, 158, 361, 362, 385, 389, 395, 397], "acquisition_funct": [156, 158, 341, 349, 354, 355, 356, 357, 358, 369, 376, 377, 378, 385], "acquisition_function_cl": [156, 158, 349, 354, 355, 356, 357, 358, 369, 376, 385], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 23, 24, 156, 158, 397], "across": [220, 380, 395, 401], "act": [385, 388, 391], "action": [360, 385, 402], "activ": [13, 29, 109, 148, 361, 362, 365, 383, 385, 386, 391, 392, 393, 395, 401, 402], "active_dim": [71, 72, 73, 76, 78, 80, 81, 82], "active_valu": [109, 380, 381, 401], "actual": [146, 179, 206, 344, 357, 372, 373, 385, 396, 398, 401], "ad": [26, 185, 245, 247, 266, 270, 301, 330, 386, 389, 392, 393, 394, 400, 402], "adam": 365, "adapt": [235, 287, 305], "add": [26, 200, 210, 301, 349, 364, 365, 366, 367, 369, 371, 372, 373, 374, 380, 383, 388, 390, 391, 396, 401], "add_collection3d": 362, "add_fake_result": [348, 349, 354, 355, 356, 357, 358, 364, 365, 366, 367, 369, 385], "add_measur": [26, 348, 349, 351, 352, 354, 355, 356, 357, 358, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 383, 385, 390, 392], "add_subplot": 362, "addendum": 388, "addit": [26, 91, 96, 101, 146, 158, 179, 200, 208, 210, 212, 245, 247, 302, 341, 342, 343, 344, 345, 346, 349, 371, 372, 373, 374, 381, 383, 385, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 401], "addition": [360, 383], "additivekernel": 385, "adher": [385, 386], "adjust": [341, 343, 349, 373, 385], "adopt": 349, "adrian": [383, 387], "advanc": [385, 392, 397, 401], "advantag": 386, "advic": 386, "advis": [388, 396, 398], "affect": [46, 270, 360, 376, 391], "affected_paramet": [46, 354, 355, 356, 357, 358, 391], "affili": [383, 392], "afford": 390, "aforement": 179, "after": [148, 185, 282, 348, 362, 383, 390, 397], "afterward": 397, "again": [361, 391, 395, 401], "against": [67, 266, 280, 388, 401], "agraw": 387, "agre": [344, 383, 388], "agreement": 388, "ai": [69, 129, 318], "aim": 390, "al": [343, 383, 394], "aldrich": 387, "alex": 387, "alexand": [383, 387], "algorithm": [151, 158, 301, 328, 330, 369, 383, 395], "alia": [121, 160], "alias": 385, "align": [177, 282, 361, 396, 401], "all": [18, 19, 28, 30, 36, 46, 48, 70, 71, 72, 73, 90, 91, 96, 101, 103, 106, 109, 111, 115, 122, 130, 131, 140, 143, 144, 146, 152, 153, 155, 158, 162, 163, 173, 174, 179, 186, 187, 210, 216, 217, 252, 253, 270, 280, 301, 308, 342, 343, 345, 349, 351, 352, 354, 355, 360, 361, 362, 365, 369, 371, 373, 380, 381, 383, 385, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "allclos": [351, 352], "alleg": 388, "allow": [29, 40, 44, 48, 119, 124, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 179, 185, 212, 267, 285, 306, 342, 343, 345, 349, 380, 381, 383, 385, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400], "allow_extra": [177, 179, 185, 190, 361, 362, 385], "allow_miss": [177, 179, 185, 190, 385], "allow_recommending_already_measur": [150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 185, 349, 354, 355, 356, 357, 358, 361, 369, 376, 377, 378, 385, 395], "allow_repeated_recomm": [349, 354, 355, 356, 357, 358, 369], "allow_repeated_recommend": [150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 185, 349, 354, 355, 356, 357, 358, 361, 369, 376, 377, 378, 385, 395], "almost": 343, "alon": [385, 388], "along": [322, 388, 394, 401], "alongsid": 388, "alpha": 362, "alreadi": [26, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 185, 245, 247, 349, 374, 383, 389, 395, 396, 401], "also": [50, 124, 267, 280, 282, 341, 342, 351, 352, 357, 361, 362, 366, 367, 369, 371, 373, 374, 376, 380, 381, 383, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401], "alter": [385, 390], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 247, 322, 360, 383, 385, 402], "although": [374, 377, 396, 398], "alwai": [13, 36, 195, 196, 366, 383, 389, 390, 391, 398, 401], "ambigu": [119, 396], "amend": 391, "among": [29, 401], "amount": [271, 331, 372, 380, 381, 394], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 23, 24, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 60, 65, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 92, 94, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 124, 131, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 185, 198, 200, 202, 206, 208, 210, 212, 217, 219, 223, 226, 237, 239, 241, 243, 245, 247, 253, 258, 270, 279, 280, 282, 285, 293, 305, 306, 310, 311, 312, 321, 324, 330, 331, 342, 345, 347, 349, 356, 357, 358, 360, 361, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401], "analog": [179, 301, 396, 397], "analogi": [142, 395], "analyt": [3, 4, 7, 8, 60, 339, 372, 382, 398, 401], "analyz": 386, "angl": 362, "ani": [54, 55, 97, 104, 105, 106, 108, 109, 111, 122, 124, 126, 127, 128, 179, 185, 195, 196, 200, 204, 205, 212, 237, 241, 243, 260, 261, 262, 267, 270, 280, 282, 283, 285, 286, 306, 311, 313, 321, 336, 337, 338, 360, 380, 381, 383, 384, 385, 386, 388, 390, 392, 394, 397, 398, 401], "annot": [282, 360, 388], "anonym": [383, 392], "anoth": [46, 312, 343, 355, 356, 364, 365, 366, 367, 374, 386, 391, 401], "ansatz": 385, "answer": 390, "anymor": 401, "anyth": 287, "anywher": 351, "apach": [383, 388], "apart": [386, 390], "api": [32, 41, 42, 289, 383, 384, 397], "appar": 397, "appear": [280, 384, 385, 388, 397], "append": [351, 352, 362, 371, 372, 373, 374, 381], "appendix": 388, "appli": [26, 36, 37, 38, 50, 158, 179, 206, 208, 280, 293, 302, 349, 350, 353, 354, 356, 357, 358, 360, 361, 362, 380, 381, 384, 385, 388, 391, 393, 395, 396, 397, 398, 400, 401], "applic": [383, 386, 388, 394, 395, 398], "approach": [185, 361, 383, 389, 390, 395, 397, 401], "appropri": [88, 185, 386, 388], "approxim": 10, "ar": [6, 12, 14, 26, 29, 34, 36, 37, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 61, 62, 63, 96, 97, 109, 122, 124, 128, 146, 147, 148, 177, 179, 185, 190, 208, 210, 212, 214, 217, 219, 223, 237, 239, 241, 243, 246, 262, 264, 266, 267, 270, 271, 276, 277, 278, 280, 282, 286, 287, 301, 303, 306, 324, 330, 341, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 367, 369, 371, 373, 376, 377, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "arang": [351, 362, 394], "arbitrari": [147, 179, 313, 372, 385, 391, 394, 395, 398, 401], "arbitrarili": [393, 397], "architectur": [220, 250, 363, 382, 385, 399, 401], "ard_num_dim": [71, 72, 73, 76, 78, 80, 81, 82], "area": 362, "arg": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 75, 77, 79, 84, 85, 86, 131, 133, 134, 135, 136, 137, 138, 141, 160, 225, 310, 386], "argument": [68, 69, 124, 129, 177, 185, 282, 349, 367, 369, 385, 391, 396, 397, 398, 401], "aris": [49, 388, 391, 397], "arithmet": [99, 393], "arizona": 387, "around": [167, 212, 214, 220, 369, 385, 395, 397], "arr": [260, 261, 262, 322], "arrai": [97, 177, 260, 261, 262, 273, 317, 321, 322, 330, 362, 385, 395, 399], "arriv": 383, "aryl": [342, 343, 345, 348, 383, 394], "ascend": 369, "ask": [383, 385, 386, 390], "aspect": [347, 351, 352, 371, 374, 392], "assembl": 397, "assembli": 402, "assert": [55, 354, 355, 356, 357, 358, 366, 367, 376, 385, 388, 390, 391, 397], "assess": 398, "assign": [301, 361, 394], "associ": [388, 390, 392, 393, 401], "assum": [21, 218, 282, 340, 341, 342, 343, 344, 345, 346, 349, 351, 352, 354, 355, 356, 357, 358, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 383, 388, 391, 394, 397, 400], "assumpt": 398, "assur": 391, "ation": 376, "atol": [351, 352], "attach": [21, 282, 360, 361, 362, 388], "attempt": [65, 218, 324, 384, 391, 395], "attent": 148, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 184, 185, 217, 219, 223, 226, 233, 235, 237, 239, 241, 243, 253, 258, 280, 283, 311, 385], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 67, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 99, 101, 104, 105, 106, 108, 109, 111, 113, 114, 116, 118, 119, 120, 122, 124, 126, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 173, 174, 177, 179, 180, 184, 185, 194, 198, 200, 217, 219, 223, 226, 230, 233, 235, 237, 239, 241, 243, 245, 247, 250, 253, 255, 256, 258, 280, 311, 316, 329, 332, 335, 336, 337, 338, 385, 386, 388, 395, 397, 399, 400], "audit": [383, 385, 386], "augment": [29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 179, 245, 247, 385, 390], "author": 388, "authorship": 388, "auto": [12, 14, 385, 387], "auto_tutori": 318, "autodoc": 385, "automat": [26, 94, 158, 223, 245, 306, 362, 373, 385, 386, 393, 395, 396, 401, 402], "avail": [2, 99, 111, 113, 114, 116, 122, 146, 147, 185, 208, 210, 230, 236, 240, 242, 255, 256, 267, 329, 330, 331, 344, 345, 348, 351, 352, 369, 371, 373, 374, 383, 385, 386, 388, 390, 394, 395, 396, 397, 398, 401, 402], "available_acq_funct": 349, "averag": [239, 361, 362, 381, 394, 398], "avoid": [179, 283, 322, 385, 386, 390, 394, 396], "awai": 400, "awar": [380, 381, 389, 397], "ax": [324, 340, 343, 361, 362, 380, 381], "axes3d": [324, 362], "axi": [177, 208, 322, 357, 358, 361, 362, 364, 369, 380, 381, 396], "azim": 362, "azur": 385, "b": [49, 138, 235, 270, 278, 305, 343, 355, 364, 365, 367, 377, 378, 383, 386, 388, 390, 394, 397], "b1": 271, "b2": 271, "back": [0, 173, 174, 376, 386], "backend": 267, "backport": 384, "backtest": [206, 207, 213, 342, 343, 345, 349, 361, 379, 382, 383, 385, 395, 398], "backtick": 386, "backward": [87, 93, 159, 160, 179, 365, 385], "bad": [369, 390, 392, 400], "bad_interv": 301, "badg": 385, "bai": 383, "baird": 387, "balanc": [96, 383], "banana": 386, "banner": 385, "bar": [364, 365, 366, 367, 376, 377, 378, 383, 385], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 99, 101, 104, 105, 106, 108, 109, 111, 113, 114, 115, 116, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 141, 144, 145, 146, 147, 148, 150, 153, 156, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 179, 180, 184, 185, 198, 200, 202, 217, 218, 219, 220, 223, 225, 226, 230, 233, 235, 237, 239, 241, 243, 245, 247, 249, 253, 255, 256, 258, 273, 274, 275, 276, 277, 311, 324, 329, 348, 349, 361, 362, 364, 366, 383, 385, 388, 389, 392, 394, 395, 397, 399], "base_kernel": [84, 85, 86], "base_nam": [324, 340, 343, 361, 362, 380, 381], "baseestim": 364, "baselin": [343, 380, 383, 394], "bashrc": 392, "basi": [80, 383, 388], "basic": [71, 75, 76, 77, 78, 79, 80, 81, 82, 133, 134, 135, 136, 137, 138, 208, 273, 274, 340, 341, 342, 343, 344, 345, 346, 349, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 379, 382, 385, 386, 393, 394, 398, 402], "basic_transfer_learn": 381, "basickernel": [75, 76, 77, 78, 79, 80, 81, 82, 385], "batch": [26, 141, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 211, 217, 219, 220, 223, 237, 239, 241, 243, 246, 349, 354, 355, 356, 357, 358, 362, 369, 371, 372, 373, 374, 376, 380, 381, 385, 395, 398], "batch_quant": 385, "batch_shap": [71, 72, 73, 76, 78, 80, 81, 82], "batch_siz": [26, 40, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 208, 212, 214, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 380, 381, 383, 385, 390, 392, 398], "batchifi": 220, "batchify_posterior": [220, 364, 365], "batchnr": 369, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 99, 101, 104, 105, 106, 108, 109, 111, 113, 114, 115, 116, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 173, 174, 177, 179, 180, 184, 185, 202, 217, 219, 223, 225, 226, 230, 233, 235, 237, 239, 241, 243, 253, 255, 256, 258, 273, 274, 311, 329, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "baybe_cach": 392, "baybe_cache_dir": [385, 392], "baybe_deactivate_polar": 392, "baybe_debug_fake_hosthash": 385, "baybe_debug_fake_userhash": 385, "baybe_dev": [377, 378], "baybe_numpy_use_single_precis": [319, 385, 392], "baybe_telemetry_en": [383, 392], "baybe_telemetry_endpoint": [385, 392], "baybe_telemetry_host": 385, "baybe_telemetry_hostnam": [385, 392], "baybe_telemetry_usernam": [385, 392], "baybe_telemetry_vpn_check": [385, 392], "baybe_telemetry_vpn_check_timeout": [385, 392], "baybe_torch_use_single_precis": [334, 385, 392], "bayesian": [0, 150, 156, 158, 206, 208, 212, 214, 218, 237, 385, 389, 390, 402], "bayesian_recommend": 362, "bayesianlinearmodel": 367, "bayesianlinearsurrog": [349, 399], "bayesianrecommend": [150, 158, 218, 385, 395], "bayesianridg": 366, "bcw07": 401, "becaus": [63, 119, 179, 185, 214, 286, 360, 361, 381, 386, 389, 390, 391, 392, 393, 394, 397, 401], "becom": [179, 246, 389, 390, 391, 397, 400], "been": [21, 60, 146, 185, 306, 342, 343, 349, 377, 378, 383, 384, 385, 388, 395, 398, 401], "befor": [148, 208, 245, 282, 345, 349, 355, 361, 383, 386, 392, 394, 396, 398], "begin": [146, 354, 356, 376, 395], "behalf": 388, "behav": [362, 376, 397], "behavior": [158, 344, 377, 378, 385, 392, 393, 395, 396, 398, 401], "behind": [393, 397, 400], "being": [86, 301, 324, 384, 391, 392, 394, 396], "bell": [256, 260, 369, 400], "belong": [185, 360, 397], "below": [247, 262, 356, 360, 361, 386, 388, 389, 390, 391, 393, 397, 400, 401], "benchmark": 383, "benefici": [388, 389, 392], "benefit": [391, 401], "benzo": 401, "besid": [383, 393, 400], "best": [12, 14, 208, 210, 212, 345, 383, 392, 395, 398], "bet": 390, "beta": [8, 17, 349, 385, 389], "better": [10, 301, 343, 385, 390, 391, 394], "between": [29, 46, 119, 147, 177, 185, 233, 344, 360, 362, 369, 374, 380, 381, 383, 385, 390, 391, 392, 394, 395, 396, 397, 400, 401], "beyond": 383, "bias": 394, "binar": 385, "binari": [376, 385, 397], "bind": [360, 362, 388], "bit": [294, 394], "black": [206, 398, 401], "blank": 386, "blob": 235, "block": [361, 365, 383, 384, 385, 392, 397], "bodi": 360, "bonilla": 401, "bool": [6, 12, 14, 21, 26, 29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 97, 104, 105, 106, 108, 109, 111, 118, 119, 122, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 185, 190, 217, 219, 220, 223, 237, 239, 241, 243, 260, 261, 262, 265, 266, 276, 277, 280, 281, 286, 287, 292, 296, 297, 306, 311, 321], "boolean": [29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 104, 105, 106, 108, 109, 111, 118, 119, 122, 190, 220, 349, 392], "boost": [241, 381], "both": [10, 124, 179, 185, 214, 262, 282, 355, 361, 366, 369, 380, 381, 383, 389, 391, 394, 396, 397, 400], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 32, 41, 42, 150, 158, 160, 217, 219, 223, 237, 239, 241, 243, 288, 289, 339, 341, 351, 352, 362, 370, 374, 380, 381, 382, 385, 392, 395], "botorch_acqf": [21, 361, 362], "botorch_analyt": 340, "botorch_function_wrapp": [340, 351, 352, 362, 371, 373, 374, 380, 381], "botorch_wrapp": [340, 351, 352, 362, 371, 373, 374, 380, 381], "botorchrecommend": [150, 160, 341, 344, 349, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 367, 369, 374, 376, 377, 378, 383, 385, 390, 395], "bottom": 390, "bound": [8, 17, 29, 118, 124, 138, 177, 179, 185, 190, 258, 259, 277, 282, 311, 312, 340, 341, 344, 346, 349, 351, 352, 362, 369, 371, 372, 373, 374, 380, 381, 385, 394, 397, 400, 402], "boundari": [185, 260, 261, 369], "boundary_onli": 185, "bounded": 385, "bounds_transform_func": 385, "box": [138, 206, 398, 401], "brain": [398, 401], "branch": [383, 386], "break": [218, 397], "brettpho": [342, 343, 345, 348, 349, 361], "briefli": [398, 401], "bring": [383, 385], "bro": 235, "broad": 397, "brute": [158, 395], "bu": [342, 343, 345, 348, 349, 361], "budget": 390, "bug": [236, 240, 242, 385, 386], "build": [177, 185, 218, 361, 384, 385, 386, 391, 397, 401, 402], "built": [185, 366, 383, 386, 390, 395], "builtin": 274, "bump": 385, "button": 385, "butyl": [342, 343, 345, 348, 349, 361], "butylphenylphosphin": [342, 343, 345, 348, 349, 361], "butyornitril": [342, 343, 345, 348, 349, 361], "bypass": [124, 361], "byte": [97, 184, 219, 260, 261, 262, 315, 321, 385], "c": [49, 270, 278, 342, 343, 345, 348, 349, 354, 355, 356, 357, 358, 361, 364, 365, 367, 377, 378, 383, 388, 390, 394, 397], "c1": [342, 343, 345, 348, 349, 354, 355, 356, 357, 358, 361, 394], "c1c2": [342, 343, 345, 348, 349, 361], "c1ccccc1": [342, 343, 345, 354, 356, 361], "c1ccoc1": 391, "c2": [342, 343, 345, 348, 349, 354, 356, 357, 358, 361], "c2ccccc2": [342, 343, 345, 361], "c2oc": [342, 343, 345, 348, 349, 361], "c2p": [342, 343, 345, 348, 349, 361], "c3": [342, 343, 345, 348, 349, 354, 356, 357, 361], "c3c": [342, 343, 345, 361], "c3ccccc3": [342, 343, 345, 348, 349, 361], "c4": [342, 343, 345, 354, 356, 361], "c4ccccc": 348, "c4ccccc4": [342, 343, 345, 348, 349, 361], "c5": [354, 356], "c6": [354, 356], "c_i": [41, 42, 391], "cach": [266, 385, 397, 402], "cached_recommend": 266, "calcul": [217, 219, 223, 237, 239, 241, 243, 266, 322, 341, 344, 346, 351, 357, 362, 371, 372, 373, 374, 380, 392, 394, 396], "calibr": 401, "call": [32, 41, 42, 68, 146, 266, 267, 282, 341, 342, 343, 344, 345, 348, 357, 360, 365, 367, 377, 378, 383, 384, 385, 389, 390, 391, 392, 394, 397, 398, 401], "callabl": [45, 67, 124, 198, 206, 208, 210, 212, 214, 220, 246, 249, 250, 274, 279, 280, 282, 360, 385, 402], "callable_": 280, "callback": 398, "campaign": [208, 211, 212, 214, 301, 302, 347, 348, 356, 359, 362, 364, 365, 378, 380, 381, 382, 383, 385, 389, 391, 393, 394, 396, 397, 398, 399, 401, 402], "campaign1": 398, "campaign2": 398, "campaign_json": 390, "campaign_oh": 343, "campaign_rand": [342, 343, 345], "campaign_recr": 376, "campaign_stop": 361, "campaign_with_hook": 361, "campaignstoppedexcept": 361, "can": [13, 21, 29, 36, 37, 38, 49, 91, 96, 101, 105, 111, 119, 122, 141, 150, 151, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 185, 206, 210, 218, 247, 265, 267, 280, 282, 286, 301, 302, 306, 318, 340, 341, 342, 343, 344, 345, 346, 349, 350, 353, 354, 355, 356, 360, 361, 362, 365, 366, 367, 369, 371, 372, 373, 374, 377, 380, 381, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401], "canada": 387, "candid": [12, 14, 168, 170, 177, 185, 217, 219, 220, 223, 237, 239, 241, 243, 361, 364, 365, 381, 389, 390, 395, 396], "candidates_comp_rep": 361, "cannot": [13, 66, 67, 218, 219, 220, 247, 287, 324, 385, 388, 391, 392, 394, 395, 397, 399, 401], "canon": [291, 397], "capabl": [339, 368, 375, 379, 381, 385, 390, 401], "captur": 394, "cardin": [29, 40, 44, 54, 55, 177, 385, 387], "cardinalityconstraint": [40, 44, 385], "care": [386, 391, 393], "carefulli": 392, "carlo": [9, 10, 11, 12, 13, 14, 15, 16, 17, 60, 212, 340, 341, 343, 344, 345, 346, 361, 365, 380, 381, 398], "carri": [282, 360, 388], "cartesian": [179, 185, 186, 187, 383, 385, 396], "case": [214, 247, 282, 301, 307, 341, 361, 373, 374, 377, 383, 386, 389, 390, 391, 392, 394, 397, 398, 400, 401], "cast": [32, 41, 42, 385, 392], "cat": 365, "cat_1": 369, "cat_1_22": 369, "cat_1_33": 369, "cat_2": 369, "catch_constant_target": 220, "categor": [26, 108, 109, 113, 185, 192, 306, 383, 385, 394, 396, 400], "categori": [343, 361, 383, 397, 400], "categorial_1": 390, "categorical_1": [369, 390], "categorical_2": [369, 390], "categorical_paramet": 397, "categorical_parameter_json": 397, "categorical_parameter_reconstruct": 397, "categoricalencod": [108, 109, 354, 355, 356, 358, 369, 376], "categoricalparamet": [109, 185, 343, 354, 355, 356, 358, 364, 365, 367, 369, 376, 377, 378, 383, 396, 397, 402], "cattr": [197, 198, 200, 378, 384, 385, 386], "cauchi": 134, "caus": [119, 270, 274, 385, 388], "caution": 401, "cc": [342, 343, 345, 348, 349, 354, 356, 357, 358, 361, 394, 401], "cc1": [342, 343, 345, 348, 349, 361, 394], "ccc": [354, 356, 357, 364, 365, 367, 383], "cccc": [342, 343, 345, 348, 349, 354, 356, 361], "ccccc": [354, 356, 377, 378], "cccccc": [354, 356], "cccccccco": [391, 394], "ccccoc": [342, 343, 345, 348, 349, 361], "ccoccoccn": [377, 378], "cdot": [391, 393], "ceil": 361, "cell": [366, 394, 398, 401], "cell_lin": 401, "center": [260, 262, 311, 369, 390], "central": [385, 390], "certain": [46, 67, 148, 198, 200, 206, 267, 301, 355, 361, 383, 386, 391, 395, 396, 397, 401], "cesium": [342, 343, 345, 348, 349, 361], "chai": 401, "chain": [34, 274, 391], "challeng": [386, 397], "chanc": 384, "chang": [46, 146, 301, 349, 373, 383, 384, 386, 388, 390, 392, 396, 401], "charact": 388, "characterist": 274, "charg": 388, "check": [26, 104, 105, 106, 108, 109, 111, 118, 119, 122, 266, 281, 284, 285, 286, 287, 306, 311, 320, 373, 374, 376, 383, 385, 386, 392, 396, 397], "checkout": 386, "chem": [383, 385, 394], "chemic": [116, 293, 295, 296, 297, 343, 348, 385, 387, 391, 394, 401], "cheminformat": [122, 383, 385], "chemistri": [111, 343, 348, 357, 365, 377], "child": [165, 166, 167, 168], "chocol": 386, "choic": [208, 210, 360, 364, 374, 385, 391, 393, 394, 395, 396, 397, 398, 400], "choos": [142, 340, 369, 371, 373, 374, 383, 388, 389, 390, 395, 398, 399, 400], "chose": [373, 395, 397], "chosen": [150, 208, 210, 214, 326, 327, 330, 349, 357, 385, 389, 391, 394, 396], "christoph": 401, "ci": [352, 380, 381, 385, 386], "circumv": [384, 397], "cl": [94, 195, 199, 245, 247, 276, 277, 281, 286, 313], "claim": 388, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 183, 184, 185, 198, 200, 201, 202, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 272, 273, 274, 275, 276, 277, 281, 286, 288, 294, 309, 311, 328, 329, 349, 360, 361, 364, 365, 366, 377, 378, 385, 390, 391, 393, 395, 396, 397, 399], "classic": 393, "classifi": 394, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 177, 179, 185, 202, 217, 219, 223, 226, 237, 239, 241, 243, 253, 258, 274, 311, 385], "classvalidationerror": [378, 384], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 104, 105, 106, 108, 109, 111, 118, 119, 122, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 217, 219, 223, 237, 239, 241, 243], "clean": [303, 304, 305, 385, 386], "clear": [318, 401], "clone": 386, "close": [208, 214, 255, 361, 380, 381, 398], "closer": [320, 394], "closest": [266, 306, 321], "closest_el": 385, "closur": [206, 398], "cluster": [165, 166, 167, 168, 349, 385, 387, 402], "clustering_x": 385, "cmap": 362, "cn": [342, 343, 345, 348, 349, 361], "co1": [342, 343, 345, 361], "co2": [342, 343, 345, 361], "co3": [342, 343, 345, 361], "coars": [364, 365, 367, 376, 377, 378, 383], "coc": [364, 365, 367, 377, 378, 383], "cococ": [377, 378], "code": [218, 236, 240, 242, 343, 344, 367, 373, 377, 378, 383, 384, 385, 388, 391, 392, 394, 401], "coeffici": [32, 41, 42, 351, 352, 391], "collect": [26, 54, 55, 74, 84, 85, 124, 132, 146, 148, 191, 192, 203, 210, 268, 270, 272, 280, 301, 328, 330, 346, 349, 362, 380, 381, 383, 385, 390, 392], "color": 362, "column": [36, 37, 38, 91, 96, 97, 101, 124, 141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 185, 208, 210, 212, 214, 270, 271, 296, 297, 303, 304, 305, 307, 343, 348, 354, 355, 356, 357, 358, 361, 369, 371, 372, 373, 374, 376, 380, 381, 385, 390, 396, 397, 398], "column_group": 271, "com": [235, 236, 240, 242, 283, 305, 383, 385], "comb": 357, "combin": [34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 124, 179, 185, 186, 187, 274, 293, 342, 343, 345, 354, 356, 357, 360, 361, 369, 383, 388, 391, 393, 395, 396, 398, 401], "combine_func": 88, "come": [383, 390, 397, 401], "comment": 385, "commerci": 388, "commit": [383, 385, 386], "common": [132, 341, 366, 385, 386, 388, 390, 391, 394, 397], "commonli": 393, "commun": [388, 393, 394, 401], "comp_df": [105, 108, 109, 111, 119, 122, 385], "comp_rep": [185, 362, 366, 385, 396], "comp_rep_byt": 184, "comp_rep_human_read": 184, "comp_rep_shap": 184, "comp_rep_tensor": [361, 362], "compar": [124, 146, 344, 380, 383, 385, 386, 394, 400], "comparison": [361, 380, 381, 395, 397], "compat": [87, 93, 124, 150, 153, 156, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 179, 180, 190, 210, 219, 282, 356, 360, 362, 385, 395], "compens": 385, "compil": 388, "complaint": 386, "complet": [362, 391, 393, 397], "complex": [97, 260, 261, 262, 321, 376, 380, 381, 386, 389, 391, 401], "compli": 388, "complianc": 383, "complic": 401, "compon": [386, 389, 390, 391, 392, 397, 401], "compos": [83, 397], "composit": [72, 84, 85, 86], "compositekernel": [84, 85, 86, 385], "compound": 293, "comprehens": [383, 399], "compress": 397, "compris": 365, "comput": [21, 64, 91, 96, 101, 105, 108, 109, 111, 119, 122, 179, 184, 185, 247, 253, 258, 294, 296, 297, 322, 360, 365, 385, 388, 389, 390, 392, 396, 397], "computation": 158, "concat": [361, 369, 380, 381], "concaten": 344, "concentr": [133, 342, 343, 345, 348, 349, 354, 360, 361, 391], "concept": [270, 393, 394, 397], "concis": 385, "concret": [385, 397], "conda": 385, "condit": [29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 301, 343, 351, 355, 356, 357, 358, 383, 385, 388, 401, 402], "conduct": [26, 141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 212, 217, 219, 223, 237, 239, 241, 243, 340, 341, 342, 343, 344, 345, 346, 383, 386, 390, 401], "confid": [8, 17, 349], "config": [366, 367, 375, 382, 385, 402], "config_json": 26, "configur": [26, 62, 63, 177, 179, 185, 206, 208, 214, 229, 301, 324, 347, 348, 365, 370, 374, 378, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 396, 398, 400, 401, 402], "confirm": 362, "conflict": [383, 386, 393], "confront": 383, "connect": [50, 301, 385, 392, 400], "consequ": [147, 345, 391, 395, 396, 398], "consequenti": 388, "consid": [8, 17, 26, 29, 30, 31, 32, 33, 34, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 96, 109, 146, 179, 185, 190, 212, 266, 301, 306, 369, 380, 381, 383, 385, 386, 391, 393, 394, 397], "consider": 179, "consist": [142, 184, 362, 386, 388], "consol": 384, "consolid": 395, "consortium": 387, "conspicu": 388, "constant": [220, 239, 247, 261, 369, 385, 386, 394, 396], "constant_target_catch": [220, 364, 365], "constitut": 388, "constrain": [385, 391, 400, 401], "constraint": [29, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 106, 177, 179, 185, 273, 364, 365, 366, 367, 376, 377, 378, 382, 383, 385, 387, 394, 402], "constraint_1": 356, "constraint_2": 356, "constraint_3": 356, "constraints_augment": 179, "constraints_cardin": 177, "constraints_lin_eq": 177, "constraints_lin_ineq": 177, "constraints_nonlin": 177, "constru": 388, "construct": [26, 177, 179, 185, 219, 249, 380, 381, 383, 385, 389, 397, 402], "constructor": [165, 166, 167, 168, 179, 199, 237, 241, 243, 377, 378, 385, 389, 390, 393, 402], "consult": 383, "consum": [146, 360], "consumpt": 392, "cont_ind": [344, 374], "cont_indic": [344, 371, 373, 374], "cont_paramet": [344, 374], "cont_recommend": [150, 374], "contact": [383, 387], "contain": [26, 29, 36, 37, 38, 55, 58, 59, 91, 96, 97, 101, 124, 127, 141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 184, 185, 186, 187, 191, 206, 208, 210, 212, 217, 219, 223, 237, 239, 241, 243, 245, 247, 253, 258, 260, 261, 262, 270, 271, 282, 294, 296, 297, 301, 302, 311, 322, 324, 330, 343, 344, 345, 361, 362, 374, 380, 381, 385, 386, 388, 390, 391, 395, 396, 397, 398], "contains_mordr": 179, "contains_rdkit": 179, "content": [41, 42, 124, 146, 179, 210, 331, 385, 388, 397], "context": [144, 146, 147, 148, 206, 327, 360, 380, 381, 385, 390, 394, 397, 398, 401], "contextu": 401, "continu": [10, 13, 21, 26, 29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 59, 104, 105, 106, 108, 109, 111, 118, 119, 122, 150, 158, 177, 179, 180, 185, 186, 187, 214, 217, 219, 223, 237, 239, 241, 243, 344, 351, 370, 374, 382, 383, 385, 390, 395, 397, 402], "continuous_subspac": 396, "continuouscardinalityconstraint": [54, 177, 385], "continuousconstraint": [32, 33, 177, 391, 392], "continuouslinearconstraint": [41, 42], "continuouslinearequalityconstraint": [177, 351, 352, 402], "continuouslinearinequalityconstraint": [177, 352, 402], "continuousnonlinearconstraint": [40, 177, 385], "continuousparamet": [118, 177, 385], "contract": 388, "contrast": [185, 286], "contribut": [383, 385, 388], "contributor": [383, 388], "contributori": 388, "control": [13, 124, 158, 177, 185, 341, 344, 369, 373, 383, 385, 388, 389, 392, 393, 394, 395, 400], "convei": 397, "conveni": [385, 396, 397], "convent": [179, 386], "convers": [26, 147, 366, 385, 388, 402], "convert": [23, 92, 181, 194, 283, 287, 293, 295, 299, 307, 308, 312, 315, 318, 367, 377, 378, 385, 390, 392, 397], "convert_sklearn": 366, "convert_sklearn_bayesian_ridg": 366, "cooki": 386, "copi": [361, 383, 385, 388], "copyright": [383, 388], "core": [26, 177, 179, 180, 185, 190, 212, 214, 223, 230, 349, 385, 400], "coregion": 401, "coretest": 385, "corpu": 394, "correct": [250, 362, 364, 365, 383, 385, 386, 397], "correctli": [374, 385], "correl": [111, 122, 305, 394, 401], "correspond": [21, 40, 141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 185, 198, 206, 208, 210, 260, 266, 282, 285, 287, 293, 295, 301, 307, 330, 348, 349, 374, 377, 378, 380, 381, 383, 385, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "corrupt": 302, "cost": 343, "costli": [179, 182, 188, 390], "could": [29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 119, 299, 349, 360, 361, 381, 385, 391, 394, 398, 400, 401], "count": [267, 361, 391], "counterclaim": 388, "counterpart": [282, 396], "coupl": 362, "cours": [380, 381, 386, 397, 401], "cov": [385, 386], "covari": [217, 219, 223, 237, 239, 241, 243], "cover": [286, 301], "coverag": [385, 386], "cp": [342, 343, 345, 361], "crash": 385, "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 24, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 124, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 177, 179, 185, 186, 187, 202, 210, 217, 219, 223, 226, 231, 237, 239, 241, 243, 253, 258, 301, 311, 324, 330, 344, 348, 360, 361, 362, 364, 365, 374, 375, 382, 383, 384, 385, 386, 391, 392, 397, 398, 400, 402], "create_example_plot": [340, 343, 361, 362, 380, 381], "create_from_config": [366, 367], "create_pi_plot": 362, "creation": [29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 124, 182, 185, 188, 344, 355, 357, 358, 366, 367, 372, 396, 397, 402], "criteria": 362, "criterion": [361, 365, 389], "critic": 385, "cross": [380, 388], "crucial": 400, "cube": [173, 391], "cultur": [394, 401], "curran": 401, "current": [10, 212, 214, 218, 236, 240, 242, 265, 318, 361, 362, 389, 390, 391, 392, 394, 398, 400, 401], "curv": [260, 362, 369, 391, 400], "custom": [29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 104, 105, 106, 108, 109, 111, 114, 118, 119, 122, 124, 219, 250, 253, 258, 282, 307, 339, 349, 353, 361, 370, 374, 382, 383, 385, 391, 394, 395, 401, 402], "custom_analyt": [344, 346], "custom_conversion_funct": 366, "custom_filt": 391, "custom_funct": 354, "custom_hook": 361, "customarchitecturesurrog": [364, 365], "customari": 388, "customconstraint": 354, "customdiscreteparamet": [385, 402], "customencod": 111, "customonnxsurrog": [349, 366, 385], "customparamet": 394, "cv": 364, "cycl": [146, 383], "cyclic": 146, "d": [21, 49, 97, 217, 219, 223, 237, 239, 241, 243, 270, 278, 322, 362, 364, 365, 367, 377, 378, 380, 381, 383, 388, 401], "d102": 386, "d401": 354, "damag": 388, "daniel": 387, "darmstadt": [383, 387, 392], "dashboard": 385, "data": [13, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 91, 96, 101, 111, 119, 122, 141, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 177, 179, 185, 208, 212, 214, 217, 219, 223, 237, 239, 241, 243, 253, 258, 267, 269, 273, 294, 301, 302, 306, 317, 318, 331, 333, 339, 340, 341, 344, 348, 349, 351, 352, 354, 355, 356, 357, 358, 361, 364, 365, 367, 369, 371, 373, 376, 377, 378, 380, 381, 382, 383, 385, 389, 390, 391, 392, 394, 395, 397, 398, 402], "data_typ": 366, "databas": [26, 369, 383, 397], "dataclass": 360, "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 26, 34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 91, 96, 101, 105, 108, 109, 111, 119, 122, 124, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 173, 174, 177, 179, 184, 185, 186, 187, 190, 204, 205, 208, 210, 212, 214, 253, 258, 266, 270, 271, 293, 294, 296, 297, 331, 342, 348, 349, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 367, 369, 376, 380, 381, 385, 390, 391, 394, 402], "datapoint": 385, "dataset": [146, 206, 398], "datatyp": 385, "date": 388, "de": [197, 375, 383, 384, 385, 386, 390, 391, 395, 402], "deactiv": [383, 385, 392], "deal": [345, 394], "debug": 385, "decid": [119, 306, 374, 389], "declar": [46, 50, 55, 168, 355, 386, 391], "decod": 366, "decor": [86, 220, 274, 360, 385], "decorrel": [111, 122, 126, 377, 378, 394], "decreas": [146, 261, 369, 397, 401], "deduc": [351, 352, 371, 373], "dedupl": 385, "deep": 361, "deepcopi": 385, "def": [341, 344, 346, 354, 360, 361, 362, 364, 365, 372, 380, 386, 391], "default": [38, 96, 109, 111, 122, 124, 150, 165, 166, 167, 168, 173, 174, 177, 179, 185, 197, 230, 233, 342, 345, 349, 367, 369, 374, 383, 385, 386, 390, 392, 393, 394, 402], "default_iter": 147, "default_model": 219, "defaultkernelfactori": [349, 354, 355, 356, 357, 358, 369, 376], "defaultscal": 174, "defend": 388, "defin": [21, 26, 32, 37, 41, 42, 45, 114, 141, 146, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 185, 206, 223, 225, 226, 250, 302, 305, 342, 343, 345, 348, 349, 354, 355, 356, 358, 364, 365, 366, 367, 377, 385, 386, 388, 390, 394, 395, 396, 397, 398, 400], "definit": [177, 185, 286, 383, 385, 388, 393], "degener": [311, 385], "degre": 397, "degree_c": [364, 365, 366, 367, 376], "deliber": 388, "delici": 386, "deliveri": 394, "demand": 381, "demo": 385, "demonstr": [339, 342, 344, 347, 350, 353, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 370, 375, 376, 379, 380, 381, 385, 393, 396, 397, 401], "denot": [21, 217, 219, 223, 237, 239, 241, 243, 344, 357], "densiti": 362, "depend": [46, 50, 65, 88, 179, 185, 206, 253, 258, 261, 270, 343, 349, 353, 357, 382, 385, 386, 391, 392, 396, 398, 400, 401], "dependenciesconstraint": 385, "deprec": [57, 156, 158, 177, 274, 343, 354, 356, 358, 377, 378], "deprecationwarn": [361, 377, 378], "depth": 396, "deriv": [165, 166, 167, 168, 185, 286, 388, 391, 396], "descend": 261, "describ": [109, 165, 166, 167, 168, 349, 354, 360, 361, 369, 386, 388, 390, 391, 393, 394, 397, 398], "descript": 386, "descriptor": [116, 122, 294, 296, 297, 385, 394, 401], "deseri": [195, 199, 204, 376, 384, 385, 390, 402], "deserialize_datafram": 397, "design": [0, 21, 208, 360, 364, 365, 366, 388, 389, 393, 395, 397], "desir": [88, 96, 99, 346, 368, 369, 382, 383, 385, 389, 390, 392, 393, 395, 397, 400], "desirabilityobject": [346, 369, 383, 385, 397, 402], "desktop": 385, "despit": 385, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 129, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 184, 185, 208, 212, 217, 219, 223, 226, 233, 235, 237, 239, 241, 243, 253, 258, 263, 264, 289, 311, 340, 341, 342, 344, 345, 346, 349, 351, 352, 364, 365, 369, 371, 374, 383, 384, 385, 390, 391, 392, 394, 395, 396, 397, 398, 399, 401], "detect": [273, 306, 386], "determin": [26, 94, 185, 286, 315, 320, 330, 342, 388, 392, 395], "detriment": 394, "dev": [383, 385, 386], "develop": [383, 385, 394], "deviat": [6, 247, 366, 385], "df": [124, 177, 179, 185, 190, 205, 210, 270, 271, 293, 303, 304, 305, 307, 308, 331, 354, 383, 391, 396, 397], "dfa": [270, 271], "di": [342, 343, 345, 348, 349, 361, 387], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 94, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 165, 166, 167, 168, 173, 174, 177, 179, 182, 185, 188, 198, 199, 200, 202, 212, 217, 219, 223, 226, 237, 239, 241, 243, 253, 258, 264, 278, 280, 301, 311, 366, 380, 381, 385], "dict_bas": [342, 343, 345, 348, 349, 361], "dict_ligand": [342, 343, 345, 348, 349, 361], "dict_solv": [342, 343, 345, 348, 349, 354, 355, 356, 357, 358, 361, 391], "dictat": [179, 380, 381], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 177, 179, 185, 198, 200, 202, 212, 217, 219, 223, 226, 237, 239, 241, 243, 253, 258, 278, 280, 301, 311, 341, 342, 343, 344, 345, 348, 394, 398], "diff": 386, "differ": [48, 96, 177, 179, 180, 185, 206, 214, 266, 271, 301, 302, 343, 344, 346, 354, 360, 364, 369, 373, 374, 380, 381, 383, 385, 386, 388, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401], "differenti": [398, 401], "difficult": 401, "dim": [21, 340, 351, 352, 362, 365, 366, 371, 373, 374, 380, 381], "dimens": [21, 217, 219, 223, 237, 239, 241, 243, 330, 340, 341, 344, 346, 351, 352, 362, 366, 371, 372, 373, 380, 381, 385, 394, 396, 401], "dimension": [97, 104, 105, 106, 108, 109, 111, 118, 119, 122, 233, 344, 372, 380, 381, 385], "dimethylisoxazol": 401, "direct": [342, 343, 345, 348, 383, 388, 394], "directli": [236, 240, 242, 286, 381, 383, 385, 391, 393, 397], "directori": [324, 374, 385], "disabl": [265, 377, 378, 385, 386, 390], "disadvantag": 397, "disappear": 385, "disc_ind": [344, 374], "disc_indic": [344, 371, 373, 374], "disc_paramet": [344, 374], "disc_recommend": [150, 374], "discard": 185, "disclaim": 388, "discourag": 390, "discret": [13, 21, 26, 29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 104, 105, 106, 108, 109, 111, 118, 119, 122, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 180, 184, 185, 214, 329, 340, 341, 344, 346, 348, 351, 358, 361, 362, 366, 370, 374, 381, 382, 383, 385, 389, 390, 397, 398, 402], "discrete_param": [362, 380, 381], "discrete_spac": [340, 351, 352, 371, 374], "discrete_subspac": 396, "discretecardinalityconstraint": 385, "discreteconstraint": [44, 45, 46, 47, 48, 49, 50, 51, 52, 185, 391], "discretecustomconstraint": [354, 385, 402], "discretedependenciesconstraint": [50, 55, 355, 357, 402], "discreteexcludeconstraint": [356, 385, 402], "discretelinkedparametersconstraint": [385, 402], "discretenolabelduplicatesconstraint": [50, 357, 385, 402], "discreteparamet": [108, 111, 119, 122, 185, 385], "discretepermutationinvarianceconstraint": [357, 402], "discreteproductconstraint": [358, 385, 402], "discretesamplingmethod": [13, 158, 331, 385, 389], "discretesumconstraint": [351, 357, 358, 385, 402], "discuss": [369, 388, 391, 396, 398], "disjoint": 185, "disk": [385, 402], "dispatch": 87, "displai": [307, 341, 361, 388], "distanc": [119, 266, 306, 330], "distinct": [360, 390, 395], "distinguish": [41, 42, 385, 391, 394, 401], "distribut": [129, 132, 220, 369, 374, 383, 385, 388, 389], "distutil": 287, "div": 366, "divers": 399, "divis": 322, "dmac": [342, 343, 345, 348, 349, 361], "dmf": 391, "do": [179, 185, 218, 344, 357, 360, 364, 365, 366, 367, 374, 376, 377, 378, 380, 383, 388, 391, 392, 394, 395, 397, 401, 402], "do_baybe_work": 392, "doc": [69, 129, 217, 219, 223, 236, 237, 239, 240, 241, 242, 243, 274, 377, 378, 383, 385], "doc101": 386, "doc103": 386, "docstr": 385, "doctest": 385, "document": [236, 240, 242, 318, 366, 383, 385, 386, 387, 388, 390, 398], "doe": [25, 34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 206, 208, 210, 212, 217, 218, 219, 223, 237, 239, 241, 243, 250, 282, 293, 295, 301, 318, 345, 349, 361, 366, 367, 372, 377, 378, 380, 381, 385, 388, 391, 393, 398, 399, 401], "doi": [235, 305], "domain": [173, 174, 245, 383, 396], "done": [26, 345, 348, 354, 355, 356, 357, 358, 366, 367, 369, 373, 376, 385, 389, 391, 392], "dont_recommend": [354, 355, 356, 357, 358, 369, 376, 396], "doubl": [318, 386, 392], "down": 397, "downsid": 147, "draft": 385, "dramat": 401, "drastic": 394, "draw": [10, 81, 177], "drive": [362, 401], "driven": [301, 389], "drop": [296, 297, 303, 304, 305, 308, 361, 385, 391], "dropna": [296, 297], "dropout": 365, "dtype": [97, 260, 261, 262, 294, 321], "due": [236, 240, 242, 267, 357, 381, 383, 385, 389, 391, 392, 394, 395, 396, 397, 400], "duplic": [50, 128, 273, 278, 357, 385, 391], "dure": [26, 29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 179, 185, 206, 280, 330, 346, 380, 381, 383, 385, 386, 387, 390, 391, 392, 396, 397, 398], "dynam": 397, "e": [21, 26, 29, 46, 48, 49, 59, 111, 124, 148, 179, 185, 206, 253, 258, 267, 273, 276, 277, 294, 296, 297, 301, 306, 311, 336, 342, 343, 345, 364, 365, 367, 383, 384, 385, 386, 389, 391, 392, 394, 395, 396, 397, 398, 401], "each": [26, 32, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 124, 141, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 179, 208, 210, 212, 214, 218, 271, 294, 296, 297, 301, 324, 343, 344, 345, 349, 362, 369, 374, 380, 381, 386, 388, 390, 391, 392, 393, 394, 395, 396, 398, 400, 401], "eagerli": 385, "earli": [361, 385], "earlier": [150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 185, 384], "easi": [293, 386, 397], "easier": 386, "easiest": [383, 386], "easili": [361, 386, 390, 394, 396, 397, 401], "ecosystem": 397, "edbo": [233, 235, 305, 385], "edbokernelfactori": [233, 385], "edit": [383, 386], "editor": 401, "editori": 388, "edwin": 401, "effect": [48, 214, 360, 361, 381, 389, 391, 394, 395, 398, 401], "effici": [185, 385, 396], "ei": [3, 340, 341, 349], "either": [21, 180, 208, 214, 223, 247, 343, 344, 356, 369, 372, 374, 383, 388, 393, 395, 396, 398], "elabor": 388, "elaps": 360, "elapsedtimeprint": 360, "electron": [387, 388], "eleg": [380, 397], "element": [36, 37, 38, 45, 185, 214, 266, 273, 285, 306, 320, 321, 380, 381, 385, 391], "elev": 362, "elif": [371, 373, 374], "elimin": 389, "els": [286, 287, 292, 340, 341, 342, 343, 344, 345, 346, 351, 352, 354, 355, 357, 358, 361, 362, 371, 373, 374, 380, 381], "elsewher": 366, "emd": 387, "emdgroup": [263, 383], "emelin": 387, "emerg": 390, "emploi": [26, 395], "employe": [383, 392], "empow": 399, "empti": [177, 179, 185, 192, 271, 282, 293, 307, 344, 369, 374, 376, 385, 396], "empty_encod": [179, 185], "emptysearchspaceerror": 192, "emul": [384, 385], "en": [69, 129], "enabl": [246, 265, 266, 341, 342, 343, 344, 345, 380, 383, 384, 385, 390, 391, 393, 395, 397, 398, 400, 401], "encod": [29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 104, 105, 106, 108, 109, 111, 113, 114, 115, 116, 118, 119, 122, 173, 174, 179, 185, 217, 219, 223, 237, 239, 241, 243, 342, 343, 345, 348, 349, 354, 355, 356, 357, 358, 361, 364, 365, 367, 369, 376, 377, 378, 380, 381, 383, 385, 391, 396, 397, 401], "encompass": 390, "encount": [330, 385, 386, 393], "end": [0, 262, 311, 361, 367, 369, 376, 388, 391, 397], "endat": [354, 355, 356, 357, 358, 369], "endeavor": 389, "endpoint": [385, 392], "enforc": [319, 334, 385, 386], "engin": [384, 395, 397], "enhanc": 21, "enlarg": 394, "enough": [177, 397], "ensembl": 364, "ensur": [124, 342, 343, 345, 383, 391, 397], "enter": [185, 396], "entir": [266, 311, 331, 385, 386, 389, 392], "entiti": 388, "entri": [26, 32, 34, 37, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 200, 266, 271, 301, 306, 331, 345, 354, 355, 356, 357, 358, 385, 391, 392, 400], "enum": [99, 113, 114, 115, 116, 180, 230, 255, 256, 329, 385, 397], "enumer": [98, 112, 254, 362, 380, 381, 393], "env": [385, 386], "envar_nam": 392, "environ": [265, 319, 334, 340, 341, 342, 343, 344, 345, 346, 352, 354, 355, 357, 358, 361, 362, 366, 380, 381, 383, 385, 386, 402], "envvar": 263, "envvar_nam": 392, "epoch": 365, "eq": [354, 357], "equal": [32, 41, 42, 96, 148, 177, 369, 376, 385, 393, 396, 397, 400], "equat": [391, 398], "equidist": 394, "equip": 391, "equival": [29, 50, 352, 389, 391], "error": [146, 156, 158, 208, 210, 212, 280, 322, 345, 364, 365, 367, 385, 391, 393, 394, 395, 398], "esian": 383, "especi": 386, "essenti": [390, 395], "establish": [361, 380, 381, 401], "ester": [342, 343, 345, 348, 349, 361], "estim": [179, 184, 185, 364, 385, 399], "estimate_product_space_s": [179, 185], "et": [343, 383, 394], "etc": [36, 37, 38, 106, 179, 253, 258, 401], "ethanol": 391, "euclidean": 330, "eval_during_augment": [29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52], "eval_during_cr": [29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52], "eval_during_model": [29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52], "evalu": [21, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 217, 219, 223, 237, 239, 241, 243, 287, 371, 372, 373, 374, 385, 390, 392, 401], "even": [247, 304, 380, 381, 388, 390, 394, 398, 399, 401], "event": [26, 266, 361, 388], "everi": 179, "everyth": [386, 391], "evolv": [362, 386], "exact": [26, 306, 360, 391, 394], "exactli": [179, 385, 390, 396, 397], "exampl": [124, 210, 270, 271, 278, 286, 339, 340, 347, 350, 353, 359, 360, 361, 362, 363, 368, 370, 375, 379, 380, 381, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401], "example_input_nam": 366, "exceed": 361, "except": [282, 293, 309, 310, 342, 343, 345, 361, 364, 365, 367, 377, 378, 383, 384, 385, 386, 388], "excepthook": 384, "exceptiongroup": 385, "exclud": [49, 303, 356, 388, 391], "exclude_list": 305, "exclus": [47, 353, 382, 388, 391, 398], "execut": [26, 57, 208, 282, 343, 384, 385, 386, 388, 392, 397, 398, 401], "exemplari": 390, "exercis": 388, "exhaust": [146, 395], "exist": [86, 266, 274, 282, 385, 386, 389, 390, 391, 397, 401], "exp": 357, "exp_rep": [185, 354, 355, 356, 357, 358, 396], "exp_rep_byt": 184, "exp_rep_human_read": 184, "exp_rep_shap": 184, "expect": [3, 4, 9, 11, 12, 14, 45, 225, 282, 341, 349, 355, 362, 366, 378, 385, 386, 390, 391, 393, 394, 397, 398, 400], "expens": [10, 158, 351], "experi": [0, 26, 141, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 206, 208, 217, 219, 223, 237, 239, 241, 243, 340, 341, 342, 343, 344, 345, 346, 348, 349, 371, 372, 373, 374, 389, 390, 391, 393, 394, 395, 400, 401, 402], "experiment": [26, 91, 96, 101, 105, 108, 109, 111, 119, 122, 141, 144, 145, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 179, 184, 185, 206, 301, 302, 362, 383, 385, 389, 391, 392, 393, 394, 396, 397, 398, 400, 401], "explain": [349, 362, 385], "explan": [390, 399], "explicit": [124, 147, 357, 360, 361, 367, 377, 378, 385, 392, 397, 401, 402], "explicitli": [177, 185, 360, 374, 381, 388, 395, 401], "exploit": [8, 17], "explor": [8, 17, 26, 344, 389, 395, 396, 401], "exploratori": 389, "exponenti": 185, "expos": [360, 385], "exposur": 385, "expr": [34, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52], "express": [34, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 383, 385, 388, 391], "extend": [365, 401], "extens": [385, 395], "extra": [343, 385], "extract": [190, 362, 364, 365, 380], "extract_pi": 362, "f": [287, 340, 341, 342, 343, 344, 345, 346, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 369, 371, 372, 373, 374, 380, 381], "f1": 398, "f2": 398, "facilit": 395, "fact": [362, 391, 393], "factor": [124, 390], "factori": [124, 177, 223, 224, 225, 226, 227, 233, 235, 279, 385], "fail": [374, 378, 385], "failur": 388, "fairli": 393, "fake": [210, 301, 348, 349, 364, 365, 366, 367, 369, 385, 398], "fall": [361, 390, 400], "fallback": [94, 185, 313, 324, 366, 377, 378, 385, 396], "fals": [6, 29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 104, 105, 106, 108, 109, 111, 118, 119, 122, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 185, 219, 220, 237, 239, 241, 243, 261, 266, 276, 277, 280, 286, 287, 292, 306, 349, 354, 355, 356, 357, 358, 364, 365, 369, 376, 377, 378, 383, 392], "famili": 391, "familiar": [340, 341, 342, 343, 344, 345, 346, 349, 351, 352, 354, 355, 356, 357, 358, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376], "fang": 387, "fantasi": 10, "farthest": [170, 329, 330, 349, 383, 385, 387, 389, 395], "fashion": [260, 262], "fast": [354, 356, 358, 396, 400], "faster": 185, "fault": 68, "favicon": 385, "fc": [342, 343, 345, 361], "feasibl": 390, "featur": [81, 122, 305, 384, 386, 391, 401], "fed": 383, "fee": 388, "feed": [365, 383, 401], "feedback": 387, "feel": 361, "few": [385, 386, 389, 397, 401], "field": [199, 385, 396, 401, 402], "fifti": 388, "fig": 362, "figur": [324, 362], "file": [324, 342, 343, 345, 366, 367, 374, 383, 385, 388, 392, 397, 401], "filenotfounderror": [342, 343, 345, 361], "fill": [26, 210, 362], "filler": 391, "filter": [34, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 179, 185, 303, 354, 391, 396, 401], "filter_attribut": 385, "filterwarn": 361, "final": [343, 348, 361, 364, 381], "final_estim": 364, "find": [280, 321, 324, 383, 389, 390, 391, 401], "fine": [364, 365, 367, 376, 377, 378, 383], "finer": [124, 383], "fingerprint": [116, 294, 394], "finit": [146, 206, 214, 310, 336, 394, 398], "first": [173, 174, 179, 212, 320, 330, 343, 346, 348, 349, 354, 360, 361, 364, 365, 366, 367, 369, 374, 378, 380, 381, 383, 384, 385, 390, 391, 393, 394, 395, 396, 401], "fit": [26, 168, 173, 174, 217, 219, 223, 237, 239, 241, 243, 245, 331, 342, 343, 345, 354, 355, 356, 357, 358, 364, 366, 369, 376, 385, 388, 391, 394], "fit_gpytorch_ml": 385, "fit_gpytorch_mll_torch": 385, "fit_transform": [173, 174], "fitnr": 369, "fitzner": [383, 387], "fix": [206, 226, 361, 362, 371, 372, 373, 374, 386, 390, 394, 398, 401], "flag": [21, 26, 46, 158, 179, 180, 185, 190, 306, 385, 390, 392, 395], "flake8": 385, "flexibl": [360, 385, 397], "flexibli": 395, "float": [8, 13, 17, 32, 38, 41, 42, 75, 76, 77, 78, 79, 80, 81, 82, 86, 88, 96, 97, 111, 118, 119, 122, 126, 127, 133, 134, 135, 136, 137, 138, 158, 184, 185, 208, 212, 247, 260, 261, 262, 267, 294, 299, 301, 302, 305, 311, 315, 317, 318, 320, 321, 322, 333, 336, 337, 338, 341, 344, 346, 360, 362, 366, 369, 372, 380, 385, 386, 398, 402], "float64": [333, 365], "floattensortyp": 366, "fly": 397, "fn": 274, "focu": [8, 17, 365, 390], "focus": [101, 374, 383], "folder": [343, 383, 386, 392, 399], "follow": [179, 208, 210, 212, 341, 342, 343, 344, 345, 349, 351, 352, 354, 355, 356, 357, 358, 360, 361, 364, 365, 367, 369, 374, 377, 378, 380, 381, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "footprint": [10, 179], "forc": [158, 385, 395], "forest": [242, 243], "forgiv": 400, "fork": 386, "form": [42, 185, 206, 301, 383, 388, 389, 390, 393, 394, 395, 396, 397, 398], "format": [32, 41, 42, 264, 289, 307, 312, 315, 366, 367, 376, 377, 383, 384, 385, 386, 390, 392, 397], "format_except": 384, "former": 385, "formul": 401, "forrest": 385, "forward": 365, "found": [66, 124, 177, 185, 280, 318, 321, 324, 341, 361, 365, 369, 383, 386, 390, 391, 395, 401], "foundat": 395, "fourier": 81, "fourth": 391, "fp": [329, 344, 385, 389], "fpsrecommend": [349, 364, 365, 366, 367, 376, 377, 378, 383, 395], "frac": [381, 393], "frac1": [355, 357], "frac2": 357, "frac3": 357, "frac_resolut": 355, "fraction": [13, 76, 299, 357, 361, 389, 391, 392], "fraction1": [355, 357], "fraction2": 357, "fraction3": 357, "fraction_1": 391, "fraction_2": 391, "fraction_3": 391, "frame": 302, "frame1": 355, "frame2": 355, "frame_1": 391, "frame_2": 391, "framea": 355, "frameb": 355, "frameb_a": 355, "frameb_b": 355, "framework": [390, 394], "free": [386, 388, 392], "freedom": 397, "frequenc": 81, "fresh": 361, "frictionless": 397, "friendli": 385, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 24, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 124, 129, 131, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 185, 202, 210, 212, 214, 217, 219, 223, 226, 231, 235, 237, 239, 241, 243, 247, 253, 258, 261, 262, 282, 286, 287, 289, 293, 302, 303, 305, 311, 322, 324, 330, 331, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 384, 386, 388, 389, 391, 393, 394, 395, 398, 400, 401, 402], "from_bound": [177, 385, 396], "from_config": [26, 377, 378, 390], "from_datafram": [177, 179, 185, 385, 396, 397], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 177, 179, 185, 202, 217, 219, 223, 226, 237, 239, 241, 243, 253, 258, 311, 366], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 177, 179, 185, 202, 217, 219, 223, 226, 237, 239, 241, 243, 253, 258, 311, 366, 367, 376, 390, 397], "from_paramet": [177, 179, 185, 385], "from_preset": 223, "from_product": [177, 179, 185, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 385, 391, 396, 397, 398], "from_record": 397, "from_simplex": [185, 385, 396], "frozenset": 357, "fsspec": 385, "fulfil": [41, 42, 361], "full": [21, 177, 318, 339, 382, 385, 390, 401, 402], "full_factori": 177, "full_lik": 362, "full_lookup": [342, 343, 345, 361], "fulli": [383, 385, 386, 398], "fulltest": 386, "func": [361, 386], "func_nam": 380, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 32, 35, 41, 42, 45, 53, 60, 68, 80, 87, 90, 93, 95, 100, 123, 125, 156, 158, 159, 172, 178, 183, 189, 193, 194, 202, 203, 206, 207, 209, 211, 212, 213, 216, 218, 220, 224, 229, 244, 246, 248, 249, 252, 256, 259, 260, 261, 262, 263, 266, 267, 269, 272, 284, 288, 289, 290, 298, 300, 302, 307, 309, 314, 316, 323, 324, 325, 328, 335, 348, 354, 360, 362, 364, 365, 370, 380, 381, 382, 383, 384, 385, 389, 390, 391, 393, 395, 396, 399, 400, 401, 402], "function_nam": [380, 381], "fundament": [394, 397], "furo": 385, "further": [341, 344, 346, 376, 383, 396, 398, 399, 401, 402], "furthermor": [369, 371, 372, 373, 374], "furyl": [342, 343, 345, 361], "futur": [50, 179, 218, 236, 240, 242, 361, 377, 378, 380, 400], "fuzzi": 266, "fuzzy_row_match": [185, 266], "g": [46, 48, 49, 59, 111, 124, 179, 185, 253, 258, 273, 294, 296, 297, 306, 383, 385, 386, 389, 391, 392, 394, 395, 396, 398], "gain": [185, 390], "gamma": 133, "gammaprior": 385, "gather": [148, 380, 381, 389, 401], "gaussian": [69, 165, 221, 222, 223, 224, 228, 229, 230, 232, 233, 234, 235, 260, 349, 369, 385, 391, 395, 401], "gaussian_kd": 362, "gaussian_process": [71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 223, 225, 226, 230, 233, 235, 349, 385], "gaussianmixtureclusteringrecommend": 395, "gaussianprocesspreset": 231, "gaussianprocesssurrog": [231, 349, 354, 355, 356, 357, 358, 362, 369, 376, 377, 378, 385, 399], "gb": 364, "gcf": [341, 342, 344, 345], "ge": 352, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 115, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 184, 185, 217, 219, 223, 226, 233, 235, 237, 239, 241, 243, 253, 258, 264, 286, 311, 325, 346, 349, 360, 383, 385, 387, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402], "geom_mean": [88, 96, 99, 369, 393], "geometr": [99, 322, 369, 393], "germani": [383, 387, 392], "get": [34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 177, 223, 301, 349, 361, 371, 372, 373, 374, 383, 385, 402], "get_candid": [185, 361], "get_cmap": 362, "get_integration_point": 13, "get_invalid": [34, 44, 45, 46, 47, 48, 49, 50, 51, 52], "get_invalid_polar": [34, 44, 45, 46, 47, 48, 49, 50, 51, 52], "get_lin": 361, "get_parameters_by_nam": [177, 179, 185], "get_parameters_from_datafram": [177, 185], "get_subclass": 349, "git": [383, 386], "github": [235, 236, 240, 242, 263, 283, 305, 366, 385, 386, 387], "give": [366, 367, 381, 388, 390, 393, 397], "given": [24, 26, 29, 36, 37, 38, 55, 66, 109, 122, 124, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 173, 174, 177, 179, 185, 190, 191, 206, 210, 217, 219, 220, 223, 237, 239, 241, 243, 247, 255, 267, 271, 276, 277, 280, 281, 282, 285, 286, 291, 295, 299, 301, 308, 311, 312, 320, 322, 354, 355, 356, 357, 358, 361, 369, 374, 380, 381, 390, 396, 398], "glass_transition_tempc": 394, "global": [13, 326, 385, 402], "gmean": 322, "gmm": 165, "go": [270, 383], "goal": [344, 393, 401], "goe": 399, "good": [301, 361, 369, 390, 392, 400], "good_interv": 301, "good_reference_valu": 301, "goodwil": 388, "googl": [385, 386], "govern": 383, "gp": [217, 219, 223, 237, 239, 241, 243, 385], "gpytorch": [69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 129, 131, 133, 134, 135, 136, 137, 138, 385], "gradient": [10, 241, 385, 392], "gradientboostingregressor": 364, "grant": 388, "granular": [364, 365, 367, 376, 377, 378, 383], "granularity_coars": 376, "granularity_medium": 376, "great": 397, "greater": 148, "greatli": 386, "greedi": [158, 340, 341, 344, 385, 395], "grid": [380, 381], "grid_d": [380, 381], "grossli": 388, "group": [271, 278, 383, 385, 390], "groupbi": [212, 214], "gt": [357, 358], "gu16": 394, "guarante": [391, 395], "guid": [348, 365, 383, 385, 386, 389, 390, 393, 396, 398, 401], "guidelin": [385, 386, 389], "ha": [26, 41, 42, 46, 60, 146, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 185, 270, 280, 282, 286, 306, 331, 343, 349, 355, 369, 374, 377, 378, 383, 385, 386, 388, 390, 391, 394, 396, 397, 398, 400, 401], "had": [206, 391, 394, 398], "half": [119, 134, 135, 311, 374], "halfcauchyprior": 385, "halfnormalprior": 385, "hamster": 401, "hand": [32, 41, 42, 122, 380, 381, 383, 390, 397], "handl": [106, 208, 210, 220, 247, 309, 346, 354, 355, 369, 385, 390, 393, 398], "happen": [146, 369, 374, 381, 384, 385, 386, 396, 397, 401], "happili": 393, "hard": [385, 401], "harmless": 388, "hartman": 380, "hartmann": [362, 380, 381], "hasattr": [340, 351, 352, 371, 373, 374], "hash": [264, 383, 392], "hashabledict": 385, "have": [21, 26, 34, 36, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 122, 168, 179, 185, 190, 206, 218, 236, 240, 242, 250, 271, 278, 280, 294, 301, 306, 318, 341, 342, 343, 348, 349, 354, 355, 357, 360, 362, 369, 373, 374, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 393, 394, 395, 397, 398, 401], "he": 349, "head": 385, "heart": 401, "help": [397, 401], "helper": [360, 362, 365, 366, 397], "henc": [293, 376, 391, 394], "here": [49, 318, 341, 342, 344, 345, 346, 348, 351, 352, 357, 360, 361, 364, 367, 371, 372, 373, 374, 376, 380, 381, 383, 391, 393, 394, 395, 396, 397, 398, 400, 401], "herebi": 388, "herein": [388, 390], "heurist": 330, "hidden": 365, "hierarch": 397, "hierarchi": [66, 385, 386, 390, 397], "high": [233, 385, 386, 389, 390, 391, 394, 397], "higher": [8, 17, 122, 384, 391, 395], "highest": [389, 397], "highlight": [383, 401], "hint": 386, "histogram": 267, "histori": 386, "hold": [40, 278, 388, 397], "homepag": [383, 385], "hood": 394, "hook": [94, 185, 194, 198, 282, 382, 384, 385, 386], "hopp": [383, 387], "host": [383, 385, 392], "hostnam": [264, 392], "hot": [113, 343, 383, 385, 394], "how": [47, 208, 210, 330, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 359, 361, 362, 363, 364, 365, 366, 367, 372, 374, 376, 377, 378, 381, 383, 390, 391, 392, 393, 398, 400, 401], "howev": [124, 185, 218, 282, 340, 357, 360, 371, 373, 374, 377, 378, 384, 386, 388, 389, 390, 391, 392, 394, 396, 397, 398, 399, 401], "html": [32, 41, 42, 69, 129, 263, 274, 289, 318, 366, 385], "http": [32, 41, 42, 69, 129, 217, 219, 223, 235, 236, 237, 239, 240, 241, 242, 243, 263, 274, 283, 289, 305, 318, 383, 385, 388, 401], "hue": [340, 341, 342, 343, 344, 345, 361, 380, 381], "human": [184, 315, 376, 385, 387, 397], "hybrid": [20, 21, 59, 149, 150, 158, 171, 179, 180, 339, 349, 350, 370, 382, 383, 385, 395, 396], "hybrid_recommend": 374, "hybrid_sampl": [158, 344, 349, 354, 355, 356, 357, 358, 369, 376, 395], "hyperparam": 365, "hyperparamet": [349, 365], "hyperrectangl": [177, 396], "hypothesi": [383, 385, 386], "i": [6, 13, 21, 26, 29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 60, 61, 63, 83, 86, 97, 104, 105, 106, 108, 109, 111, 118, 119, 122, 124, 141, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 173, 174, 177, 179, 185, 192, 206, 208, 210, 212, 214, 217, 218, 219, 220, 223, 233, 236, 237, 239, 240, 241, 242, 243, 245, 247, 250, 255, 260, 261, 262, 265, 266, 267, 271, 274, 276, 277, 280, 282, 283, 285, 286, 287, 292, 293, 301, 302, 306, 307, 310, 311, 318, 320, 321, 324, 330, 331, 336, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 357, 360, 361, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401], "ideal": 391, "ident": [124, 270, 271, 394, 397, 401], "identifi": [34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 212, 278, 293, 306, 361, 385, 391, 394, 397, 398, 401], "idx_offset": [32, 41, 42], "ignor": [146, 158, 179, 186, 187, 208, 210, 212, 280, 305, 345, 361, 374, 385, 391, 397, 398], "ignore_exampl": 385, "ignore_list": 304, "ii": 388, "iii": 388, "imag": 385, "immedi": [324, 360, 390], "immut": 385, "impact": [343, 381, 392], "imperfect": 302, "implement": [34, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 97, 141, 151, 214, 284, 354, 361, 365, 372, 380, 385, 386, 387, 389, 395, 396, 401], "impli": [383, 388, 391, 394], "implicitli": 397, "import": [65, 96, 210, 361, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401], "importantli": 344, "impos": [357, 391, 398], "imposs": [383, 392, 397], "improv": [3, 4, 7, 9, 11, 12, 14, 15, 349, 352, 359, 361, 382, 383, 385, 388, 392], "imput": [208, 210, 339, 345, 382, 383, 398], "impute_mod": [208, 210, 212, 345, 398], "in_featur": 365, "inabl": [383, 388], "inaccuraci": 383, "inact": 40, "inc": 401, "incident": 388, "includ": [55, 91, 96, 101, 148, 208, 276, 277, 304, 342, 355, 357, 364, 365, 367, 377, 378, 381, 383, 385, 386, 388, 389, 391], "inclus": 388, "incom": 397, "incompat": [59, 219, 220, 246, 356, 391], "incomplet": 385, "inconsist": 385, "incorpor": [388, 399], "increas": [10, 146, 212, 261, 262, 369, 380, 381, 385, 389, 394, 401], "increment": 185, "incur": 388, "indefinit": [146, 208], "indemn": 388, "indemnifi": 388, "independ": [150, 239, 366, 395, 398], "index": [34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 179, 212, 270, 271, 306, 330, 351, 352, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 394, 396], "indexkernel": 385, "indic": [26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 68, 104, 105, 106, 108, 109, 111, 118, 119, 122, 179, 220, 270, 271, 308, 330, 344, 374, 385, 388, 395, 399], "indirect": [276, 277, 388], "individu": [46, 47, 84, 85, 141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 208, 220, 361, 388, 390, 393, 395, 401], "industri": 401, "ineffici": 185, "inequ": [42, 177, 396], "inf": [354, 355, 356, 357, 358, 376], "infer": [124, 219, 380, 381, 385, 396], "inferencesess": 219, "infin": 127, "infinit": [146, 147, 279, 310, 336, 337, 385, 394], "influenc": [150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 396], "influenti": 401, "info": [267, 385], "inform": [21, 106, 253, 342, 343, 345, 362, 371, 372, 373, 374, 381, 383, 385, 386, 388, 392, 394, 396, 401, 402], "infring": 388, "ingest": [185, 208, 394, 395], "ingredi": 391, "inherit": 386, "init": 249, "initi": [75, 76, 77, 78, 79, 80, 81, 82, 86, 147, 148, 150, 165, 166, 167, 168, 170, 185, 208, 212, 266, 330, 339, 344, 354, 361, 362, 365, 381, 382, 385, 387, 390, 392, 394, 395, 397, 398, 401], "initial_data": [208, 212, 342, 381, 398], "initial_recommend": [148, 349, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 367, 369, 376, 377, 378, 383, 395], "initial_recommender_cl": 385, "initial_strategi": 385, "initial_typ": 366, "inject": 397, "inner": [142, 395, 397], "inplac": [343, 380, 381], "input": [36, 37, 38, 97, 119, 173, 174, 217, 219, 223, 237, 239, 241, 243, 245, 246, 260, 278, 299, 302, 306, 311, 313, 320, 365, 366, 369, 372, 380, 381, 385, 397, 398, 401], "input_dim": [365, 366], "insid": [361, 366, 367, 384, 397], "insight": 361, "inspect": [286, 360], "instabl": 391, "instal": [384, 385, 386, 392, 394], "instanc": [36, 37, 38, 46, 49, 148, 179, 185, 301, 355, 361, 383, 386, 390, 391, 392, 394, 396, 397, 398], "instanti": [219, 361, 390], "instead": [146, 266, 293, 377, 378, 383, 384, 385, 390, 391, 393, 394, 397, 398, 400, 401], "institut": [387, 388], "instruct": [383, 385, 400, 402], "instrument_nam": 267, "int": [10, 13, 26, 29, 32, 40, 41, 42, 44, 71, 72, 73, 76, 78, 79, 80, 81, 82, 97, 113, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 184, 185, 208, 212, 214, 260, 261, 262, 267, 294, 307, 321, 326, 327, 330, 331, 354, 356, 358, 365, 369, 381, 386, 394], "integ": [29, 113, 212, 374, 385, 386, 394], "integr": [13, 385, 386, 389, 390], "intend": [348, 357, 360, 380, 395, 396], "intens": 394, "intention": 388, "interact": [25, 26, 348, 383, 384, 390, 397], "interconnect": 390, "interest": 393, "interfac": [141, 225, 360, 362, 364, 385, 388, 390], "intermedi": [168, 330], "intern": [26, 50, 146, 361, 369, 385, 391, 392, 394, 395, 396, 397], "internet": 383, "internship": 387, "interpol": [76, 233, 385], "interpret": [179, 206, 299, 367, 371, 372, 373, 374, 377, 378, 381, 392, 396, 398], "interrupt": 57, "intersect": [344, 374], "interv": [118, 258, 260, 261, 262, 369, 385, 390, 394, 397, 400], "intrins": 401, "introduc": [384, 385, 391, 394, 395, 398], "intuit": 390, "invalid": [34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 185, 293, 306, 331, 367, 377, 384, 390, 391, 396], "invalid_config": 378, "invalid_surrogate_model": 367, "invalid_typ": 378, "invari": [46, 49, 50, 270, 271, 357, 391], "invers": [198, 397], "investig": [206, 398], "invok": 402, "involv": [26, 185, 360, 383, 391, 392, 393, 394, 396, 397, 401], "io": 263, "irrelev": 391, "irrespect": [266, 306], "irrevoc": 388, "is_bound": [311, 385], "is_continu": [29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 104, 105, 106, 108, 109, 111, 118, 119, 122], "is_degener": 311, "is_discret": [29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 104, 105, 106, 108, 109, 111, 118, 119, 122], "is_empti": [177, 185, 385], "is_finit": 385, "is_fully_unbound": 311, "is_half_bound": 311, "is_in_rang": [104, 105, 106, 108, 109, 111, 118, 119, 122], "is_left_bound": 311, "is_numer": [104, 105, 106, 108, 109, 111, 118, 119, 122, 385], "is_right_bound": 311, "iso": 366, "isoxazol": 401, "issu": [218, 236, 240, 242, 274, 283, 385, 388], "item": [37, 104, 105, 106, 108, 109, 111, 118, 119, 122, 380, 381, 394], "iter": [26, 118, 146, 147, 179, 185, 208, 218, 258, 279, 302, 308, 312, 341, 342, 346, 354, 355, 356, 357, 358, 361, 362, 371, 372, 373, 374, 380, 381, 383, 385, 389, 390, 394, 395, 398], "iterrow": [351, 352, 371, 372, 373, 374], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 124, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 150, 177, 179, 185, 202, 214, 217, 219, 220, 223, 226, 237, 239, 241, 243, 245, 247, 253, 258, 267, 270, 275, 282, 286, 301, 311, 315, 349, 360, 362, 381, 383, 384, 386, 388, 389, 391, 392, 393, 395, 396, 397, 398, 401], "itself": [360, 380, 384, 401], "j": [343, 383, 394, 401], "jackiepho": [342, 343, 345, 361], "januari": 388, "javadi": 387, "jin": 387, "join": [357, 384], "joint": [217, 219, 223, 237, 239, 241, 243, 390], "joint_posterior": [217, 219, 223, 237, 239, 241, 243], "joint_posterior_attr": [220, 364, 365], "jointli": [220, 390], "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 177, 179, 185, 202, 217, 219, 223, 226, 237, 239, 241, 243, 253, 258, 311, 324, 366, 367, 376, 377, 385, 402], "json_str": 397, "juli": 387, "jump": [385, 401], "jupyt": 366, "just": [386, 397], "k": [119, 166, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 361, 371, 372, 373, 374, 385, 395], "kde": 362, "keep": [45, 122, 177, 185, 344, 361, 365, 385, 386, 396], "kei": [278, 301, 343, 386], "kept": 394, "kernel": [71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 223, 224, 225, 226, 227, 233, 235, 349, 385, 391, 401], "kernel_factori": [71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 223, 225, 226, 349, 354, 355, 356, 357, 358, 369, 376], "kernel_or_factori": 223, "kernelfactori": [223, 226, 227, 233, 235, 385], "keyword": [344, 345, 349, 374, 381, 385, 396, 398], "kgaa": [383, 387, 392], "kian": 401, "kickstart": 397, "kind": [158, 383, 385, 388, 394, 395], "kiter": [354, 355, 356, 357, 358, 369], "kmean": 349, "kmeansclusteringrecommend": [349, 395], "knob": 383, "know": [344, 372, 377, 383, 397, 401], "knowledg": [10, 383, 385, 401], "known": [391, 401], "koller": 401, "kwarg": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 75, 77, 79, 84, 85, 86, 131, 133, 134, 135, 136, 137, 138, 141, 160, 225, 310], "l0": 29, "l1": 394, "l664": 235, "label": [49, 50, 111, 122, 217, 219, 223, 237, 239, 241, 243, 267, 357, 383, 385, 391, 394, 396, 398], "labelpad": 362, "lambda": [354, 356, 357, 358, 361, 362, 380], "land": 385, "languag": [274, 383], "larg": [122, 185, 351, 352, 371, 385, 392, 394], "larger": [76, 119, 331, 349, 356, 390, 391, 397, 401], "largest": [330, 389], "last": [146, 365, 386, 390, 395], "last_call_tim": 360, "lastli": 362, "latent": 394, "later": [119, 373, 384, 390, 397], "latest": [383, 386, 390], "latter": [270, 286, 361, 390, 401], "law": [383, 388], "lawsuit": 388, "layer": 365, "layout": 385, "lazi": [187, 332, 385], "lazili": [385, 392], "lazyfram": [34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 187], "le": 352, "lead": [64, 369, 385, 397], "lean": 386, "learn": [13, 213, 214, 217, 219, 223, 237, 239, 241, 243, 380, 382, 383, 385, 391, 394, 399, 400, 402], "least": [146, 383, 388, 390], "leav": 397, "lee": 387, "left": [61, 62, 138, 208, 306, 311, 355, 385, 393], "left_df": 306, "legal": 388, "legend": [342, 345], "len": [355, 357, 361, 362], "length": [77, 146, 147], "lengthi": 390, "lengthscal": [76, 77, 78, 80, 81, 82], "lengthscale_initial_valu": [76, 77, 78, 80, 81, 82], "lengthscale_prior": [76, 77, 78, 80, 81, 82], "less": [271, 361, 362, 390], "let": [343, 360, 361, 362, 364, 365, 366, 367, 381, 383, 391, 393, 397], "level": [302, 385, 386, 390, 391, 395, 397], "leverag": [361, 390, 395], "li": 394, "liabil": 388, "liabl": 388, "lib": [377, 378], "licensor": 388, "lie": [26, 301], "life": [383, 386, 387], "lifecycl": 390, "ligand": [342, 343, 345, 348, 349, 361, 383, 394], "like": [168, 212, 273, 362, 383, 385, 386, 390, 391, 394, 397, 398, 401], "limit": [233, 267, 362, 383, 387, 388, 391, 396, 402], "line": [311, 341, 342, 344, 345, 361, 385, 386, 389, 390, 394, 398, 401], "linear": [32, 75, 177, 237, 256, 261, 346, 349, 350, 365, 369, 382, 385, 386, 396, 400], "linear_model": [364, 366], "linear_regressor": 366, "linearkernel": 385, "linearli": [233, 261, 262, 369, 385], "linearregress": 364, "lineplot": [340, 341, 342, 343, 344, 345, 361, 380, 381], "link": [48, 385, 388, 394], "linspac": [340, 341, 344, 346, 354, 355, 356, 357, 358, 362, 364, 365, 366, 367, 373, 374, 376, 380, 381], "lint": [383, 385, 386], "linter": [385, 386], "list": [29, 30, 31, 32, 33, 34, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 88, 109, 124, 128, 146, 147, 177, 179, 185, 186, 187, 190, 191, 192, 208, 212, 214, 266, 276, 277, 278, 285, 294, 295, 296, 297, 301, 303, 304, 305, 306, 330, 340, 341, 342, 344, 346, 349, 354, 355, 356, 357, 358, 362, 365, 369, 371, 372, 373, 374, 381, 383, 386, 388, 391, 393, 395, 396, 398], "liter": [88, 146, 208, 210, 212, 302, 330, 386], "literatur": 385, "litig": 388, "littl": 384, "liver": [398, 401], "load": [324, 332, 361, 366, 377, 378, 385], "loc": [136, 137, 342, 345], "local": [384, 386, 392, 402], "locat": [136, 137, 392, 401], "log": [136, 267, 383, 392], "logarithm": [4, 11, 12, 322], "logei": [4, 385], "logic": [142, 301, 385, 391, 395], "lognormalprior": 385, "logo": 385, "long": [390, 397], "longer": 385, "look": [210, 236, 240, 242, 349, 351, 352, 389, 390, 391, 397, 400], "look_up_target": 208, "lookup": [206, 208, 212, 214, 289, 306, 339, 340, 341, 344, 372, 382, 385, 402], "lookup_df": 210, "lookup_test_task": 381, "lookup_training_task": 381, "lookup_withmiss": 345, "loop": [206, 208, 214, 354, 355, 356, 357, 358, 361, 365, 369, 385, 398], "loss": [365, 367, 388], "lost": 397, "low": [233, 344, 384, 385, 394, 397], "lower": [138, 260, 261, 262, 311, 342, 345, 362, 369, 380, 381, 394, 400], "lower_bound": [354, 355, 356, 357, 358, 369, 376, 396], "lr": [364, 365], "lst_exclud": 303, "luxuri": 390, "m290244": [377, 378], "machin": [383, 386, 389, 392, 394, 400, 401], "machineri": [158, 384, 386, 401], "made": [65, 185, 208, 345, 383, 384, 388, 391, 392, 396, 398], "magic": 401, "magnitud": 302, "mai": [26, 179, 282, 383, 388, 390, 397], "mail": 388, "main": [25, 26, 383, 385], "maintain": [386, 396], "major": [385, 398], "make": [8, 17, 50, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 245, 247, 274, 342, 345, 349, 351, 383, 384, 386, 388, 390, 391, 394, 397, 398, 401], "malfunct": 388, "manag": [25, 177, 178, 179, 185, 327, 385, 388], "mandatori": [385, 400], "mani": [331, 341, 344, 373, 374, 390, 394, 397, 400, 401], "manipul": 396, "manner": 392, "manual": [374, 384, 396, 397], "map": [111, 122, 210, 212, 260, 261, 262, 280, 341, 342, 343, 344, 345, 369, 398, 400], "margin": 385, "mark": [185, 388, 401], "mark_as_measur": 185, "markdown": [367, 377, 378, 385], "marker": [340, 342, 343, 345, 361, 380, 381], "markers": [340, 343, 361, 380, 381], "marketplac": 385, "martin": [383, 387], "mask_bad1": 354, "mask_bad2": 354, "mask_bad3": 354, "mask_good": [354, 391], "master": 235, "match": [26, 67, 124, 141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 185, 190, 253, 255, 258, 266, 280, 282, 306, 344, 360, 362, 369, 374, 383, 385, 390, 393, 397, 402], "match_attribut": 385, "match_targeta": 400, "match_targetb": 400, "materi": 401, "matern": 76, "maternkernel": 385, "math": [357, 361], "mathemat": 385, "matplotlib": [341, 342, 344, 345, 362, 385], "matric": [217, 219, 223, 237, 239, 241, 243], "matter": [386, 393], "max": [210, 255, 342, 343, 345, 346, 348, 349, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 367, 369, 376, 377, 378, 383, 385, 393, 397, 402], "max_cardin": [29, 40, 44], "max_column": 307, "max_nonzero": 185, "max_row": 307, "max_sum": [185, 396], "max_target": 400, "max_yield": [342, 345], "maxim": [6, 253, 255, 258, 346, 348, 362, 369, 383, 400], "maximum": [6, 29, 40, 44, 122, 185, 260, 307, 369, 385, 391, 396], "mc": 365, "md": 385, "me2pph": [342, 343, 345, 361], "mean": [5, 8, 17, 50, 88, 99, 166, 173, 174, 206, 208, 210, 212, 217, 219, 223, 237, 239, 241, 243, 247, 322, 345, 346, 349, 364, 365, 366, 369, 385, 386, 388, 389, 390, 391, 393, 394, 395, 397, 402], "meaning": 393, "meaningless": 389, "meanpredictionsurrog": [247, 349, 399], "meantim": [386, 391], "meanvarestim": 364, "measur": [13, 26, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 185, 206, 208, 266, 306, 342, 343, 345, 349, 351, 352, 360, 361, 362, 369, 371, 372, 373, 374, 383, 385, 386, 389, 392, 393, 394, 395, 396, 398, 400, 401, 402], "mechan": [8, 17, 57, 96, 97, 99, 206, 209, 210, 214, 282, 313, 344, 360, 361, 362, 380, 381, 385, 388, 397, 398, 401], "media": [388, 394, 401], "mediocr": 400, "medium": [364, 365, 367, 376, 383, 388, 394], "medoid": [167, 385, 395], "meet": [301, 388], "member": [286, 391], "memori": [10, 179, 184, 185, 343, 348, 357, 365, 377, 385, 392], "memorys": [179, 185], "mention": 389, "merchant": 388, "merck": [383, 387, 392], "mere": [388, 393], "merg": 386, "meshgrid": [380, 381], "messag": [361, 364, 365], "meta": [61, 144, 146, 147, 148, 151, 383, 385, 402], "metadata": [26, 177, 185, 264, 385, 402], "metarecommend": [146, 147, 148, 385], "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 173, 174, 177, 179, 184, 185, 202, 217, 219, 223, 225, 226, 233, 235, 237, 239, 241, 243, 249, 250, 253, 258, 273, 274, 282, 286, 311, 324, 329, 331, 362, 365, 367, 377, 378, 385, 386, 387, 390, 392, 393, 394, 396, 397, 398, 401], "methodtyp": [360, 361, 362], "methyldiphenylphosphin": [342, 343, 345, 361], "methylisoxazol": 401, "metric": [383, 392, 394], "micromamba": 385, "midpoint": 400, "might": [46, 50, 122, 179, 343, 349, 351, 355, 357, 374, 381, 384, 390, 391, 392, 396, 398, 401], "mimic": [69, 129, 391], "min": [255, 340, 341, 344, 346, 351, 352, 362, 369, 371, 372, 373, 374, 380, 381, 383, 385, 393, 397, 402], "min_cardin": [29, 40, 44], "min_nonzero": 185, "min_target": 400, "miniconda": 385, "minim": [6, 253, 255, 258, 346, 369, 380, 381, 400], "minimum": [29, 40, 44, 119, 185], "minor": 385, "mirror": [390, 397], "miss": [26, 208, 210, 345, 385, 386, 398], "mix": [214, 357, 383, 391, 394, 397, 401], "mixin": 202, "mixtur": [165, 353, 382, 385, 391, 394, 395, 401], "mobil": 385, "mode": [88, 111, 122, 146, 208, 253, 255, 258, 261, 280, 301, 339, 340, 341, 342, 343, 344, 345, 348, 349, 351, 352, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 367, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 385, 393, 395, 397, 402], "model": [13, 29, 30, 31, 32, 33, 34, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 69, 141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 217, 218, 219, 220, 223, 237, 239, 241, 243, 246, 247, 249, 250, 318, 351, 352, 363, 380, 381, 383, 385, 387, 389, 390, 391, 394, 395, 397, 400, 401, 402], "model_cl": 250, "model_cluster_num_parameter_nam": [165, 166, 167, 168], "model_from_config": 366, "model_from_python": 366, "model_init": 249, "model_json": 366, "model_param": [165, 166, 167, 168, 237, 241, 243, 367, 385], "modif": [384, 388], "modifi": [26, 210, 245, 247, 302, 388, 396], "modul": [0, 1, 27, 69, 89, 102, 120, 129, 139, 142, 151, 154, 161, 175, 193, 194, 206, 215, 221, 228, 251, 268, 316, 332, 335, 365, 383, 385, 386], "modular": 386, "mol": 295, "molecul": [48, 116, 122, 293, 294, 295, 394], "molecular": 394, "moment": [214, 233, 386, 400], "monitor": [385, 392], "monkeypatch": 384, "mont": [9, 10, 11, 12, 13, 14, 15, 16, 17, 60, 212, 340, 341, 343, 344, 345, 346, 361, 365, 380, 381, 398], "monte_carlo_run": [212, 346, 361], "mordr": [116, 122, 179, 296, 342, 343, 345, 348, 349, 355, 357, 361, 364, 365, 367, 377, 378, 383, 385, 391, 394], "mordredcommun": [385, 394], "more": [8, 10, 17, 50, 55, 62, 122, 146, 147, 177, 185, 192, 208, 217, 219, 223, 237, 239, 241, 243, 245, 246, 247, 263, 266, 286, 344, 345, 346, 349, 357, 362, 364, 380, 383, 385, 386, 388, 390, 391, 392, 393, 394, 396, 397, 400], "morgan": [116, 294, 394], "morgan_fp": [116, 343, 394], "morgangener": [343, 354, 356, 358], "most": [185, 208, 341, 344, 347, 383, 386, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401], "motiv": 385, "move": [385, 397], "mpl_toolkit": 362, "mplot3d": 362, "mseloss": 365, "mu": [136, 137], "much": [343, 344, 393, 394], "multi": [339, 382, 385, 401], "multipl": [36, 96, 211, 212, 302, 341, 342, 343, 344, 345, 355, 383, 385, 391, 393, 400, 401, 402], "multipli": [42, 85, 391], "multitask": 385, "must": [46, 91, 96, 101, 179, 185, 210, 214, 282, 302, 349, 360, 361, 364, 365, 369, 385, 386, 388, 389, 391, 392, 393, 394], "mutual": 398, "my_attribut": 386, "my_valu": 392, "mypi": [274, 283, 383, 385, 386], "mystr": 386, "n": [21, 271, 287, 342, 343, 345, 348, 349, 354, 355, 356, 357, 358, 361, 367, 369, 371, 372, 373, 374, 376], "n_batches_don": 26, "n_bit": 294, "n_cluster": [166, 167], "n_compon": 165, "n_doe_iter": [208, 212, 214, 340, 341, 342, 343, 344, 345, 346, 361, 362, 380, 381, 398], "n_estim": 367, "n_fits_don": 26, "n_interrupted_campaign": 361, "n_iter": [351, 352, 354, 355, 356, 357, 358, 369], "n_mc_iter": [212, 214, 340, 341, 343, 344, 345, 346, 361, 380, 381, 398], "n_pis_ov": 361, "n_pis_over_requir": 361, "n_point": [177, 331], "n_sampl": 330, "n_task": 179, "n_task_param": 385, "naiv": [150, 239, 247, 344, 349, 385, 396], "naive_hybrid_campaign": 344, "naive_hybrid_recommend": 344, "naivehybridrecommend": 385, "naivehybridspacerecommend": [344, 374, 385, 395], "nake": [266, 392], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 23, 24, 40, 41, 42, 55, 104, 105, 106, 108, 109, 111, 118, 119, 122, 124, 141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 185, 191, 200, 212, 219, 245, 247, 253, 258, 270, 275, 280, 281, 282, 293, 294, 296, 297, 301, 303, 319, 324, 334, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 385, 386, 388, 391, 392, 393, 396, 397, 398, 400, 401], "name_or_abbr": [275, 281], "namespac": [159, 385, 386], "nan": [26, 127, 296, 297, 336, 338, 369], "nativ": [366, 385], "natur": [241, 343, 386, 391, 395, 397, 400], "navig": [383, 390], "nbase": [294, 296, 297], "nbviewer": 366, "nd": 383, "ndarrai": [97, 177, 179, 185, 260, 261, 262, 311, 322, 330, 362, 385], "ndation": 349, "ne": 357, "nearli": 400, "necessari": [360, 386, 390, 391, 393, 394, 396, 398], "necessarili": [388, 390, 391, 396, 401], "need": [21, 26, 141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 190, 214, 220, 282, 306, 340, 341, 342, 343, 344, 345, 346, 349, 354, 357, 358, 360, 362, 364, 366, 369, 371, 372, 373, 374, 380, 381, 383, 385, 386, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401], "neg": [13, 385], "negat": [6, 381, 391, 401], "neglig": 388, "neither": [214, 302], "nest": [390, 402], "network": 365, "neural": [365, 401], "neuralnetdropout": 365, "neuralnetdropoutsurrog": 365, "neurip": 401, "never": [356, 357], "nevertheless": [286, 384], "new": [26, 88, 91, 96, 101, 146, 148, 177, 210, 218, 260, 261, 262, 270, 301, 302, 305, 348, 361, 362, 376, 383, 385, 386, 390, 391, 401], "new_rec": 390, "newli": [383, 386, 392, 401], "next": [26, 148, 357, 360, 362, 376, 380, 381, 383, 389, 390, 395, 397], "ngboost": [241, 349, 385], "ngboostmodel": 367, "ngboostsurrog": [349, 367, 399], "nice": [362, 384], "nicknam": 293, "nintern": 369, "nn": 365, "no_duplicates_constraint": 357, "no_grad": 362, "no_tl": 380, "nois": [208, 302, 381, 385], "noise_level": 302, "noise_perc": [208, 212, 398], "noise_std": [380, 381], "noise_typ": 302, "noised_hartmann": 380, "noisi": [12, 14, 380, 401], "non": [26, 54, 55, 150, 179, 208, 214, 217, 219, 223, 237, 239, 241, 243, 280, 282, 286, 331, 336, 337, 338, 372, 380, 385, 388, 396, 397], "none": [13, 21, 26, 38, 50, 54, 55, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 86, 88, 105, 118, 119, 124, 126, 127, 128, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 182, 185, 188, 191, 192, 195, 196, 198, 200, 208, 210, 212, 214, 217, 219, 223, 237, 239, 241, 243, 249, 250, 258, 266, 267, 282, 301, 302, 303, 304, 305, 311, 312, 324, 336, 337, 338, 349, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 369, 376, 396, 398, 400], "nonetheless": 401, "nonlinear": [33, 177], "nonpredict": [163, 165, 166, 167, 168, 170, 171], "nonpredictiverecommend": [168, 170, 171, 385], "nonzero": [29, 185, 385], "noqa": [354, 386], "nor": 302, "norecommenderslefterror": [146, 147], "norm": 367, "normal": [135, 136, 137, 173, 354, 356, 357, 358, 369, 384, 388, 393, 396], "normaliz": 393, "normalprior": 385, "not_a_param": 367, "notabl": 385, "note": [26, 29, 50, 179, 208, 212, 214, 218, 219, 301, 302, 341, 342, 343, 344, 345, 349, 355, 357, 360, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 383, 390, 391, 392, 393, 395, 396, 397, 398, 399, 401], "notebook": 366, "noteworthi": 390, "noth": [13, 26, 29, 32, 38, 40, 41, 42, 44, 63, 96, 109, 148, 150, 156, 158, 165, 166, 167, 168, 177, 179, 185, 223, 237, 241, 243, 258, 388, 394], "notic": [360, 386, 388, 397], "notimplementederror": [34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 97, 192, 195, 196, 214, 217, 218, 219, 223, 237, 239, 241, 243], "notwithstand": 388, "now": [341, 342, 343, 344, 345, 346, 348, 349, 354, 356, 357, 360, 361, 362, 369, 376, 377, 380, 381, 383, 385, 394, 401], "np": [97, 340, 341, 344, 346, 351, 352, 354, 355, 356, 357, 358, 362, 364, 365, 366, 367, 373, 374, 376, 380, 381, 391, 394], "nrecommend": [348, 349, 369, 371, 372, 373, 374], "nu": 76, "num": 315, "num_disc_1": [369, 390], "num_disc_2": 369, "num_experi": [208, 340, 341, 342, 343, 344, 345, 346, 361, 380, 381], "num_fantasi": 10, "num_neuron": 365, "num_parameter_1": 358, "num_parameter_2": 358, "num_parameter_3": 358, "num_parameter_4": 358, "num_parameter_5": 358, "num_parameter_6": 358, "num_sampl": 81, "num_valu": [354, 355, 356, 357, 358, 369, 376, 396], "number": [10, 13, 26, 40, 81, 122, 141, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 185, 208, 212, 214, 294, 307, 311, 315, 325, 330, 331, 340, 341, 342, 343, 344, 345, 346, 351, 352, 354, 355, 356, 358, 362, 371, 372, 373, 380, 381, 383, 385, 389, 390, 391, 392, 393, 394, 396, 397, 398], "numer": [26, 29, 30, 31, 32, 33, 34, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 64, 104, 105, 106, 108, 109, 111, 118, 119, 122, 177, 185, 210, 258, 266, 302, 306, 331, 348, 351, 357, 385, 391, 392, 393, 394, 396, 398, 400], "numerical_measurements_must_be_within_toler": [26, 185, 266, 306, 385, 390], "numerical_onli": [29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52], "numericalcontinuousparamet": [32, 41, 42, 177, 344, 351, 352, 371, 372, 374, 381, 396, 402], "numericaldiscreteparamet": [185, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 369, 373, 374, 376, 377, 378, 380, 381, 383, 396, 397, 402], "numericaltarget": [210, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 393, 397, 402], "numericcontinu": [344, 374], "numparam1": 358, "numparam2": 358, "numparam3": 358, "numparam4": 358, "numparam5": 358, "numparam6": 358, "numpi": [177, 311, 317, 319, 340, 341, 344, 346, 351, 352, 354, 355, 356, 357, 358, 362, 364, 365, 366, 367, 373, 374, 376, 380, 381, 385, 391], "nuniqu": 357, "nyou": [340, 371, 373, 374], "o": [340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 354, 355, 356, 357, 358, 361, 362, 364, 365, 367, 380, 381, 383, 391, 392, 394], "o2": [342, 343, 345, 361], "obj": [126, 127, 128, 196], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 96, 99, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 124, 131, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 173, 174, 177, 179, 184, 185, 186, 187, 196, 197, 200, 202, 217, 219, 223, 226, 237, 239, 241, 243, 245, 247, 253, 258, 273, 274, 280, 282, 295, 302, 306, 311, 324, 344, 348, 360, 361, 362, 364, 365, 366, 367, 374, 377, 378, 384, 385, 386, 388, 390, 391, 395, 396, 398, 399, 400, 402], "objective_json": 397, "oblig": 388, "observ": [206, 398, 400], "obtain": [208, 343, 362, 381, 383, 390, 397, 401], "oc": [342, 343, 345, 348, 349, 361], "oc1": [342, 343, 345, 361], "occur": [49, 386], "occurr": 391, "octanol": [391, 394], "off": [8, 17, 214, 287, 355, 383, 385, 391, 392, 400], "offer": [282, 362, 373, 388, 389, 394, 395, 397, 398, 399, 401], "offset": [32, 41, 42, 79], "offset_initial_valu": 79, "offset_prior": 79, "often": [389, 391, 392, 394, 397], "oftentim": 397, "oh": [108, 113, 343, 355, 364, 365, 367, 369, 376, 377, 378, 383, 396, 397], "ok": 369, "old": 401, "omit": [212, 282, 360, 383, 397], "onc": [212, 361, 394, 398], "one": [26, 55, 104, 105, 106, 108, 109, 111, 118, 119, 122, 124, 141, 142, 146, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 179, 192, 210, 223, 247, 270, 271, 341, 342, 343, 344, 345, 349, 351, 369, 378, 380, 381, 383, 385, 386, 388, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401], "onehot": 343, "ones": [179, 266, 306, 343, 374, 385, 401], "ongo": [361, 401], "onli": [8, 10, 17, 29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 76, 122, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 179, 185, 210, 214, 247, 266, 267, 282, 283, 286, 301, 306, 311, 330, 331, 340, 342, 349, 354, 355, 357, 361, 362, 366, 367, 371, 372, 373, 374, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401], "onnx": [218, 219, 318, 363, 383, 385, 399], "onnx_input_nam": [219, 366], "onnx_str": [219, 366], "onto": 386, "open": [383, 386], "opentelemetri": [383, 385, 392], "oper": [38, 47, 198, 245, 247, 316, 351, 356, 357, 358, 384, 385, 391, 395, 397], "operator_convert": 366, "opposit": 391, "opt": [365, 383, 392], "optim": [26, 32, 41, 42, 141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 206, 208, 212, 214, 301, 343, 344, 346, 347, 348, 351, 352, 361, 362, 365, 369, 374, 385, 387, 389, 391, 392, 393, 394, 395, 396, 398, 400, 401], "optimize_acqf": [32, 41, 42, 158], "optimize_acqf_": [32, 41, 42], "optimize_acqf_discret": 158, "optimize_acqf_mix": 158, "option": [65, 75, 76, 77, 78, 79, 80, 81, 82, 86, 105, 108, 109, 111, 119, 122, 124, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 185, 198, 200, 208, 212, 214, 237, 241, 243, 249, 258, 282, 301, 303, 304, 305, 324, 345, 349, 366, 367, 385, 386, 389, 390, 391, 393, 396, 397, 398, 399, 400], "oracl": 398, "orchestr": [386, 390], "order": [179, 185, 357, 361, 383, 385, 386, 390, 391, 394, 397, 401], "ordin": 400, "ore": 397, "org": [32, 41, 42, 217, 219, 223, 235, 237, 239, 241, 243, 274, 289, 305, 366, 383, 388], "organ": 386, "origin": [21, 173, 174, 246, 270, 271, 278, 376, 385, 386, 388, 394, 395, 397], "orthogon": 386, "other": [46, 83, 177, 271, 341, 342, 345, 348, 351, 352, 357, 361, 371, 374, 380, 381, 383, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401], "otherwis": [104, 105, 106, 108, 109, 111, 118, 119, 122, 357, 388, 389, 393, 401], "our": [236, 240, 242, 344, 354, 356, 360, 361, 362, 367, 371, 372, 373, 374, 377, 378, 380, 381, 383, 386, 389, 390, 391, 397, 398], "out": [185, 369, 381, 383, 388, 392, 398, 401], "out_featur": 365, "outcom": [141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 343, 383, 394, 400], "output": [86, 302, 324, 365, 372, 380, 381, 384, 387, 395], "output_dim": 365, "outputscal": 86, "outputscale_initial_valu": 86, "outputscale_prior": 86, "outsid": [26, 261, 262, 301, 306, 369, 397], "outstand": 388, "over": [26, 29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 385, 389, 395, 401], "overal": [179, 366, 367, 385, 386, 390, 393, 401], "overlap": [54, 55, 296, 297, 351, 352, 371, 391], "overrid": [198, 200, 360], "overridden": 360, "overview": 397, "overwritten": 374, "own": [150, 383, 384, 385, 386, 388, 391, 394], "owner": 388, "ownership": 388, "p": [342, 343, 345, 348, 349, 360, 361, 362, 365, 380, 381, 386], "p1": [396, 397], "p1_json": 397, "p1_via_json": 397, "p2": [396, 397], "p2_json": 397, "p2_via_json": 397, "p3c4": [342, 343, 345, 361], "p_i": 29, "pack": 397, "packag": [264, 377, 378, 385, 386, 394], "page": [366, 383, 385, 386], "pair": [270, 383, 394], "pam": 167, "pamclusteringrecommend": 395, "panda": [45, 186, 204, 205, 210, 293, 342, 343, 345, 354, 361, 362, 369, 380, 381, 385, 391, 394, 396, 397], "paper": 401, "paper_fil": 401, "parallel": 386, "param": [363, 367, 382, 396], "param1": [396, 398], "param2": [396, 398], "param_bounds_comp": [177, 179, 185], "param_nam": 177, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 62, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 97, 101, 104, 105, 108, 109, 111, 113, 114, 115, 116, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 173, 174, 177, 179, 181, 184, 185, 186, 187, 190, 191, 192, 198, 200, 202, 206, 208, 210, 212, 214, 217, 219, 220, 223, 226, 233, 235, 237, 239, 241, 243, 245, 246, 247, 249, 250, 253, 258, 260, 261, 262, 266, 267, 270, 271, 276, 277, 278, 280, 282, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 315, 320, 321, 322, 324, 326, 327, 330, 331, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 385, 386, 391, 392, 393, 397, 398, 401, 402], "parameter": [133, 134, 135, 136, 137, 138], "parameter_json": 397, "parameterencod": [105, 113, 114, 116, 119], "parametr": 391, "parent": 386, "pars": [313, 385], "parser": 385, "part": [13, 21, 36, 59, 151, 177, 185, 236, 240, 242, 301, 367, 374, 377, 378, 380, 381, 385, 386, 388, 389, 390, 391, 395, 396, 397], "parti": 388, "partial": [21, 361], "particl": 401, "particular": [26, 34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 185, 206, 360, 374, 383, 386, 388, 390, 394, 396, 397, 398], "particularli": [282, 390], "partit": [167, 212, 214, 385, 395, 398], "pass": [26, 34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 165, 166, 167, 168, 179, 185, 196, 223, 237, 241, 243, 376, 381, 385, 386, 393, 397], "passthrough": [23, 92, 181, 227], "patch": 361, "patent": 388, "path": [324, 343, 385, 386, 392], "pattern": [386, 401], "pd": [210, 270, 271, 302, 306, 342, 343, 345, 354, 361, 362, 369, 380, 381, 385, 391, 394, 396, 397], "pdf": 401, "peek": 397, "pend": 21, "per": [208, 340, 341, 342, 343, 344, 345, 346, 349, 369, 373, 380, 381, 394, 396, 398], "percent": [208, 388], "percentag": [158, 266, 302, 381, 395], "perf_count": 360, "perfectli": 397, "perform": [158, 208, 266, 343, 344, 354, 355, 356, 357, 358, 362, 377, 380, 381, 383, 386, 388, 389, 390, 392, 394, 395, 398, 401], "period": 77, "period_length_initial_valu": 77, "period_length_prior": 77, "periodickernel": 385, "perm_inv_constraint": 357, "permiss": [383, 388], "permut": [46, 49, 50, 271, 357, 385, 391], "permutation_invari": 46, "permutationinvarianceconstraint": 357, "perpetu": 388, "persist": [390, 392, 397], "perspect": 397, "pertain": 388, "phase": 148, "phcpho": [342, 343, 345, 348, 349, 361], "phenomenon": 390, "philosophi": 397, "physic": 398, "pi": [7, 349, 361, 362], "pi_max": 362, "pi_per_iter": 362, "pi_required_fract": 361, "pi_threshold": 361, "pickl": 385, "pictur": 383, "piec": [383, 390, 391], "piecewis": 78, "piecewisepolynomialkernel": 385, "pin": [21, 385], "pin_discret": 21, "pinned_part": 21, "pip": [383, 385, 386], "pipelin": [380, 381, 385, 386], "pival": [342, 343, 345, 348, 349, 361], "pl": [34, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 187], "place": [26, 29, 210, 301, 302, 366, 367, 384, 386, 388, 390, 394, 397, 401], "placehold": 273, "plai": [390, 400], "plain": 227, "plainkernelfactori": [71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 223], "plan": [218, 236, 240, 242, 394], "platt": 401, "pleas": [236, 240, 242, 343, 354, 356, 358, 364, 365, 366, 367, 383, 389], "plot": [208, 340, 341, 342, 343, 344, 345, 380, 381, 385, 401], "plot_abegin_convert_pipelin": 318, "plot_ebegin_float_doubl": 318, "plotting_them": 324, "plt": [341, 342, 344, 345, 362], "plu": [210, 383], "plugin": 385, "pm": [5, 349], "png": [341, 342, 344, 345], "po16": 394, "poetri": 385, "point": [6, 13, 21, 25, 119, 141, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 217, 219, 220, 223, 237, 239, 241, 243, 317, 318, 328, 329, 330, 331, 333, 341, 342, 344, 346, 348, 349, 357, 361, 373, 374, 380, 381, 383, 385, 387, 389, 390, 395, 396, 398, 402], "points_per_dim": [340, 341, 344, 346, 362, 373, 374, 380, 381], "polar": [34, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 187, 383, 385, 387, 402], "poli": 362, "polycollect": 362, "polym": 394, "polynomi": [78, 79], "polynomialkernel": 385, "polytop": 385, "posit": [282, 330, 385, 393], "posixpath": 324, "possibl": [124, 185, 186, 187, 206, 282, 301, 344, 345, 361, 362, 369, 383, 385, 388, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401], "possibli": 147, "post": 394, "post_hook": [282, 360, 361, 362], "posterior": [5, 6, 8, 13, 17, 217, 219, 220, 223, 237, 239, 241, 243, 246, 349, 364, 365, 385, 389], "posteriorstandarddevi": 389, "postprocess": 293, "potassium": [342, 343, 345, 348, 349, 361], "potenti": [179, 306, 383, 384, 385, 386, 390, 393, 396], "power": [79, 388, 391, 395], "pph3": [342, 343, 345, 361], "pr": [385, 386], "practic": [389, 395], "pre": [124, 146, 226, 363, 385, 386, 396], "pre_hook": [282, 360], "precis": [50, 146, 177, 246, 266, 318, 319, 334, 385, 402], "precomput": 111, "pred": 365, "predefin": [324, 390, 395], "predict": [8, 17, 168, 364, 365, 385, 389, 390, 398, 401], "prefer": [26, 388, 397], "prefix": [294, 296, 297], "preliminari": 401, "prepar": [362, 386, 388], "preprocess": 385, "present": [179, 270, 271, 282, 306, 348, 385, 391, 398], "preset": [223, 230, 233, 235, 385], "pressur": [356, 364, 365, 366, 367, 376, 377, 378, 383, 391], "pretrain": [219, 363, 382], "pretti": 307, "pretty_print_df": 385, "prevent": [195, 196, 282, 384, 386, 396], "previou": [146, 361, 362, 385, 390, 392, 395, 401], "previous": [150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 266, 342, 343, 345, 348, 349, 356], "price": 394, "primari": 390, "primarili": 389, "print": [210, 307, 340, 342, 343, 345, 346, 348, 349, 351, 352, 356, 360, 364, 365, 366, 367, 371, 372, 373, 374, 376, 377, 378, 383, 385], "print_parameter_names_hook": 360, "printer_inst": 360, "prior": [75, 76, 77, 78, 79, 80, 81, 82, 86, 133, 134, 135, 136, 137, 138, 233, 358, 383, 384, 385, 398], "priori": [391, 397, 401], "privat": [385, 387], "probabilist": 389, "probability_of_improv": [361, 362], "probabilityofimprov": [361, 362], "probabl": [7, 15, 349, 359, 361, 382, 385], "problem": [380, 381, 383, 385, 386, 390, 393, 397], "problemat": [286, 384, 394], "proce": [208, 348, 392], "procedur": [389, 401], "proceed": 401, "process": [26, 69, 221, 222, 223, 224, 228, 229, 230, 232, 233, 234, 235, 245, 246, 330, 346, 349, 360, 380, 381, 385, 386, 389, 390, 391, 392, 394, 397, 401], "prod": [357, 358], "prod_constraint": 358, "prod_i": 393, "produc": [97, 210, 383, 386, 398], "product": [51, 85, 179, 185, 186, 187, 279, 353, 382, 383, 385, 388, 391, 402], "product_paramet": [185, 396], "productkernel": 385, "program": [377, 378], "progress": [26, 145, 362, 385], "prohibit": 389, "project": [362, 383, 385, 392], "promin": 388, "promis": 361, "proper": [246, 398], "properli": [21, 369, 384, 396], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 99, 101, 104, 105, 106, 108, 109, 111, 113, 114, 116, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 173, 174, 177, 179, 180, 184, 185, 217, 219, 223, 226, 230, 233, 235, 237, 239, 241, 243, 253, 255, 256, 258, 274, 311, 329, 385, 386, 391], "proport": 381, "propos": 390, "protobuf": 385, "protocol": [140, 141, 225, 286, 385], "prototyp": 387, "provid": [13, 26, 32, 41, 42, 97, 111, 122, 124, 141, 146, 147, 150, 151, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 185, 190, 198, 202, 206, 208, 210, 212, 214, 217, 219, 223, 233, 235, 237, 239, 241, 243, 270, 279, 282, 289, 292, 299, 302, 305, 308, 331, 340, 342, 343, 344, 345, 360, 371, 372, 373, 374, 377, 378, 380, 381, 385, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401], "prune": [12, 14], "prune_baselin": [12, 14], "pstd": [6, 385, 389], "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 99, 101, 104, 105, 106, 108, 109, 111, 113, 114, 116, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 173, 174, 177, 179, 180, 184, 185, 202, 217, 219, 223, 225, 226, 230, 233, 235, 237, 239, 241, 243, 253, 255, 256, 258, 273, 274, 311, 329, 385, 386], "publicli": 388, "publish": 385, "pull": 385, "pure": [8, 10, 13, 17, 142, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 179, 214, 218, 331, 341, 346, 364, 373, 385, 402], "purerecommend": [144, 146, 147, 148, 150, 156, 163, 385], "purpos": [13, 41, 42, 360, 361, 366, 383, 384, 386, 388, 397], "push": 386, "put": [392, 394], "puzzl": 383, "py": [235, 377, 378, 385, 392], "py310": [377, 378], "py312": 386, "pyarrow": 385, "pydant": 385, "pydoclint": [385, 386], "pydocstyl": 386, "pylint": 385, "pypi": [383, 385], "pyplot": [341, 342, 344, 345, 362], "pyproject": 385, "pytest": [385, 386], "python": [25, 274, 283, 343, 367, 372, 377, 378, 383, 384, 385, 386, 390, 392, 397], "python3": [377, 378], "pytorch": 385, "pyupgrad": 385, "q": [78, 217, 219, 220, 223, 237, 239, 241, 243, 246, 349], "qei": [9, 341, 349, 377, 378, 385], "qexpectedimprov": 349, "qkg": [10, 385], "qlogei": [11, 385], "qlogexpectedimprov": [354, 355, 356, 357, 358, 369, 376], "qlognei": [12, 385], "qnegintegratedposteriorvari": 389, "qnei": [14, 385], "qnipv": [13, 385, 389], "qpi": [15, 349], "qsr": [16, 385], "quadrat": 82, "qualiti": 386, "quantif": 401, "quantifi": [389, 401], "quantiti": [48, 392, 393], "quantum": 111, "qucb": [17, 349, 389], "queri": [142, 151, 206, 208, 210, 383, 390, 392, 398], "question": [386, 390, 401], "qupperconfidencebound": 389, "qvailabl": 349, "qvarucb": 385, "r": [342, 343, 345, 348, 349, 361], "radial": 80, "radiu": [294, 394], "rais": [13, 26, 34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 97, 124, 127, 128, 146, 147, 156, 158, 173, 174, 177, 179, 185, 190, 191, 192, 195, 196, 208, 210, 214, 217, 218, 219, 223, 237, 239, 241, 243, 245, 247, 250, 271, 280, 282, 285, 287, 295, 299, 301, 302, 306, 330, 331, 344, 360, 361, 362, 374, 384, 385, 386, 395], "rand": 366, "random": [13, 81, 177, 179, 208, 210, 212, 242, 243, 301, 329, 330, 331, 340, 341, 342, 343, 344, 345, 349, 361, 362, 366, 381, 383, 385, 389, 394, 395, 398], "random_campaign": [340, 341, 344], "random_forest": [243, 349], "random_recommend": [341, 344], "random_se": [208, 212, 361, 398], "randomforestmodel": 367, "randomforestregressor": 364, "randomforestsurrog": [349, 399], "randomli": [171, 330, 343, 389, 395], "randomrecommend": [340, 341, 342, 343, 344, 345, 349, 354, 355, 356, 357, 358, 360, 361, 362, 369, 385, 395], "rang": [104, 105, 106, 108, 109, 111, 118, 119, 122, 253, 301, 340, 341, 344, 346, 351, 352, 354, 355, 356, 357, 358, 362, 365, 369, 371, 372, 373, 374, 381, 383, 391, 397, 398, 400], "rank": 400, "rastrigin": [340, 351, 352, 371, 373, 374], "rate": 133, "rather": [344, 376, 384, 389, 397], "ration": 82, "ravel": [364, 380, 381], "raw": 397, "rbf": 80, "rbfkernel": 385, "rdkit": [116, 179, 292, 297, 343, 354, 356, 358, 391, 394], "re": [341, 344, 346, 361, 371, 372, 373, 374, 386, 395], "reach": [260, 262, 369], "reachabl": 392, "reactant": 394, "reaction": [343, 348, 383, 391, 394, 401], "reactor": 401, "reactora": 401, "reactorb": 401, "reactorc": 401, "read": [111, 179, 324, 343, 348, 383, 385, 386], "read_excel": [342, 343, 345, 361], "readabl": [184, 307, 315, 376, 385, 387, 388, 397], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 208, 217, 219, 223, 237, 239, 241, 243, 386], "readm": [385, 386], "reagent": [391, 394], "real": [41, 42, 311, 383, 390, 400], "realist": 398, "realiz": [206, 398], "reason": [38, 165, 166, 167, 168, 185, 343, 357, 373, 388, 389, 391, 394, 398], "reassembl": 397, "rebas": 386, "rec": [354, 355, 356, 357, 358, 369, 390], "receiv": [388, 392, 397], "recip": 386, "recipi": 388, "recommend": [26, 59, 61, 62, 109, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 185, 206, 208, 218, 266, 301, 302, 330, 340, 341, 342, 343, 344, 345, 347, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 369, 377, 378, 380, 381, 382, 383, 385, 386, 389, 392, 394, 396, 398, 401, 402], "recommendation_orig": 376, "recommendation_recr": 376, "recommender_with_hook": 361, "recommenderprotocol": [26, 144, 146, 147, 148, 153, 360, 362, 385], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 177, 179, 185, 202, 217, 219, 223, 226, 237, 239, 241, 243, 253, 258, 311, 383, 390, 392, 397], "record": [26, 266, 267, 383, 392, 401], "recreat": [230, 376, 397], "recreate_model": 367, "recurs": [276, 277], "redesign": 385, "redistribut": 388, "reduc": [122, 362, 380, 381, 394], "reduct": 402, "ref": 383, "refactor": [236, 240, 242, 385], "refer": [206, 235, 266, 281, 301, 306, 318, 340, 341, 342, 343, 344, 345, 346, 349, 351, 352, 354, 355, 356, 357, 358, 360, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 385, 390, 393, 394, 395, 396, 397, 398, 399, 401], "referenc": 386, "refin": [361, 383, 385, 390], "reflect": [150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 362, 385, 386, 389, 391, 394], "regard": [29, 36, 351, 352, 357, 371, 386, 388], "regim": 385, "regist": [282, 359, 361], "register_custom_architectur": [364, 365], "register_hook": [359, 360, 361, 362, 385], "registr": 385, "regress": 237, "regressor": [364, 366], "regressormixin": 364, "regret": 16, "regroup": 385, "regular": [247, 385, 401], "reinstal": 383, "rel": [208, 391, 393], "relat": [48, 98, 112, 179, 197, 254, 269, 374, 380, 381, 383, 385, 390, 391, 392, 401], "relationship": [380, 381, 383, 393, 401], "relative_perc": 302, "releas": [383, 385], "relev": [46, 185, 190, 210, 355, 385, 386, 390, 391, 401], "reli": [384, 385], "reliabl": 394, "relu": 365, "remain": [49, 214, 261, 369, 374, 380, 381, 388, 394, 397, 398], "remaind": 331, "remind": 385, "remot": 386, "remov": [45, 48, 49, 179, 185, 357, 386, 391, 396], "renam": [343, 380, 381, 385], "render": 366, "reoccur": 401, "reorgan": 385, "repeat": [386, 390], "repetit": [212, 349, 361], "rephras": 391, "replac": [340, 371, 373, 374, 385, 386, 394], "replic": 397, "repo": 385, "report": [141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 384], "repositori": [343, 383, 386], "repr": 366, "repres": [34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 84, 85, 111, 179, 214, 217, 219, 223, 237, 239, 241, 243, 299, 311, 315, 330, 357, 377, 378, 383, 385, 388, 390, 394, 396], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 184, 185, 202, 217, 219, 223, 226, 237, 239, 241, 243, 253, 258, 287, 291, 299, 301, 307, 311, 354, 355, 356, 357, 358, 366, 369, 376, 385, 390, 394, 397, 402], "reproduc": [361, 385, 388], "reproduct": 388, "request": [26, 61, 62, 97, 146, 147, 148, 192, 226, 264, 330, 331, 385, 390], "requir": [29, 32, 40, 41, 42, 44, 60, 148, 185, 250, 282, 348, 357, 360, 361, 364, 366, 369, 373, 377, 383, 385, 386, 388, 390, 391, 393, 394, 396, 397, 398, 400, 401], "rerun": 366, "reserv": [383, 386], "reset_index": 380, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 357, 358, 397], "resolv": 293, "resort": [247, 386, 397], "resp": [180, 344, 345, 374], "respect": [158, 180, 208, 212, 265, 270, 301, 357, 386, 390, 391, 393, 397, 400], "respons": [388, 390, 395], "restart": 146, "restor": 397, "restrain": 394, "restrict": [179, 185, 206, 212, 214, 354, 385, 398, 401, 402], "result": [8, 10, 17, 26, 122, 185, 208, 245, 301, 340, 341, 342, 343, 344, 345, 346, 348, 364, 365, 366, 367, 369, 380, 381, 383, 385, 388, 389, 390, 391, 392, 394, 395, 397, 398, 401], "result_baselin": [380, 381], "result_fract": 381, "results_interrupt": 361, "results_uninterrupt": 361, "retain": [388, 391], "retrain": [218, 219, 399], "retriev": [206, 275, 276, 277, 386, 398], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 23, 24, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 91, 92, 94, 96, 97, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 124, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 150, 153, 156, 158, 160, 163, 165, 166, 167, 168, 170, 171, 173, 174, 177, 179, 181, 182, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 202, 204, 205, 208, 210, 212, 214, 217, 219, 220, 223, 226, 227, 231, 237, 239, 241, 243, 245, 246, 247, 249, 250, 253, 258, 260, 261, 262, 264, 265, 266, 267, 270, 271, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 315, 320, 321, 322, 324, 330, 331, 336, 337, 338, 341, 344, 346, 354, 361, 362, 364, 365, 366, 372, 380, 385, 390, 391, 398], "return_std": 366, "reus": 148, "reuse_last": 146, "reveal": [362, 381], "review": 386, "revis": [385, 388], "rework": 385, "rewrit": 385, "rf": 364, "rff": 81, "rffkernel": 385, "rh": [32, 41, 42, 351, 352, 391], "ridg": 364, "right": [32, 41, 42, 138, 306, 311, 342, 345, 355, 383, 386, 388, 391, 393, 394, 400], "right_df": 306, "rihana": 387, "rim": 387, "risk": [384, 388, 390, 396], "robust": [383, 401], "robustli": 247, "role": [386, 390, 393, 400, 402], "room": [362, 390], "root": [343, 383, 386, 391], "round": [351, 357, 364, 365, 366, 367, 391], "roundtrip": [385, 397], "rout": 397, "row": [34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 97, 141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 210, 266, 270, 271, 306, 307, 322, 342, 345, 351, 352, 354, 355, 356, 357, 358, 369, 371, 372, 373, 374, 376, 390, 396, 398], "rowei": 401, "roya": 387, "royalti": 388, "rq": 82, "rqkernel": 385, "rr": 364, "ruff": [385, 386], "rule": 360, "run": [208, 212, 340, 341, 342, 343, 344, 345, 346, 361, 362, 380, 381, 383, 384, 385, 386, 390, 397, 398], "run_analyt": [341, 344], "run_full_initial_data": 342, "run_hybrid": 344, "run_impute_mod": 345, "runtim": 318, "runtimeerror": [146, 173, 174, 360, 364, 365], "s41586": [235, 305], "safe": [385, 390], "safeti": 282, "sai": 391, "said": 386, "same": [48, 148, 185, 191, 210, 245, 247, 278, 349, 361, 366, 367, 376, 384, 391, 392, 397, 401], "sampl": [10, 13, 40, 158, 170, 171, 177, 267, 328, 329, 330, 331, 342, 344, 349, 381, 383, 385, 387, 402], "sample_from_full_factori": [177, 385], "sample_inactive_paramet": 40, "sample_percentag": 395, "sample_uniform": [177, 385], "samples_full_factori": [177, 385], "samples_random": [177, 385], "sampling_algorithm": [329, 389], "sampling_fract": [13, 389], "sampling_method": [13, 389], "sampling_n_point": [13, 389], "sampling_percentag": [158, 344, 349, 354, 355, 356, 357, 358, 369, 376], "satisfi": [36, 37, 38, 185, 351, 352], "save": [324, 341, 342, 344, 345, 366, 385], "savefig": [341, 342, 344, 345], "scalar": [96, 346, 369, 393, 397], "scale": [86, 134, 135, 136, 137, 138, 172, 173, 174, 245, 367, 369, 380, 385, 389, 393], "scalekernel": 385, "scaler": [173, 245, 385], "scenario": [214, 340, 341, 342, 343, 344, 345, 346, 361, 380, 381, 391, 393, 401, 402], "scene": 393, "schema": 390, "schembl15068049": [342, 343, 345, 361], "scheme": 385, "scienc": [383, 387], "scientif": [385, 401], "scipi": [322, 362, 385], "screen": [278, 401], "script": [293, 384, 385, 392], "seaborn": [340, 341, 342, 343, 344, 345, 361, 380, 381], "seamlessli": 397, "search": [13, 21, 26, 34, 45, 48, 58, 59, 62, 104, 105, 106, 108, 109, 111, 118, 119, 122, 141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 174, 175, 177, 178, 179, 180, 181, 182, 185, 189, 208, 212, 214, 217, 219, 223, 237, 239, 241, 243, 266, 306, 345, 348, 350, 353, 354, 355, 356, 357, 358, 360, 361, 362, 369, 370, 376, 381, 385, 387, 390, 391, 392, 397, 398, 402], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 26, 104, 105, 106, 108, 109, 111, 118, 119, 122, 141, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 173, 174, 177, 180, 184, 185, 217, 219, 223, 237, 239, 241, 243, 343, 348, 360, 361, 362, 364, 365, 366, 367, 376, 377, 378, 380, 382, 383, 385, 390, 391, 392, 394, 396, 397, 398], "searchspace_json": 397, "searchspacetyp": [150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 179, 361, 362, 396], "second": [320, 322, 346, 349, 364, 365, 366, 367, 369, 378, 380, 391, 392], "secondari": [383, 392], "section": [383, 385, 386, 388, 397], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 129, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 184, 185, 190, 208, 212, 214, 217, 219, 223, 226, 233, 235, 236, 237, 239, 240, 241, 242, 243, 253, 258, 263, 280, 286, 289, 302, 311, 340, 341, 342, 343, 344, 345, 346, 351, 352, 360, 361, 364, 365, 367, 371, 374, 383, 386, 390, 392, 393, 394, 397, 398, 402], "seed": [208, 212, 326, 327, 361, 362, 383, 385], "seek": 369, "seem": [295, 318, 378], "seen": 389, "select": [6, 36, 37, 38, 60, 144, 146, 147, 148, 151, 168, 170, 217, 219, 223, 237, 239, 241, 243, 261, 330, 349, 355, 356, 374, 383, 385, 389, 390, 391, 395, 397, 399], "select_recommend": [144, 146, 147, 148], "self": [282, 336, 337, 338, 360, 361, 362, 364, 365, 386], "sell": 388, "semant": [385, 397], "sens": [50, 282, 286, 391, 394], "sent": 388, "separ": [212, 214, 247, 280, 332, 362, 385, 386, 388, 397], "seq_greedy_campaign": 344, "seq_greedy_ei_campaign": [340, 341], "seq_greedy_ei_recommend": 341, "seq_greedy_recommend": 344, "sequenc": [26, 32, 41, 42, 96, 127, 146, 177, 179, 185, 186, 187, 190, 266, 270, 271, 282, 283, 306, 322, 393, 395], "sequenti": [146, 147, 148, 158, 340, 341, 344, 365, 385, 395], "sequential_continu": [158, 349, 354, 355, 356, 357, 358, 369, 376, 395], "sequential_greedy_x": 385, "sequentialgreedyrecommend": 385, "sequentialmetarecommend": [147, 395], "sequentialstrategi": 385, "seri": [26, 36, 37, 38, 45, 105, 108, 109, 111, 119, 122, 354, 385, 391], "serial": [147, 185, 202, 267, 366, 382, 384, 385, 386, 391, 395, 402], "serializ": [383, 391, 395], "serialize_datafram": 397, "serialized_df": 204, "serializetostr": 366, "serialmixin": [19, 26, 30, 36, 73, 91, 106, 131, 144, 177, 179, 185, 217, 226, 253, 258, 311, 385], "serv": [41, 42, 214, 306, 380, 381, 390, 391, 394], "servic": 388, "session": [219, 392, 397], "set": [29, 38, 40, 48, 50, 54, 55, 122, 141, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 185, 208, 212, 230, 265, 301, 305, 308, 324, 326, 327, 342, 343, 344, 345, 347, 349, 354, 356, 360, 367, 369, 374, 383, 385, 389, 390, 391, 392, 394, 395, 396, 397, 398, 401], "set_box_aspect": 362, "set_dash": 361, "set_default_dtyp": 365, "set_random_se": 362, "set_size_inch": [341, 342, 344, 345], "set_x_pend": 21, "set_xlabel": 362, "set_xtick": 362, "set_xticklabel": 362, "set_ylabel": 362, "set_ylim": 362, "set_zlabel": 362, "setpoint": 119, "setup": [208, 361, 391, 398], "sever": [124, 142, 341, 343, 346, 349, 361, 366, 369, 381, 383, 385, 386, 391, 392, 393, 394, 396, 397, 398, 401], "shall": [146, 302, 388, 393], "shape": [177, 184, 217, 219, 223, 237, 239, 241, 243, 256, 260, 262, 396], "share": [385, 388, 401], "shield": [235, 305, 343, 383, 394], "shift": [8, 17, 380], "shifted_hartmann": 380, "ship": [332, 392, 397], "short": 386, "shortcut": [185, 396, 397], "shorten": [385, 386], "shot": 401, "should": [26, 46, 109, 122, 173, 174, 185, 200, 212, 255, 270, 271, 301, 302, 304, 305, 306, 310, 311, 312, 320, 324, 344, 354, 356, 357, 361, 366, 372, 374, 378, 383, 385, 386, 390, 391, 396, 398, 401], "show": [340, 341, 342, 343, 344, 345, 346, 348, 349, 354, 355, 356, 364, 365, 366, 367, 372, 374, 376, 377, 378, 380, 381, 391, 396], "showcas": 395, "shown": [361, 381, 385], "shrink": 362, "side": [32, 41, 42, 261, 391], "sigma": [135, 136, 137, 138, 260, 369, 387], "signal": [57, 393], "signatur": [67, 250, 280, 282, 362, 364, 365, 385, 386, 391, 397], "significantli": [185, 380, 381], "silenc": 386, "silent": [385, 391], "similar": [147, 384, 391, 392, 394, 395, 396, 397, 401], "similarli": [344, 372, 394], "simpl": [16, 274, 343, 360, 361, 372, 383, 385, 395, 398, 400, 401], "simpler": [386, 397], "simplest": 396, "simplex": [185, 402], "simplex_paramet": [185, 396], "simpli": [286, 360, 361, 386, 391, 394, 395, 396, 397, 400, 401], "simplic": 282, "simplifi": [341, 386], "simul": [63, 289, 302, 356, 357, 362, 365, 383, 385, 401, 402], "simulate_experi": [212, 214, 398], "simulate_scenario": [214, 340, 341, 342, 343, 344, 345, 346, 361, 380, 381, 398], "simulate_transfer_learn": [380, 398], "simultan": 393, "sinc": [50, 179, 218, 236, 240, 242, 282, 342, 351, 352, 357, 367, 371, 373, 376, 377, 378, 380, 386, 389, 390, 391, 392, 393, 394, 396, 397, 398, 401], "singer": 401, "singl": [26, 36, 46, 88, 101, 177, 179, 185, 208, 253, 258, 311, 319, 330, 334, 340, 341, 342, 343, 344, 345, 355, 361, 362, 369, 372, 377, 378, 380, 381, 383, 385, 391, 393, 394, 396, 401, 402], "singledispatch": 313, "singletargetobject": [26, 253, 258, 340, 341, 342, 343, 344, 345, 348, 349, 351, 352, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 367, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 385, 402], "site": [377, 378], "situat": [354, 356, 357, 384, 386, 391, 393, 394, 397, 401], "size": [71, 72, 73, 76, 78, 80, 81, 82, 146, 148, 179, 184, 185, 267, 315, 362, 366, 371, 372, 373, 374, 380, 381, 390, 397, 398, 401], "sk": 366, "skeleton": 385, "skicit": 385, "skin": 398, "skip": [182, 188, 385, 390], "skl2onnx": 366, "sklearn": [168, 318, 363, 366, 382], "sklearnclusteringrecommend": [165, 166, 167, 385], "slightli": [206, 343, 398], "slot": 385, "slow": [354, 356, 358, 396], "slowest": 385, "small": [41, 42, 268, 272, 351, 380, 381, 385, 389, 394], "smaller": [26, 390, 401], "smallest": [177, 396], "smile": [122, 291, 292, 293, 294, 295, 296, 297, 383, 394], "smiles_list": [294, 295, 296, 297], "smoke": 385, "smoke_test": [324, 340, 341, 342, 343, 344, 345, 346, 352, 354, 355, 357, 358, 361, 362, 380, 381], "smooth": [76, 78, 138], "smoothedboxprior": 385, "smoother": 76, "sn": [340, 341, 342, 343, 344, 345, 361, 380, 381], "so": [208, 218, 340, 345, 361, 371, 373, 374, 383, 384, 391, 392, 393, 394, 395, 397, 398, 400], "softwar": [383, 388], "sola": 387, "sole": 388, "solut": [390, 396, 397, 401], "solv": [218, 355, 356], "solv1": 357, "solv1_mordred_aatsc1v": 357, "solv1_mordred_nhetero": 357, "solv2": 357, "solv3": 357, "solv_mordred_natom": 355, "solv_rdkit_maxabsestateindex": 356, "solv_rdkit_maxpartialcharg": 356, "solvent": [342, 343, 345, 348, 349, 354, 355, 356, 357, 358, 361, 364, 365, 367, 377, 378, 383, 391, 394], "solvent1": 357, "solvent2": 357, "solvent3": 357, "solvent_1": 391, "solvent_2": 391, "solvent_3": 391, "solvent_encoding1": 391, "solvent_encoding2": 391, "solvent_mordred_enc": 391, "solvent_rdkit_enc": 391, "solvent_rdkit_maxabsestateindex": [354, 358], "solvent_rdkit_maxpartialcharg": [354, 358], "solver": 398, "some": [46, 306, 318, 340, 341, 342, 343, 344, 345, 346, 349, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 367, 371, 372, 373, 374, 376, 381, 391, 392, 394, 395, 397, 398, 399], "someth": 378, "sometim": 391, "somewhat": 392, "somewher": 390, "soon": [383, 390, 395], "sophist": [385, 397], "sourabh": 387, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 91, 92, 94, 96, 97, 99, 101, 104, 105, 106, 108, 109, 111, 113, 114, 115, 116, 118, 119, 122, 124, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 150, 153, 156, 158, 160, 163, 165, 166, 167, 168, 170, 171, 173, 174, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 202, 204, 205, 208, 210, 212, 214, 217, 219, 220, 223, 225, 226, 227, 230, 231, 233, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 253, 255, 256, 258, 260, 261, 262, 264, 265, 266, 267, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 315, 320, 321, 322, 324, 326, 327, 329, 330, 331, 383, 385, 388], "space": [10, 13, 20, 21, 26, 32, 34, 41, 42, 45, 48, 58, 59, 62, 104, 105, 106, 108, 109, 111, 118, 119, 122, 141, 149, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 174, 175, 177, 178, 179, 180, 181, 182, 185, 188, 189, 208, 212, 214, 217, 219, 223, 237, 239, 241, 243, 266, 306, 341, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 369, 370, 371, 373, 376, 381, 382, 385, 387, 390, 391, 392, 394, 397, 398, 402], "span": [141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 185, 266, 360], "speak": 401, "spec": [182, 188, 199], "special": [148, 383, 384, 388, 389, 401], "specif": [69, 124, 129, 168, 179, 182, 195, 212, 220, 245, 247, 275, 357, 360, 361, 373, 383, 386, 390, 391, 394, 395, 397, 398, 399, 400, 401], "specifi": [26, 29, 46, 66, 111, 122, 124, 141, 148, 177, 179, 185, 190, 198, 199, 208, 210, 212, 260, 261, 262, 270, 281, 294, 301, 331, 343, 344, 349, 351, 366, 367, 369, 372, 377, 378, 380, 383, 385, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401], "speed": [185, 354, 356, 358, 380, 381, 392, 396], "speed_fast": 396, "speed_norm": 396, "speed_slow": 396, "speedup": 401, "spell": 386, "spellcheck": 385, "sphinx": [236, 240, 242, 385, 386], "split": 150, "spread": 400, "sqrt": 391, "squar": [341, 344, 346, 372, 391], "squash": 386, "stabil": [385, 392], "stabl": [69, 129], "stack": 364, "stackingregressor": 364, "stackingregressorsurrog": 364, "stage": [390, 391, 397], "stand": 385, "standard": [6, 173, 247, 294, 366, 385, 394], "start": [208, 360, 361, 362, 384, 385, 394, 395, 397, 398, 401], "startup": 385, "stat": [264, 362], "state": [148, 344, 361, 372, 385, 388, 390], "statement": [307, 373, 383, 388], "static": [179, 185, 383, 386, 401], "statist": [267, 381, 383, 392], "statu": 390, "std_threshold": 247, "stem": 401, "step": [182, 188, 208, 365, 383, 386, 390, 393, 397, 399], "sterl": 387, "steven": 343, "still": [124, 185, 301, 361, 391, 392, 394, 401], "stop": [359, 382, 385, 386], "stop_on_pi": 361, "stoppag": 388, "storag": [390, 392, 397], "store": [21, 106, 245, 247, 253, 341, 362, 383, 385, 390, 396], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 23, 24, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 97, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 124, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 156, 158, 165, 166, 167, 168, 173, 174, 177, 179, 184, 185, 198, 202, 212, 214, 217, 219, 223, 226, 237, 239, 241, 243, 253, 258, 260, 261, 262, 264, 267, 270, 271, 275, 280, 281, 287, 291, 292, 293, 294, 295, 296, 297, 299, 301, 304, 305, 307, 311, 315, 321, 324, 367, 377, 378, 380, 381], "straightforward": [400, 401], "strategi": [13, 158, 179, 206, 385], "stream": [279, 392], "streamingsequentialmetarecommend": [146, 395], "streamingsequentialstrategi": 385, "streamlin": 386, "streamlit": [383, 385], "strict": 280, "strictli": [367, 377, 378], "stride": 351, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 121, 122, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 177, 179, 185, 202, 217, 219, 223, 226, 237, 239, 241, 243, 253, 258, 287, 292, 293, 294, 295, 296, 297, 299, 304, 311, 366, 376, 385, 390, 391, 394, 400, 402], "strip": [208, 345, 398], "strong": 385, "strongli": 390, "strtobool": 392, "structur": [94, 198, 383, 384, 385, 390, 394, 397], "studi": [142, 383, 395], "style": [88, 380, 385, 386], "sub": [168, 385, 397], "subclass": [66, 173, 174, 198, 275, 277, 286, 385, 386, 395, 397], "subfold": 392, "subject": 388, "sublicens": 388, "submiss": [385, 388], "submit": [21, 264, 266, 383, 386, 388], "submodul": 398, "subpackag": [385, 386], "subselectioncondit": [355, 356, 385, 402], "subsequ": [179, 185, 212, 293, 388, 390, 397], "subset": [122, 179, 190, 278, 330, 390, 391], "subspac": [21, 150, 158, 176, 177, 179, 181, 183, 185, 344, 351, 374, 385, 395, 397, 402], "subspace_json": 397, "subspacecontinu": [26, 104, 118, 179, 181, 385, 396], "subspacediscret": [26, 105, 108, 109, 111, 119, 122, 179, 181, 184, 385, 396, 397], "substanc": [116, 122, 343, 348, 385, 391, 394, 401], "substance_12": 391, "substance_3": 391, "substance_43": 391, "substance_data": 385, "substance_encod": 343, "substanceencod": [122, 354, 355, 356, 357, 358], "substanceparamet": [342, 343, 345, 348, 349, 354, 355, 356, 357, 358, 361, 364, 365, 367, 377, 378, 383, 385, 391, 392, 396, 402], "substanti": 122, "substrat": 401, "subtyp": 397, "success": [330, 397], "suffic": 386, "suffici": [361, 396, 397], "suit": 386, "suitabl": [168, 185, 208, 287, 386, 389, 390, 394, 398, 399, 401], "sum": [52, 84, 185, 341, 344, 346, 353, 354, 355, 356, 357, 361, 372, 382, 391, 393, 396], "sum_": [391, 393], "sum_constraint": 357, "sum_constraint_1": 358, "sum_constraint_2": 358, "sum_i": [41, 42], "sum_of_squar": [341, 344, 346, 372], "sum_toler": 357, "summar": [29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 104, 105, 106, 108, 109, 111, 118, 119, 122, 253, 258], "summari": [29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 104, 105, 106, 108, 109, 111, 118, 119, 122, 253, 258, 385, 386], "super": 365, "superior": 389, "supersed": 388, "support": [10, 147, 214, 217, 219, 223, 237, 239, 241, 243, 318, 361, 362, 364, 365, 366, 385, 386, 388, 391, 392, 394, 395, 396, 398, 399], "supports_transfer_learn": [217, 219, 223, 237, 239, 241, 243, 399], "suppos": [266, 391], "sure": [383, 386, 398], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 156, 158, 165, 166, 167, 168, 219, 223, 225, 226, 230, 233, 235, 237, 239, 241, 243, 362, 382, 383, 385, 387, 391, 394, 395, 401, 402], "surrogate_model": [156, 158, 349, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 367, 369, 376, 377, 378], "svg": 324, "switch": [46, 145, 147, 148, 247, 355, 383, 385, 391, 395], "switch1": 355, "switch1_on": 355, "switch2": 355, "switch_1": 391, "switch_2": 391, "switch_aft": [148, 349, 354, 355, 356, 357, 358, 369, 376, 377, 378, 395], "sy": 384, "symmetri": 391, "syntax": [383, 385], "synthet": [288, 289, 351, 352, 362, 380, 381], "synthetictestfunct": 289, "system": [343, 383, 388, 392, 398, 401], "t": [217, 219, 220, 223, 237, 239, 241, 243, 246, 287, 342, 343, 345, 348, 349, 361, 362, 380, 381, 397], "t1": 397, "t2": 397, "t3": 397, "t_1": 393, "t_2": 393, "t_3": 393, "t_i": 393, "tabl": [307, 385, 391], "tag": [383, 385, 397], "tailor": 390, "take": [76, 105, 119, 124, 185, 233, 360, 385, 390, 391, 393, 394, 395, 401], "taken": [146, 361, 390, 393], "tantamount": 389, "target": [26, 88, 91, 92, 96, 100, 101, 141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 173, 185, 206, 208, 209, 210, 220, 239, 247, 255, 256, 258, 282, 301, 320, 321, 325, 339, 340, 341, 342, 343, 344, 345, 348, 349, 351, 352, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 367, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 385, 390, 392, 397, 398, 402], "target_1": [346, 355, 356, 357, 358, 369, 393, 400], "target_1_cumbest": 346, "target_1_iterbest": 346, "target_1_measur": 346, "target_2": [346, 369, 393, 400], "target_2_cumbest": 346, "target_2_iterbest": 346, "target_2_measur": 346, "target_3": [369, 393], "target_3a": 400, "target_3b": 400, "target_cumbest": [340, 341, 344, 380, 381], "target_max": 390, "target_transform": 369, "target_valu": [351, 352, 362, 371, 372, 373, 374], "targetmod": [258, 397, 400], "targetnam": 208, "targettransform": [258, 400], "task": [109, 179, 214, 217, 219, 223, 237, 239, 241, 243, 253, 258, 385, 390, 395, 397, 398, 401], "task_idx": [179, 385], "task_param": [380, 381, 398], "task_paramet": 397, "task_parameter_json": 397, "task_parameter_reconstruct": 397, "taskparamet": [192, 380, 381, 385, 397, 398, 402], "technic": [185, 398, 401], "techniqu": [168, 395], "telemetri": [385, 387, 402], "tell": 265, "temp": [354, 356, 387], "temp_c": [342, 343, 345, 361], "temperatur": [342, 345, 348, 349, 354, 356, 360, 364, 365, 366, 367, 376, 391, 394, 396, 401], "temperature_resolut": 354, "temporari": [87, 93, 159, 179, 245, 247, 327, 361, 385, 392, 397], "temporarili": 385, "tempt": 401, "tend": 362, "tensor": [21, 32, 41, 42, 173, 174, 179, 185, 217, 219, 223, 237, 239, 241, 243, 246, 308, 311, 333, 364, 365, 385], "term": [79, 206, 361, 386, 388, 390, 396, 397, 398, 401], "termin": [361, 362, 384, 388], "terminologi": 402, "tert": [342, 343, 345, 348, 349, 361], "test": [185, 208, 219, 288, 289, 292, 301, 380, 381, 383, 384, 385, 386, 390], "test_funct": [289, 340, 351, 352, 362, 371, 372, 373, 374, 380, 381], "test_scenario": [342, 345], "testabl": [63, 208], "testfunct": [340, 351, 352, 371, 373, 374], "testfunctionclass": [340, 351, 352, 371, 373, 374], "text": [366, 388, 391, 392, 393], "th": [271, 391], "than": [26, 55, 62, 119, 146, 147, 148, 177, 179, 192, 271, 286, 331, 343, 356, 357, 361, 389, 391, 392, 394, 397], "thei": [124, 142, 151, 190, 246, 261, 304, 349, 358, 361, 385, 386, 390, 391, 394, 395, 396, 397, 400, 401], "them": [34, 233, 245, 324, 344, 349, 357, 383, 384, 386, 391, 392, 394, 395, 397, 401], "theme": [324, 385], "theori": 388, "therebi": 185, "therefor": [148, 349, 384, 390, 397, 401], "thereof": 388, "thf": 391, "thi": [10, 13, 26, 29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 104, 105, 106, 108, 109, 111, 118, 119, 122, 124, 146, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 179, 185, 206, 210, 212, 214, 218, 233, 236, 240, 242, 246, 267, 270, 282, 283, 286, 293, 301, 302, 303, 305, 306, 307, 324, 340, 360, 361, 362, 364, 365, 366, 367, 372, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401], "think": 394, "third": [369, 388], "those": [124, 148, 150, 206, 330, 349, 384, 388, 391, 398], "though": 401, "three": [343, 344, 357, 369, 383, 390, 391, 393, 395, 396, 401], "threshold": [38, 111, 122, 247, 305, 351, 356, 357, 358, 361, 385, 391, 394], "thresholdcondit": [51, 52, 351, 356, 357, 358, 402], "through": [179, 260, 270, 301, 365, 367, 369, 371, 372, 373, 374, 385, 386, 388, 391, 397, 402], "throughout": 148, "throw": [293, 391, 394], "thrown": [210, 345, 361, 377, 384, 393, 398], "thu": [158, 236, 240, 242, 282, 340, 341, 342, 343, 344, 346, 349, 351, 352, 354, 355, 356, 357, 358, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 384, 386, 390, 392, 394, 395, 397, 398, 401], "tick": 362, "time": [10, 267, 331, 352, 360, 383, 385, 390, 391, 394, 397], "timeout": [385, 392], "timer": 360, "titl": 388, "tl": 380, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 32, 41, 42, 217, 219, 223, 237, 239, 241, 243, 361, 362, 385], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 177, 179, 185, 202, 217, 219, 223, 226, 237, 239, 241, 243, 253, 258, 311], "to_factori": [71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86], "to_fram": 357, "to_gpytorch": [71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 131, 133, 134, 135, 136, 137, 138, 385], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 177, 179, 185, 202, 217, 219, 223, 226, 237, 239, 241, 243, 253, 258, 311, 364, 365, 366, 367, 376, 390, 397], "to_list": [351, 352, 371, 372, 373, 374], "to_ndarrai": 311, "to_object": [253, 258, 393], "to_polar": [36, 37, 38], "to_searchspac": [104, 105, 106, 108, 109, 111, 118, 119, 122, 177, 185, 385], "to_subspac": [104, 105, 108, 109, 111, 118, 119, 122, 385], "to_tensor": [311, 361, 362, 366], "to_tupl": 311, "togeth": [34, 271, 349, 374, 383], "toler": [26, 38, 41, 42, 119, 185, 266, 306, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 358, 361, 364, 365, 366, 367, 369, 373, 374, 376, 377, 378, 383, 385, 391, 394], "tolist": 351, "toluen": 394, "toml": 385, "too": [351, 401], "tool": [236, 240, 242, 290, 385, 397], "toolbox": 383, "top": [385, 386], "topic": 390, "torch": [71, 72, 73, 76, 78, 80, 81, 82, 311, 361, 362, 363, 364, 365, 366, 382, 385], "toronto": 387, "tort": 388, "total": [148, 330, 396], "toward": [8, 17, 301, 391], "tox": [377, 378, 383, 385, 386], "tracebackexcept": 384, "track": [141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 177, 185, 361, 388, 396], "trade": [8, 17, 388], "trademark": 388, "tradit": [343, 383], "train": [141, 146, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 173, 174, 214, 217, 218, 219, 223, 237, 239, 241, 243, 247, 363, 365, 380, 381, 385, 398], "train_i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 217, 219, 223, 237, 239, 241, 243, 361, 362, 364, 365, 366], "train_x": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 217, 219, 223, 237, 239, 241, 243, 361, 362, 364, 365, 366], "training_funct": 381, "trajectori": [206, 361, 398], "transfer": [213, 214, 217, 219, 223, 237, 239, 241, 243, 380, 382, 383, 385, 388, 394, 399, 402], "transform": [91, 96, 101, 105, 106, 108, 109, 111, 119, 122, 173, 174, 177, 179, 185, 190, 245, 253, 256, 258, 308, 311, 312, 346, 354, 355, 356, 357, 358, 361, 362, 376, 385, 388, 394, 400], "transform_rep_exp2comp": 385, "translat": [34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 373, 385, 388, 394], "transmiss": 397, "transmit": 267, "treasur": 402, "treat": [122, 343, 383, 391, 394, 400], "tremend": 343, "trend": 401, "tri": 396, "triangl": 262, "triangular": [256, 262, 369, 400], "tricyclohexylphosphin": [342, 343, 345, 361], "trigger": [146, 270, 361, 367, 385, 386, 393, 397], "trivial": [226, 239, 393, 394], "true": [6, 12, 14, 26, 29, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 104, 105, 106, 108, 109, 111, 118, 119, 122, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 179, 185, 220, 223, 261, 266, 276, 277, 280, 286, 287, 292, 296, 297, 306, 343, 349, 351, 352, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 367, 369, 376, 377, 378, 380, 381, 385, 390, 391, 392, 394, 397], "truncat": [383, 392], "trust": [366, 392], "truth": 287, "try": [301, 342, 343, 345, 361, 364, 365, 366, 367, 378, 384, 385], "tune": 383, "tupl": [26, 32, 37, 41, 42, 71, 72, 73, 76, 78, 80, 81, 82, 84, 85, 91, 96, 101, 105, 108, 109, 111, 119, 122, 173, 174, 177, 179, 184, 185, 217, 219, 223, 237, 239, 241, 243, 246, 270, 280, 283, 301, 311, 315, 344, 346, 364, 365, 372, 380, 398], "turn": [177, 185, 289, 315, 383, 384, 385, 391, 392], "twice": [357, 393], "two": [29, 48, 54, 55, 97, 148, 158, 206, 271, 274, 320, 330, 342, 344, 345, 346, 349, 360, 369, 372, 374, 380, 381, 383, 385, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400], "twophasemetarecommend": [341, 342, 344, 345, 349, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 367, 369, 374, 376, 377, 378, 383, 395], "twophasestrategi": 385, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 23, 24, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 92, 94, 96, 97, 101, 104, 105, 106, 108, 109, 111, 118, 119, 121, 122, 124, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 150, 153, 156, 158, 160, 163, 165, 166, 167, 168, 170, 171, 173, 174, 177, 179, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 202, 204, 205, 208, 210, 212, 214, 217, 219, 220, 223, 226, 227, 231, 237, 239, 241, 243, 245, 246, 247, 249, 250, 253, 258, 260, 261, 262, 264, 265, 266, 267, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 306, 307, 308, 311, 312, 313, 315, 317, 318, 320, 321, 322, 324, 330, 331, 333, 336, 337, 338, 343, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 369, 376, 377, 378, 383, 385, 386, 388, 389, 393, 394, 395, 396, 401, 402], "typeerror": [26, 208, 219, 282, 301, 331, 361, 362], "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 101, 104, 105, 106, 108, 109, 111, 118, 119, 122, 124, 131, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 177, 179, 185, 190, 198, 199, 202, 217, 219, 223, 226, 237, 239, 241, 243, 253, 258, 277, 278, 279, 311], "typic": [13, 41, 42, 282, 343, 383, 390, 394, 397, 398], "typo": [385, 386], "u": [342, 343, 345, 360, 362, 381, 383, 389, 391, 393], "ucb": [8, 349, 385, 389, 397], "ultim": 386, "ultra": [377, 378], "un": [173, 174, 385], "unabl": 366, "unavail": 385, "unbound": [311, 360], "uncaught": 385, "uncertainti": [13, 349, 402], "uncharacter": 401, "uncorrel": [305, 401], "under": [34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 190, 267, 357, 358, 362, 383, 384, 388, 394], "underflow": 64, "underli": [26, 48, 361, 383, 390, 395, 397], "underscor": 385, "understand": 401, "undesir": [34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 68, 391, 394], "undo": 384, "unequ": 358, "unevenli": 394, "unfortun": 401, "unhandl": 385, "uniform": [177, 302, 385], "uniformli": 330, "uniniti": 286, "uninstal": [65, 383], "unintend": [68, 282, 385], "union": [97, 208, 212, 260, 261, 262, 321, 374, 388, 396], "uniqu": [49, 124, 357, 385, 394], "unit": [173, 184, 315], "unknown": [330, 385, 399, 401], "unless": [383, 386, 388, 392, 394, 397], "unlik": [12, 14, 396], "unlock": 402, "unmaintain": [385, 394], "unmatch": 280, "unmatchedattributeerror": 280, "unmeasur": [208, 345, 398], "unnecessari": [385, 390], "unpromis": 361, "unreach": 385, "unrealist": 398, "unrecogn": 301, "unrestrict": 282, "unspecifi": [385, 397], "unsqueez": [361, 362, 365], "unstructur": [200, 397], "unstructure_bas": 198, "unsupport": [177, 210], "until": [146, 208, 383, 398], "untransform": [173, 174, 245], "unusedobjectwarn": [361, 385], "unveil": 381, "unwant": 34, "unweight": 364, "up": [41, 42, 185, 208, 210, 342, 343, 345, 347, 351, 352, 354, 356, 357, 360, 362, 374, 380, 381, 383, 389, 391], "updat": [343, 348, 385, 386], "upgrad": 385, "upon": [150, 226, 384, 385, 386, 391, 396, 399, 401], "upper": [8, 17, 138, 179, 185, 260, 261, 262, 311, 349, 362, 369, 380, 381, 385, 400], "upper_bound": [354, 355, 356, 357, 358, 369, 376, 396], "upperconfidencebound": [389, 397], "upstream": 386, "url": [392, 401], "us": [13, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 59, 76, 96, 97, 111, 119, 122, 124, 141, 146, 147, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 173, 174, 177, 179, 185, 186, 187, 199, 208, 210, 212, 217, 219, 223, 237, 239, 241, 243, 245, 256, 266, 267, 273, 282, 283, 293, 301, 302, 306, 313, 317, 318, 324, 330, 333, 351, 352, 359, 360, 361, 362, 363, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 400, 401, 402], "usa": 387, "usabl": [286, 384, 385, 394, 397], "usag": [314, 383, 385, 391, 392, 395], "user": [45, 46, 57, 60, 68, 111, 114, 185, 250, 264, 302, 306, 348, 349, 354, 369, 377, 378, 383, 385, 386, 390, 391, 392, 393, 394, 396, 397, 398, 401], "userguid": 263, "usernam": [264, 385, 392], "usort": 385, "usual": [208, 342, 343, 345, 377, 384, 394], "util": [158, 177, 185, 266, 273, 274, 311, 329, 340, 343, 348, 349, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 369, 371, 373, 374, 377, 380, 381, 383, 385, 389, 393, 394, 395, 397, 399, 401], "uv": 385, "v": 401, "val": [94, 287, 380], "val_from_param1": 50, "val_from_param2": 50, "val_loss": 367, "valid": [26, 29, 30, 31, 32, 33, 34, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 124, 179, 182, 185, 188, 219, 292, 295, 306, 354, 375, 377, 382, 384, 385, 386, 390, 391], "validate_compat": 219, "validate_config": [26, 378, 385, 390], "valu": [6, 8, 17, 21, 26, 29, 32, 36, 37, 38, 41, 42, 46, 48, 75, 76, 77, 78, 79, 80, 81, 82, 86, 91, 96, 97, 101, 105, 108, 109, 111, 113, 114, 116, 119, 122, 124, 126, 127, 128, 165, 166, 167, 168, 173, 174, 179, 185, 186, 187, 190, 206, 208, 210, 212, 220, 239, 255, 260, 261, 262, 267, 270, 278, 280, 287, 299, 301, 302, 304, 306, 307, 311, 313, 320, 321, 322, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 385, 386, 389, 390, 391, 392, 393, 394, 398, 400, 401, 402], "valuabl": 395, "valueerror": [13, 26, 54, 55, 97, 124, 127, 128, 177, 179, 185, 190, 191, 208, 210, 217, 219, 223, 237, 239, 241, 243, 245, 247, 250, 271, 280, 285, 287, 295, 299, 301, 302, 306, 330, 331, 344, 367, 374, 384], "var": [364, 365, 402], "vari": [26, 185, 343, 393], "variabl": [29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 104, 105, 106, 108, 109, 111, 118, 119, 122, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 173, 174, 217, 219, 223, 237, 239, 241, 243, 253, 265, 267, 319, 324, 334, 373, 383, 385, 386, 391, 394, 395, 397], "varianc": [8, 13, 17, 75, 173, 174, 239, 303, 364, 365, 385, 389], "variance_initial_valu": 75, "variance_prior": 75, "variant": [349, 380, 401], "varieti": [373, 386, 397, 398], "variou": [311, 357, 370, 385, 395], "varucb": 385, "vector": [29, 366, 387], "vendor": 394, "verbal": 388, "verbos": 367, "veri": [354, 356, 369, 392, 394], "verifi": [286, 344, 351, 354, 355, 356, 357, 358, 374, 376, 383, 386], "versa": [380, 401], "versatil": 395, "version": [179, 264, 289, 318, 377, 378, 380, 381, 383, 384, 385, 386, 388, 397], "vert": 362, "via": [13, 25, 26, 148, 158, 170, 266, 275, 282, 301, 306, 345, 351, 352, 360, 361, 366, 371, 373, 383, 385, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401], "via_init": 397, "via_json": 397, "viabl": [62, 369], "vice": [380, 401], "view": [177, 185, 362, 396], "view_init": 362, "violat": [34, 44, 45, 46, 47, 48, 49, 50, 51, 52], "viridi": 362, "virtual": 386, "visibl": 385, "visual": [343, 380, 381, 400], "volum": 401, "vpn": [383, 392], "vulner": [385, 386], "w_i": 393, "wa": [13, 65, 68, 124, 148, 185, 299, 301, 331, 343, 385, 386, 388, 392, 394, 397, 401], "wai": [179, 360, 370, 372, 380, 383, 392, 394, 396, 397, 398, 400, 401], "wall": 10, "want": [42, 45, 344, 349, 354, 357, 372, 374, 381, 383, 386, 391, 392, 394, 395, 397, 400], "warn": [56, 283, 343, 354, 356, 358, 361, 373, 374, 377, 378, 385, 386], "warranti": [383, 388], "was_measur": [354, 355, 356, 357, 358, 369, 376, 396], "was_recommend": [354, 355, 356, 357, 358, 369, 376, 396], "watch": 360, "water": [354, 355, 356, 357, 358, 391, 394], "we": [21, 206, 236, 240, 242, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 386, 389, 390, 391, 393, 394, 396, 397, 400, 401, 402], "web": 386, "weber": 387, "weight": [88, 96, 97, 322, 346, 369, 393, 397], "weight_kdalton": 394, "welcom": 386, "well": [264, 324, 349, 361, 386, 390, 391, 394, 398], "were": [150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 185, 301, 345, 349, 381, 384, 391, 392, 394, 396], "what": [124, 146, 179, 206, 301, 366, 369, 378, 386, 389, 390, 394, 401, 402], "whatsnew": 274, "when": [26, 46, 119, 146, 148, 156, 158, 185, 217, 219, 223, 237, 239, 241, 243, 250, 280, 282, 286, 301, 330, 331, 346, 349, 354, 355, 358, 360, 367, 369, 383, 385, 386, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401], "whenev": [21, 146, 301, 397], "where": [21, 29, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 141, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 206, 214, 217, 219, 223, 237, 239, 241, 243, 270, 301, 342, 343, 345, 349, 354, 356, 357, 383, 384, 385, 386, 388, 390, 391, 393, 394, 396, 397, 398, 400, 401], "wherea": 397, "wherev": 388, "whether": [21, 29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 104, 105, 106, 108, 109, 111, 118, 119, 122, 158, 177, 185, 217, 219, 223, 237, 239, 241, 243, 265, 294, 302, 306, 311, 344, 385, 388, 390, 392, 395, 400], "which": [13, 26, 36, 37, 38, 68, 109, 124, 141, 142, 148, 150, 153, 156, 158, 163, 165, 166, 167, 168, 170, 171, 179, 185, 212, 214, 217, 219, 223, 237, 239, 241, 243, 247, 266, 267, 282, 286, 301, 302, 305, 306, 320, 321, 324, 343, 344, 349, 352, 357, 360, 361, 373, 374, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 394, 396, 397, 398, 400, 401], "while": [179, 182, 188, 361, 369, 381, 384, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401], "whilst": 301, "whole": 388, "whom": 388, "whose": [97, 124, 179, 210, 278, 280, 330, 360, 386], "wide": 398, "wider": 400, "william": 401, "willing": 390, "window": [385, 392], "wise": 322, "wish": 397, "within": [26, 104, 105, 106, 108, 109, 111, 118, 119, 122, 266, 306, 388, 391, 394, 399, 401, 402], "without": [147, 377, 378, 380, 381, 383, 385, 388, 390, 391, 392, 394, 401], "work": [21, 244, 270, 357, 361, 369, 372, 376, 378, 383, 385, 386, 387, 388, 391, 392, 393, 395, 397], "workaround": [384, 385], "workflow": [364, 365, 366, 390, 397], "world": [383, 390], "worldwid": 388, "worst": [208, 210, 212, 345, 398], "would": [49, 64, 124, 206, 208, 214, 218, 360, 383, 386, 391, 392, 394, 395, 396, 397, 398, 401], "wrap": [71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 220, 223, 227, 246, 282, 289, 351, 352, 371, 373, 383, 385, 393], "wrapped_funct": [340, 351, 352, 362, 371, 373, 374], "wrapper": [1, 20, 212, 214, 219, 283, 288, 351, 352, 383, 395], "write": [383, 384, 388, 397], "written": [371, 373, 374, 386, 388], "wrong": [378, 385], "www": [383, 388], "x": [21, 92, 173, 174, 181, 208, 210, 227, 283, 320, 340, 341, 342, 343, 344, 345, 346, 354, 355, 356, 357, 358, 361, 362, 369, 372, 376, 380, 381, 383, 385, 396], "x0": 396, "x1": 396, "x2": 396, "x_": [340, 341, 344, 346, 351, 352, 371, 372, 373, 374], "x_1": [351, 352, 371, 372, 373, 374, 391], "x_2": [351, 352, 371, 372, 373, 374, 391], "x_3": [351, 352, 371, 372, 373, 374, 391], "x_4": [351, 352, 371, 372, 373, 374], "x_5": 374, "x_6": 374, "x_i": [41, 42, 391], "x_pend": 21, "xlsx": [342, 343, 345, 361], "xpho": [342, 343, 345, 361], "xylen": [342, 343, 345, 348, 349, 361], "y": [173, 174, 235, 287, 305, 320, 340, 341, 342, 343, 344, 345, 346, 361, 362, 366, 372, 380, 381, 383, 401], "ye": 287, "year": 401, "yet": [21, 385, 395], "yield": [6, 76, 342, 343, 345, 348, 349, 354, 361, 364, 365, 366, 367, 374, 376, 377, 378, 383, 389, 393, 397], "yield_cumbest": [342, 343, 345, 361], "yml": 385, "you": [42, 45, 343, 349, 351, 360, 367, 373, 374, 377, 383, 384, 386, 388, 389, 390, 391, 392, 394, 395, 396, 397, 399, 400, 401], "your": [343, 344, 360, 374, 383, 384, 385, 386, 388, 390, 392, 394, 397, 399, 400, 401], "your_branch_nam": 386, "z": [362, 383], "zdir": 362, "zero": [8, 17, 303, 401], "zero_grad": 365, "zip": [362, 365], "\u00b5fmt": 385, "\u0161o\u0161i\u0107": [383, 387]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedImprovement", "qProbabilityOfImprovement", "qSimpleRegret", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousLinearConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearEqualityConstraint", "ContinuousLinearInequalityConstraint", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objective", "baybe.objective.Objective", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.deprecation", "baybe.objectives.deprecation.structure_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.single", "SingleTargetObjective", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.scaler", "DefaultScaler", "Scaler", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.base", "Surrogate", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.autoscale", "baybe.surrogates.utils.batchify", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "classproperty", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.botorch_wrapper", "baybe.utils.botorch_wrapper.botorch_function_wrapper", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.is_valid_smiles", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fp_features", "baybe.utils.chemistry.smiles_to_molecules", "baybe.utils.chemistry.smiles_to_mordred_features", "baybe.utils.chemistry.smiles_to_rdkit_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_results", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.plotting", "baybe.utils.plotting.create_example_plots", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "Backtesting", "Simulation loop using a BoTorch test function", "Example for full simulation loop using a custom analytical test function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a custom analytical test function in a hybrid", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Example for full simulation loop using the multi target mode for custom analytic", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using a mixture use case in a discrete searchspace", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom architecture using <code class=\"docutils literal notranslate\"><span class=\"pre\">sklearn</span></code>", "Example for surrogate model with a custom architecture using <code class=\"docutils literal notranslate\"><span class=\"pre\">pytorch</span></code>", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Multi Target", "Example for using the multi target mode for the objective", "Searchspaces", "Example for using a synthetic BoTorch test function in a continuous searchspace", "Example for using a custom BoTorch test function in a continuous searchspace", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "PyCharm vs. <code class=\"docutils literal notranslate\"><span class=\"pre\">exceptiongroup</span></code>", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Campaigns", "Constraints", "Environment Variables", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User guide"], "titleterms": {"": 386, "0": 385, "01": 385, "02": 385, "03": 385, "04": 385, "05": 385, "06": 385, "07": 385, "08": 385, "09": 385, "1": 385, "10": 385, "11": 385, "12": 385, "13": 385, "14": 385, "15": 385, "16": 385, "17": 385, "19": 385, "2": 385, "2022": 385, "2023": 385, "2024": 385, "21": 385, "23": 385, "24": 385, "27": 385, "28": 385, "29": 385, "3": 385, "4": 385, "5": 385, "6": 385, "7": 385, "8": 385, "9": 385, "A": 383, "The": [377, 383, 384, 397, 398, 401], "abbrevi": 397, "acqf": 2, "acquisit": [1, 2, 18, 20, 22, 23, 24, 349], "acquisitionfunct": 19, "action": 401, "activ": 389, "ad": [348, 385, 390, 401], "add_fake_result": 301, "add_parameter_nois": 302, "addendum": 369, "addit": 395, "additivekernel": 84, "advanc": 383, "altern": 397, "analyt": [341, 344, 346], "architectur": [364, 365], "assembli": 397, "attr": 386, "augment": [269, 270, 271], "automat": 397, "autoscal": 245, "avail": [349, 399], "avoid": 384, "back": 383, "backtest": [339, 380], "base": [18, 28, 70, 90, 92, 103, 130, 140, 143, 152, 155, 162, 216, 252, 342, 343, 345], "basic": [74, 132, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 347, 348, 390, 392, 397], "basickernel": 71, "batch": 390, "batchifi": 246, "bayb": [0, 1, 2, 18, 20, 22, 23, 24, 25, 27, 28, 35, 39, 43, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 83, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 100, 102, 103, 107, 110, 112, 117, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 139, 140, 142, 143, 145, 149, 151, 152, 154, 155, 157, 159, 160, 161, 162, 164, 169, 172, 175, 176, 178, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 224, 227, 228, 229, 231, 232, 234, 236, 238, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 348, 364, 365, 383, 386], "bayesian": [154, 155, 157, 159, 160, 383, 395], "bayesianlinearsurrog": 237, "bayesianrecommend": 156, "bell_transform": 260, "block_deserialization_hook": 195, "block_serialization_hook": 196, "boolean": [284, 285, 286, 287], "both": 376, "botorch": [157, 340, 371, 372, 373], "botorch_function_wrapp": 289, "botorch_wrapp": [288, 289], "botorchrecommend": 158, "bound": [360, 393, 396], "break": 385, "build": 396, "bytes_to_human_read": 315, "cach": [390, 392], "callabl": 398, "campaign": [25, 26, 340, 341, 342, 343, 344, 345, 346, 349, 351, 352, 354, 355, 357, 358, 361, 366, 367, 369, 371, 372, 373, 374, 376, 377, 390], "cardinalityconstraint": 29, "case": 357, "catch_constant_target": 247, "categor": 107, "categoricalencod": 113, "categoricalparamet": [108, 394], "chang": 385, "changelog": 385, "check_if_in": 285, "chemic": 383, "chemistri": [290, 291, 292, 293, 294, 295, 296, 297], "class": 386, "classproperti": 274, "clone": 383, "closer_el": 320, "closest_el": 321, "cluster": [164, 395], "code": 386, "compar": 376, "compon": 360, "composit": 83, "compositekernel": 72, "condit": [35, 36, 391], "config": [377, 378, 390], "configur": [366, 367, 377, 397], "constraint": [27, 28, 30, 35, 39, 43, 53, 54, 55, 350, 351, 352, 353, 354, 355, 356, 357, 358, 391, 392, 396], "construct": [340, 341, 342, 343, 344, 345, 346, 351, 352, 371, 372, 373, 374, 393, 396], "constructor": [396, 397], "continu": [39, 176, 350, 352, 371, 372, 389, 391, 392, 394, 396, 401], "continuouscardinalityconstraint": 40, "continuousconstraint": 31, "continuouslinearconstraint": 32, "continuouslinearequalityconstraint": [41, 391], "continuouslinearinequalityconstraint": [42, 391], "continuousnonlinearconstraint": 33, "continuousparamet": 104, "contribut": 386, "contributor": 387, "conveni": 393, "convers": [298, 299, 393, 397], "convert": [197, 366], "convert_acqf": 23, "convert_bound": 312, "copi": 397, "core": [178, 181, 182, 194, 195, 196, 197, 198, 199, 200, 207, 208, 222, 229, 231], "creat": [340, 341, 342, 343, 345, 346, 349, 351, 352, 354, 355, 356, 357, 358, 366, 367, 369, 371, 372, 373, 376, 377, 380, 381, 390, 396], "create_example_plot": 324, "creation": [342, 343, 345, 390], "custom": [110, 218, 220, 341, 344, 346, 354, 359, 360, 363, 364, 365, 366, 367, 372, 399], "customdiscreteparamet": [111, 394], "customencod": 114, "customonnxsurrog": 219, "data": [342, 343, 345, 396, 401], "datafram": [300, 301, 302, 303, 304, 305, 306, 307, 308, 396, 397, 398], "de": [376, 397], "default": [232, 396, 397], "defaultkernelfactori": 233, "defaultscal": 173, "defin": [340, 341, 344, 346, 351, 352, 360, 361, 362, 369, 371, 372, 373, 374, 378, 380, 381, 383], "definit": [361, 364, 365], "depend": [355, 383, 394], "deprec": [93, 94, 385], "deprecationerror": 57, "descript": 369, "deseri": 397, "deserialize_datafram": 204, "design": [383, 386], "desir": [95, 97], "desirabilityobject": [96, 393], "develop": 386, "df_apply_dependency_augment": 270, "df_apply_permutation_augment": 271, "df_drop_single_value_column": 303, "df_drop_string_column": 304, "df_uncorrelated_featur": 305, "dictionari": [377, 378], "differ": 349, "dimens": 374, "discret": [43, 183, 186, 187, 188, 353, 354, 355, 356, 357, 373, 391, 394, 395, 396], "discretecardinalityconstraint": 44, "discreteconstraint": 34, "discretecustomconstraint": [45, 391], "discretedependenciesconstraint": [46, 391], "discreteexcludeconstraint": [47, 391], "discretelinkedparametersconstraint": [48, 391], "discretenolabelduplicatesconstraint": [49, 391], "discreteparamet": 105, "discretepermutationinvarianceconstraint": [50, 391], "discreteproductconstraint": [51, 391], "discretesamplingmethod": 329, "discretesumconstraint": [52, 391], "disk": 392, "do": 398, "docstr": 386, "document": 367, "doe": [364, 365], "dtypefloatnumpi": 317, "dtypefloatonnx": 318, "dtypefloattorch": 333, "dummi": 273, "edbo": 234, "edbokernelfactori": 235, "emptysearchspaceerror": 58, "encod": 394, "encount": 384, "end": 383, "enum": [98, 112, 254], "environ": 392, "equival": 397, "exampl": [341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 358, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 382, 383], "except": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "exceptiongroup": 384, "exclus": [356, 358], "expect": 401, "expectedimprov": 3, "experi": [354, 355, 356, 357, 358, 364, 365, 366, 367, 369, 376, 383, 398], "experiment": 390, "expir": 385, "explicit": 396, "extend": 386, "farthest_point_sampl": 330, "field": 397, "file": [377, 378], "find_subclass": 275, "finite_float": 336, "fix": 385, "float": 392, "fpsrecommend": 170, "fraction_to_float": 299, "from": [377, 383, 385, 390, 396, 397], "full": [340, 341, 342, 343, 344, 345, 346, 396], "function": [340, 341, 342, 343, 344, 345, 346, 349, 351, 352, 361, 369, 371, 372, 373, 374, 386, 398], "further": 390, "fuzzy_row_match": 306, "gammaprior": 133, "gaussian_process": [221, 222, 224, 227, 228, 229, 231, 232, 234], "gaussianmixtureclusteringrecommend": 165, "gaussianprocesspreset": 230, "gaussianprocesssurrog": 223, "gener": [380, 381, 386, 395], "geom_mean": 322, "get": [348, 390], "get_base_structure_hook": 198, "get_baseclass": 276, "get_canonical_smil": 291, "get_model_params_valid": 249, "get_parameters_from_datafram": 124, "get_subclass": 277, "get_transform_paramet": 190, "get_user_detail": 264, "github": 383, "global": 389, "group_duplicate_valu": 278, "guid": 402, "halfcauchyprior": 134, "halfnormalprior": 135, "hilberts_factori": 279, "hook": [359, 360, 361, 362], "how": 384, "hybrid": [344, 351, 374, 391], "implicit": 393, "import": [340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 358, 360, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381], "improv": 362, "inclus": 342, "incompatiblesearchspaceerror": 59, "incomplet": 345, "incorpor": 358, "index": 383, "indic": 383, "inequ": 391, "infiniteintervalerror": 310, "inform": [390, 395], "initi": [342, 349], "instal": 383, "instanc": 360, "instead": [366, 367], "instruct": 392, "internet": 392, "interrupt": 361, "interv": [309, 310, 311, 312, 313], "invok": 397, "irrelev": 401, "is_abstract": 286, "is_en": 265, "is_valid_smil": 292, "issu": 383, "iter": [351, 352, 364, 365, 366, 367, 369], "json": [390, 397], "kernel": [69, 70, 73, 74, 83], "kernel_factori": [224, 227], "kernelfactori": 225, "kmeansclusteringrecommend": 166, "known": 383, "learn": [379, 381, 389, 398, 401], "licens": [383, 388], "limit": 400, "linear": [236, 352], "linear_transform": 261, "linearkernel": 75, "link": 367, "local": [383, 389], "logexpectedimprov": 4, "lognormalprior": 136, "look_up_target": 210, "lookup": [209, 210, 342, 343, 345, 361, 380, 381, 398], "loop": [340, 341, 342, 343, 344, 345, 346, 380, 381, 383], "maintain": [383, 387], "make_gp_from_preset": 231, "mandatori": 393, "manual": [354, 355, 356, 357, 358], "match": 400, "match_attribut": 280, "maternkernel": 76, "max": 400, "mean": 398, "meanpredictionsurrog": 239, "measur": [348, 366, 367, 390], "mechan": [342, 343, 345], "memori": [314, 315], "memorys": 184, "meta": [142, 143, 145, 395], "metadata": 396, "metarecommend": 144, "method": [360, 389], "min": 400, "mixin": 201, "mixtur": 357, "mode": [346, 369, 400], "model": [349, 364, 365, 366, 367, 399], "monitor": 362, "monkeypatch": [360, 361, 362], "multi": [346, 368, 369], "multipl": [346, 398], "naiv": [149, 238], "naivehybridspacerecommend": 150, "name": 394, "name_to_smil": 293, "necessari": [341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 358, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378], "nest": 397, "ngboost": 240, "ngboostsurrog": 241, "nomcacquisitionfunctionerror": 60, "non_inf_float": 337, "non_nan_float": 338, "nonpredict": [161, 162, 164, 169], "nonpredictiverecommend": 163, "norecommenderslefterror": 61, "normalprior": 137, "notenoughpointslefterror": 62, "nothingtosimulateerror": 63, "numer": [117, 257, 316, 317, 318, 319, 320, 321, 322], "numericalcontinuousparamet": [118, 394], "numericaldiscreteparamet": [119, 394], "numericaltarget": [258, 400], "numericalunderflowerror": 64, "object": [87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 340, 341, 342, 343, 345, 346, 349, 351, 352, 354, 355, 356, 357, 358, 369, 371, 372, 373, 376, 380, 381, 383, 393, 397], "onnx": 366, "optim": [380, 381, 383, 390], "option": [383, 394, 395], "optionalimporterror": 65, "other": 349, "output": [366, 367], "packag": [383, 392], "pamclusteringrecommend": 167, "parallel": 390, "paramet": [102, 103, 106, 107, 110, 112, 117, 120, 121, 123, 124, 125, 126, 127, 128, 340, 341, 342, 343, 344, 345, 346, 349, 367, 390, 394, 396], "parameter_cartesian_prod_panda": 186, "parameter_cartesian_prod_polar": 187, "parameterencod": 115, "partial": 20, "partialacquisitionfunct": 21, "pass": 367, "perform": [340, 341, 342, 346, 369, 371, 372, 373, 374], "periodickernel": 77, "piecewisepolynomialkernel": 78, "plainkernelfactori": 226, "plot": [323, 324, 361, 362], "point": 392, "polar": 392, "polynomialkernel": 79, "posteriormean": 5, "posteriorstandarddevi": 6, "pre": 366, "precis": 392, "preset": [228, 229, 231, 232, 234], "pretrain": 366, "pretty_print_df": 307, "print": [354, 355, 357, 358, 369], "prior": [129, 130, 131, 132], "probabilityofimprov": 7, "probabl": 362, "problem": [361, 384], "product": [358, 396], "productkernel": 85, "pull": 386, "pure": [151, 152, 154, 155, 157, 159, 160, 161, 162, 164, 169, 389, 395], "purerecommend": 153, "pycharm": 384, "pytorch": 365, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedimprov": 12, "qnegintegratedposteriorvari": 13, "qnoisyexpectedimprov": 14, "qprobabilityofimprov": 15, "qsimpleregret": 16, "quick": 383, "qupperconfidencebound": 17, "random": [325, 326, 327], "random_forest": 242, "randomforestsurrog": 243, "randomrecommend": 171, "rbfkernel": 80, "recommend": [139, 140, 142, 143, 145, 149, 151, 152, 154, 155, 157, 159, 160, 161, 162, 164, 169, 348, 349, 366, 367, 371, 372, 373, 374, 376, 390, 395], "recommenderprotocol": 141, "reduct": 389, "refers_to": 281, "regist": 360, "register_custom_architectur": 220, "register_hook": 282, "registr": [364, 365], "remov": 385, "represent": 396, "request": 386, "restrict": 396, "result": [361, 362], "revers": 391, "rffkernel": 81, "role": 401, "rqkernel": 82, "run": [351, 352, 364, 365], "sampl": [169, 389, 395], "sample_numerical_df": 331, "sampling_algorithm": [328, 330, 331], "scalar": [97, 99], "scalekernel": 86, "scaler": [172, 174], "scenario": [211, 212, 398], "scope": 392, "search": [380, 383, 389, 395, 396], "searchspac": [175, 176, 178, 179, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 340, 341, 342, 344, 345, 346, 349, 351, 352, 354, 355, 356, 357, 358, 369, 370, 371, 372, 373, 374, 381], "searchspacetyp": 180, "see": 401, "select_constructor_hook": 199, "sequenti": [145, 390], "sequential_greedi": [159, 160], "sequentialgreedyrecommend": 160, "sequentialmetarecommend": 146, "serial": [193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 364, 365, 375, 376, 390, 397], "serialize_datafram": 205, "serialmixin": 202, "set": [361, 362, 380, 381], "set_random_se": 326, "setup": [348, 354, 355, 356, 357, 358, 364, 365, 366, 367, 369, 376], "signatur": 360, "simplex": 396, "simul": [206, 207, 208, 209, 210, 211, 212, 213, 214, 340, 341, 342, 343, 344, 345, 346, 361, 380, 381, 398], "simulate_experi": 208, "simulate_scenario": 212, "simulate_transfer_learn": 214, "singl": [100, 392, 398], "singletargetobject": [101, 393], "sklearn": 364, "sklearnclusteringrecommend": 168, "smile": 121, "smiles_to_fp_featur": 294, "smiles_to_molecul": 295, "smiles_to_mordred_featur": 296, "smiles_to_rdkit_featur": 297, "smoothedboxprior": 138, "some": [351, 352, 369], "space": [374, 380, 383, 389, 395, 396], "stage": 366, "start": 383, "stop": 361, "str_to_acqf": 24, "strategi": [349, 383], "streamingsequentialmetarecommend": 147, "string": [377, 397], "strtobool": 287, "structure_object": 94, "sub": 389, "subselectioncondit": [37, 391], "subspac": 396, "subspacecontinu": 177, "subspacediscret": 185, "substanc": [120, 121, 383], "substanceencod": 116, "substanceparamet": [122, 394], "suitabl": 349, "sum": 358, "surrog": [215, 216, 217, 218, 220, 221, 222, 224, 227, 228, 229, 231, 232, 234, 236, 238, 240, 242, 244, 245, 246, 247, 248, 249, 250, 349, 363, 364, 365, 366, 367, 399], "synchron": 386, "synthet": [371, 373, 374], "tabl": [342, 343, 345, 380, 381, 383], "target": [251, 252, 253, 254, 257, 259, 260, 261, 262, 346, 360, 368, 369, 393, 400], "targetmod": 255, "targettransform": 256, "task": [380, 381], "taskparamet": [109, 394, 401], "technologi": 401, "telemetri": [263, 264, 265, 266, 267, 383, 392], "telemetry_record_recommended_measurement_percentag": 266, "telemetry_record_valu": 267, "temporary_se": 327, "terminologi": [397, 398, 401], "test": [340, 341, 344, 346, 351, 352, 371, 372, 373, 374], "thi": [341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 358, 369, 371, 373, 374], "thresholdcondit": [38, 391], "through": 401, "to_kernel_factori": 227, "to_object": 92, "to_searchspac": 181, "to_tensor": 308, "to_tupl": 283, "toler": 390, "tool": 386, "torch": [332, 333, 334], "train": 366, "transfer": [379, 381, 398, 401], "transfer_learn": [213, 214], "transform": [259, 260, 261, 262, 369], "treasur": 401, "triangular_transform": 262, "trigger": [360, 362], "two": 378, "twophasemetarecommend": 148, "type": 397, "uncertainti": 389, "unidentifiedsubclasserror": 66, "uninstal": 392, "uninterrupt": 361, "unlock": 401, "unmatchedattributeerror": 67, "unstructure_bas": 200, "unusedobjectwarn": 68, "upperconfidencebound": 8, "us": [340, 341, 342, 343, 344, 345, 346, 348, 349, 354, 355, 356, 357, 358, 364, 365, 366, 367, 369, 371, 372, 373, 374, 396, 397, 398, 399], "use_fallback_constructor_hook": 313, "user": 402, "util": [22, 23, 24, 123, 124, 203, 204, 205, 244, 245, 246, 247, 268, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338], "v": [360, 384, 390], "valid": [53, 54, 55, 125, 126, 127, 128, 189, 190, 191, 192, 248, 249, 250, 335, 336, 337, 338, 367, 378], "validate_cardinality_constraints_are_nonoverlap": 54, "validate_constraint": 55, "validate_custom_architecture_cl": 250, "validate_decorrel": 126, "validate_is_finit": 127, "validate_paramet": 192, "validate_parameter_nam": 191, "validate_searchspace_from_config": 182, "validate_simplex_subspace_from_config": 188, "validate_unique_valu": 128, "valu": [396, 397], "variabl": 392, "varname_numpy_use_single_precis": 319, "varname_torch_use_single_precis": 334, "verif": [354, 355, 356, 357, 358, 378], "verifi": 352, "we": 398, "what": 398, "when": 384, "within": 396, "workflow": 386, "write": 386}})