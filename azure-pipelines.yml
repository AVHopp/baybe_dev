# Format and lint code

trigger:
  branches:
    include:
    - master

stages:

- stage: Changelog
  displayName: Assert changelog entry exists

  jobs:
    - job: "Changelog"

      pool:
        vmImage: 'ubuntu-latest'

      steps:
      - script: |
          CURRENT_COMMIT=`git rev-parse HEAD`
          git checkout main
          git checkout $CURRENT_COMMIT
          NUM_ADDED=`git diff --numstat main CHANGELOG.md | cut -d$'\t' -f1`
          echo $NUM_ADDED
          if [ "$NUM_ADDED" -gt "0" ]; then
            echo "$NUM_ADDED lines have been added to CHANGELOG.md"
            exit 0
          else
            echo "Nothing has been added to CHANGELOG.md"
            exit 1
          fi
        continueOnError: true

- stage: Lint
  displayName: Format and lint code

  jobs:
    - job: "Lint"

      pool:
        vmImage: 'ubuntu-latest'

      variables:
        CONDA_ENV: baybe
        CONDA_HOME: /usr/share/miniconda/envs/$(CONDA_ENV)/

      steps:
      - checkout: self

      - script: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: Add conda to PATH

      - task: Cache@2
        displayName: Use cached conda environment
        inputs:
          key: conda | environment.yml
          path: $(CONDA_HOME)
          cacheHitVar: CONDA_CACHE_RESTORED

      - script: |
          conda install --yes -c conda-forge mamba
          mamba env create --file environment.yml
        displayName: Create conda environment (if not restored from cache)
        condition: eq(variables.CONDA_CACHE_RESTORED, 'false')

      - script: |
          source activate $(CONDA_ENV)
          python -m ufmt .
        displayName: "Run ufmt code formatter"

      - script: |
          source activate $(CONDA_ENV)
          python -m flake8 .
        displayName: "Run flake8 code linter"

      - script: |
          source activate $(CONDA_ENV)
          python -m pylint --recursive=yes .
        displayName: "Run pylint code linter"
