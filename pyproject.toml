[project]
name = "baybe"
description = "Bayesian Back End for Design of Experiments"
authors = [
    {name = "Martin Fitzner (Merck KGaA, Darmstadt, Germany)", email = "martin.fitzner@merckgroup.com"},
    {name = "Adrian Šošić (Merck KGaA, Darmstadt, Germany)", email = "adrian.sosic@merckgroup.com"},
    {name = "Alexander Hopp (Merck KGaA, Darmstadt, Germany)", email = "alexander.hopp@merckgroup.com"},
    {name = "Alex Lee (Merck KGaA, Darmstadt, Germany)", email = "alex.lee@emdgroup.com"},
]
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python =">=3.8.6"
dependencies = [
    "attrs>=22.2.0",
    "botorch>=0.8.1",
    "cattrs>=22.2.0",
    "fsspec>=2022.10.0",
    "funcy>=1.17",
    "gpytorch>=1.9.1",
    "mordred>=1.2.0",
    "ngboost>=0.3.12",
    "numpy>=1.24.1",
    "opentelemetry-sdk>=1.16.0",
    "opentelemetry-propagator-aws-xray>=1.0.0",
    "opentelemetry-exporter-otlp>=1.16.0",
    "opentelemetry-sdk-extension-aws>=2.0.0",
    "pandas>=1.4.2",
    "protobuf<=3.20.3",
    "rdkit>=2022.3.4",
    "scikit-learn>=1.1.1",
    "scikit-learn-extra>=0.3.0",
    "scipy>=1.10.1",
    "setuptools-scm>=7.1.0",
    "torch>=1.11.0",
]
dynamic = ['version']

# DEV TOOLS NOTE: The versions of all dev tools should be consistent everywhere
# (pre-commit, environment.yml, requirements.txt, pyproject.toml, ...)

[project.optional-dependencies]
dev = [
    "baybe[docs]",
    "black==22.3.0",  # see DEV TOOLS NOTE
    "flake8==4.0.1",  # see DEV TOOLS NOTE
    "matplotlib>=3.6.3",
    "mypy>=1.2.0",
    "openpyxl>=3.0.9",
    "pip-audit>=2.5.5",
    "pip-tools>=7.3.0",
    "plotly>=5.10.0",
    "pre-commit==2.19.0",  # see DEV TOOLS NOTE
    "pylint==2.17.2",  # see DEV TOOLS NOTE
    "pytest>=7.2.0",
    "pytest-cov>=4.1.0",
    "seaborn>=0.12.2",
    "streamlit>=1.20.0",
    "ufmt==1.3.2",  # see DEV TOOLS NOTE
    "usort==1.0.2",  # see DEV TOOLS NOTE
]

docs = [
    "p2j>=1.3.2",
    "jupyter>=1.0.0",
]

[build-system]
requires = [
    "setuptools>=45",
	"setuptools_scm[toml]>=6.2"
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
version_scheme = 'post-release'
local_scheme = "dirty-tag"

[tool.setuptools]
packages = ["baybe"]

[tool.black]
line-length = 88

[tool.pylint.TYPECHECK]
# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E1101 when accessed. Python regular
# expressions are accepted.
generated-members = "torch.*"

[tool.pylint.'MESSAGES CONTROL']
disable = [
    "broad-except",  # catching base exception is common for RDKit mol validation etc
    "duplicate-code",  # duplicate code happens eg in similar debug scripts
    "cyclic-import",  # seems like it commonly produces false positives
	"fixme",  # fixme hints should be allowed
	"too-many-instance-attributes",  # BayBE class has quite a few members
	"too-many-branches",  # can maybe be optimized later
    "too-few-public-methods",  # too strict, this happens in several places
	"no-member",  # seems RDKit objects in some modules can never be found by IDEs
    "no-name-in-module",  # seems RDKit objects in some modules can never be found by IDEs
    "too-many-arguments",  # too strict (encountered in history module)
    "too-many-locals",  # too strict (encountered in history module)
	"too-many-nested-blocks",  # too strict (encountered in history module)
	"too-many-statements",  # too strict (encountered in history module)
	"unsubscriptable-object",  # well known false positive
	# -> see https://github.com/PyCQA/pylint/issues/1498
    "wrong-import-order",  # handled by ufmt
	]

[tool.pylint.BASIC]
good-names=["i", "j", "k", "x", "y", "ex", "df", "fh"] # allow these variable names

[tool.mypy]
files = [
    "baybe/core.py",
    "baybe/parameters.py",
    "baybe/searchspace.py",
]

[[tool.mypy.overrides]]
module = 'scipy.spatial.distance'
ignore_missing_imports = true

# TODO[12327]: Find a way to automatically install all mypy stubs during the
#   installation, to avoid having to call "mypy --install-types" afterwards.

[tool.usort]
first_party = ["baybe"]