[project]
name = "baybe"
description = "Bayesian Back End for Design of Experiments"
authors = [
    {name = "Martin Fitzner (Merck KGaA, Darmstadt, Germany)", email = "martin.fitzner@merckgroup.com"},
    {name = "Adrian Šošić (Merck KGaA, Darmstadt, Germany)", email = "adrian.sosic@merckgroup.com"},
]
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python =">=3.8.6"
dependencies = [
    "attrs>=22.2.0",
    "botorch>=0.8.1",
    "fsspec>=2022.10.0",
    "funcy>=1.17",
    "gpytorch>=1.9.1",
    "mordred>=1.2.0",
    "ngboost>=0.3.12",
    "numpy<=1.23.4, >=1.20.0",
    "pandas>=1.4.2",
    "pydantic>=1.9.1",
    "rdkit>=2022.3.4",
    "scikit-learn>=1.1.1",
    "scipy>=1.9.3",
    "torch>=1.11.0",
]
dynamic = ['version']

# FORMATTER NOTE: The versions of ufmt, black and usort should be consistent everywhere
# (pre-commit, environment.yml, requirements.txt, pyproject.toml, ...)

[project.optional-dependencies]
dev = [
    "black>=22.3.0",  # see FORMATTER NOTE
    "flake8>=4.0.1",
    "matplotlib>=3.5.2",
    "openpyxl>=3.0.9",
    "plotly>=5.10.0",
    "pre-commit>=2.19.0",
    "pylint>=2.13.9",
    "pytest>=7.2.0",
    "seaborn>=0.11.2",
    "streamlit>=1.10.0",
    "ufmt>=1.3.2",  # see FORMATTER NOTE
    "usort>=1.0.2",  # see FORMATTER NOTE
]
extra = [
    "scikit-learn-extra>=0.2.0",
]

[build-system]
requires = [
    "setuptools>=45",
	"setuptools_scm[toml]>=6.2"
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
version_scheme = "no-guess-dev"
local_scheme = "no-local-version"

[tool.setuptools]
packages = ["baybe"]

[tool.black]
line-length = 88

[tool.pylint.TYPECHECK]
# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E1101 when accessed. Python regular
# expressions are accepted.
generated-members = "torch.*"

[tool.pylint.MASTER]
# Add pydantic to whitelist according to https://github.com/samuelcolvin/pydantic/issues/1961
extension-pkg-whitelist = "pydantic"

[tool.pylint.'MESSAGES CONTROL']
disable = [
	"fixme",  # fixme hints should be allowed
	"wrong-import-order",  # handled by ufmt
	"duplicate-code",  # duplicate code happens eg in similar debug scripts
	"too-many-instance-attributes",  # BayBE class has quite a few members
	"too-many-branches",  # can maybe be optimized later
	"too-few-public-methods",  # this happens e.g. in pydantic BaseModel classes
	"no-self-use",  # should be replaced with a more specific fix for pydantic validators
	# -> https://github.com/PyCQA/pylint/issues/6900
	"no-self-argument",  # should be replaced with a more specific fix for pydantic validators
	# -> https://github.com/PyCQA/pylint/issues/6900
	"broad-except", # catching base exception is common for RDKit mol validation etc
	"no-name-in-module", # seems RDKit objects in some modules can never be found by IDEs
	"no-member", # seems RDKit objects in some modules can never be found by IDEs
	"too-many-nested-blocks", # too strict (encountered in history module)
	"too-many-locals", # too strict (encountered in history module)
	"too-many-arguments", # too strict (encountered in history module)
	"too-many-statements", # too strict (encountered in history module)
	"unsubscriptable-object", # well known false positive
	# -> see https://github.com/PyCQA/pylint/issues/1498
	]

[tool.pylint.BASIC]
good-names=["i", "j", "k", "x", "y", "ex", "df", "fh"] # allow these variable names
