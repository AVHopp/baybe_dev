[project]
name = "BayBE"
description = "Bayesian Back End for Design of Experiments"
authors = [
    {name = "Martin Fitzner", email = "martin.fitzner@merckgroup.com"},
    {name = "Adrian Šošić", email = "adrian.sosic@merckgroup.com"},
]
requires-python =">=3.8"
dependencies = [
    "botorch>=0.6.4",
]

[project.optional-dependencies]
dev = [
    "flake8>=4.0.1",
    "pre-commit>=2.19.0",
    "pylint>=2.13.9",
    "ufmt>=1.3.2",
]

[tool.black]
line-length = 88

[tool.pylint.TYPECHECK]
# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E1101 when accessed. Python regular
# expressions are accepted.
generated-members = "torch.*"

[tool.pylint.MASTER]
# Add pydantic to whitelist according to https://github.com/samuelcolvin/pydantic/issues/1961
extension-pkg-whitelist = "pydantic"

[tool.pylint.'MESSAGES CONTROL']
disable = [
	"fixme",  # fixme hints should be allowed
	"wrong-import-order",  # handled by ufmt
	"duplicate-code",  # duplicate code happens eg in similar debug scripts
	"too-many-instance-attributes",  # BayBE class has quite a few members
	"too-many-branches",  # can maybe be optimized later
	"too-few-public-methods",  # this happens e.g. in pydantic BaseModel classes
	"no-self-use",  # should be replaced with a more specific fix for pydantic validators
	# -> https://github.com/PyCQA/pylint/issues/6900
	"no-self-argument",  # should be replaced with a more specific fix for pydantic validators
	# -> https://github.com/PyCQA/pylint/issues/6900
	"broad-except", # catching base exception is common for RDKit mol validation etc
	"no-name-in-module", # seems RDKit objects in some modules can never be found by IDEs
	"no-member", # seems RDKit objects in some modules can never be found by IDEs
	]

[tool.pylint.BASIC]
good-names=["i", "j", "k", "ex", "df"] # allow these variable names
